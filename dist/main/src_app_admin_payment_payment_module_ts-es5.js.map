{"version":3,"sources":["webpack:///src/app/admin/payment/add-payment/add-payment.component.html","webpack:///src/app/admin/payment/add-payment/add-payment.component.ts","webpack:///src/app/admin/payment/allpayment/allpayment.component.html","webpack:///src/app/admin/payment/allpayment/allpayment.component.ts","webpack:///src/app/admin/payment/allpayment/dialog/delete/delete.component.ts","webpack:///src/app/admin/payment/allpayment/dialog/delete/delete.component.html","webpack:///src/app/admin/payment/allpayment/dialog/form-dialog/form-dialog.component.html","webpack:///src/app/admin/payment/allpayment/dialog/form-dialog/form-dialog.component.ts","webpack:///src/app/admin/payment/allpayment/payment.model.ts","webpack:///src/app/admin/payment/allpayment/payment.service.ts","webpack:///src/app/admin/payment/invoice/invoice.component.ts","webpack:///src/app/admin/payment/invoice/invoice.component.html","webpack:///src/app/admin/payment/payment-routing.module.ts","webpack:///src/app/admin/payment/payment.module.ts"],"names":["AddPaymentComponent","fb","paymentForm","group","bNo","Validators","pName","dName","pDate","dDate","discount","total","pMethod","pStatus","console","log","value","onSubmit","$event","stopPropagation","selection","AllpaymentComponent","httpClient","dialog","paymentService","snackBar","displayedColumns","SelectionModel","loadData","tempDirection","localStorage","getItem","dialogRef","open","FormDialogComponent","data","payment","action","direction","subs","sink","afterClosed","subscribe","result","exampleDatabase","dataChange","unshift","getDialogData","refreshTable","showNotification","row","id","foundIndex","findIndex","x","i","index","DeleteDialogComponent","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","d","PaymentService","ExampleDataSource","sort","fromEvent","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","UnsubscribeOnDestroyAdapter","MatPaginator","MatSort","removeSelectedRows","addNew","refresh","_sort","filterChange","BehaviorSubject","filteredData","pageIndex","next","displayDataChanges","sortChange","page","getAllPayments","merge","pipe","map","slice","searchStr","charges","date","tax","toLowerCase","indexOf","sortedData","sortData","startIndex","active","a","b","propertyA","propertyB","valueA","isNaN","valueB","DataSource","close","deletePayment","MAT_DIALOG_DATA","confirmDelete","onNoClick","formControl","FormControl","dialogTitle","Payment","createContactForm","hasError","addPayment","getRawValue","confirmAdd","getRandomID","S4","Math","random","toString","substring","API_URL","isTblLoading","dialogData","get","error","name","message","InvoiceComponent","routes","path","component","Page404Component","PaymentRoutingModule","RouterModule","PaymentModule","CommonModule","FormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatCheckboxModule","MatSortModule","MatToolbarModule","MatDatepickerModule","MatSelectModule","MatProgressSpinnerModule","ReactiveFormsModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCoB;;AACE;;AACF;;;;;;AASA;;AACE;;AACF;;;;;;AAsBA;;AACE;;AACF;;;;;;AAWA;;AACE;;AACF;;;;;;AA4CA;;AACE;;AACF;;;;;;AAmBA;;AACE;;AACF;;;;UCjJPA,oB;AAEX,sCAAoBC,EAApB,EAAqC;AAAA;;AAAjB,eAAAA,EAAA,GAAAA,EAAA;AAClB,eAAKC,WAAL,GAAmB,KAAKD,EAAL,CAAQE,KAAR,CAAc;AAC/BC,eAAG,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAC,UAAA,SAAD,CAAL,CAD0B;AAE/BC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAD,UAAA,SAAD,CAAL,CAFwB;AAG/BE,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAF,UAAA,SAAD,CAAL,CAHwB;AAI/BG,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAH,UAAA,SAAD,CAAL,CAJwB;AAK/BI,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAJ,UAAA,SAAD,CAAL,CALwB;AAM/BK,oBAAQ,EAAE,CAAC,EAAD,CANqB;AAO/BC,iBAAK,EAAE,CAAC,EAAD,CAPwB;AAQ/BC,mBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAP,UAAA,SAAD,CAAL,CARsB;AAS/BQ,mBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAR,UAAA,SAAD,CAAL;AATsB,WAAd,CAAnB;AAWD;;;;iBACD,oBAAW;AACTS,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKb,WAAL,CAAiBc,KAA3C;AACD;;;;;;;yBAjBUhB,oB,EAAmB,wH;AAAA,O;;;cAAnBA,oB;AAAmB,wC;AAAA,kB;AAAA,gB;AAAA,qyC;AAAA;AAAA;ADPhC;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAW;;AACpC;;AACA;;AACE;;AACE;;AAA4B;;AAAI;;AACpC;;AACA;;AACE;;AAAoC;;AAAO;;AAC7C;;AACA;;AAAmC;;AAAW;;AAChD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAQ;;AAAmB;;AAAS;;AAE1C;;AACA;;AACE;;AAA4C;AAAA,qBAAY,IAAAiB,QAAA,EAAZ;AAAsB,aAAtB;;AAC1C;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAY;;AACvB;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAY;;AACvB;;AACA;;AACA;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA4D;;AAAM;;AAClE;;AAAiC;;AAAM;;AACzC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AA3I8B;;AAAA;;AAME;;AAAA;;AAWA;;AAAA;;AAWE;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIF;;AAAA;;AAUI;;AAAA;;AACiB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","file":"src_app_admin_payment_payment_module_ts-es5.js","sourcesContent":["<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Add Payment</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Payment</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Add Payment</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2><strong>Payment Information</strong></h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"paymentForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Bill No</mat-label>\r\n                    <input matInput formControlName=\"bNo\" required>\r\n                    <mat-error *ngIf=\"paymentForm.get('bNo').hasError('required')\">\r\n                      Bill Number is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Patient Name</mat-label>\r\n                    <input matInput formControlName=\"pName\" required>\r\n                    <mat-error *ngIf=\"paymentForm.get('pName').hasError('required')\">\r\n                      Patient Name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Doctor Name</mat-label>\r\n                    <mat-select formControlName=\"dName\" required>\r\n                      <mat-option [value]=\"'1'\">\r\n                        DR. John Deo\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'2'\">\r\n                        Dr.Rajesh\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'3'\">\r\n                        DR. Megha Trivedi\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'4'\">\r\n                        DR. Smith\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"paymentForm.get('dName').hasError('required')\">\r\n                      Doctor name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Payment Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"pDate\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"paymentForm.get('pDate').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Discount</mat-label>\r\n                    <input matInput formControlName=\"discount\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Total Ammount</mat-label>\r\n                    <input matInput formControlName=\"total\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Payment Method</mat-label>\r\n                    <mat-select formControlName=\"pMethod\" required>\r\n                      <mat-option [value]=\"'1'\">\r\n                        Cash\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'2'\">\r\n                        Cheque\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'3'\">\r\n                        Credit Card\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'4'\">\r\n                        Debit Card\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'5'\">\r\n                        Net Banking\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'6'\">\r\n                        Insurence\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"paymentForm.get('pMethod').hasError('required')\">\r\n                      Payment Method is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Payment Status</mat-label>\r\n                    <mat-select formControlName=\"pStatus\" required>\r\n                      <mat-option [value]=\"'1'\">\r\n                        Complete\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'2'\">\r\n                        Pending\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'3'\">\r\n                        Partial\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"paymentForm.get('pStatus').hasError('required')\">\r\n                      Payment Status is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <button class=\"btn-space\" mat-raised-button color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-add-payment\",\r\n  templateUrl: \"./add-payment.component.html\",\r\n  styleUrls: [\"./add-payment.component.sass\"],\r\n})\r\nexport class AddPaymentComponent {\r\n  paymentForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.paymentForm = this.fb.group({\r\n      bNo: [\"\", [Validators.required]],\r\n      pName: [\"\", [Validators.required]],\r\n      dName: [\"\", [Validators.required]],\r\n      pDate: [\"\", [Validators.required]],\r\n      dDate: [\"\", [Validators.required]],\r\n      discount: [\"\"],\r\n      total: [\"\"],\r\n      pMethod: [\"\", [Validators.required]],\r\n      pStatus: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log(\"Form Value\", this.paymentForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">All Payment</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Payments</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">All Payment</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"table-responsive\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ms-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Payment</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"pName\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Patient Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.pName}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"dName\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Doctor Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.dName}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"charges\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Charges</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.charges}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy'}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"tax\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Tax</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.tax}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"disc\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Discount</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.discount}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"total\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Total</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.total}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(i, row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { PaymentService } from \"./payment.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { Payment } from \"./payment.model\";\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { FormDialogComponent } from \"./dialog/form-dialog/form-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./dialog/delete/delete.component\";\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n\r\n@Component({\r\n  selector: \"app-allpayment\",\r\n  templateUrl: \"./allpayment.component.html\",\r\n  styleUrls: [\"./allpayment.component.sass\"],\r\n})\r\nexport class AllpaymentComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    \"select\",\r\n    \"pName\",\r\n    \"dName\",\r\n    \"charges\",\r\n    \"date\",\r\n    \"tax\",\r\n    \"disc\",\r\n    \"total\",\r\n    \"actions\",\r\n  ];\r\n  exampleDatabase: PaymentService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Payment>(true, []);\r\n  index: number;\r\n  id: number;\r\n  payment: Payment | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public paymentService: PaymentService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        payment: this.payment,\r\n        action: \"add\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.paymentService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-success\",\r\n          \"Add Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        payment: row,\r\n        action: \"edit\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.paymentService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"black\",\r\n          \"Edit Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(i: number, row) {\r\n    this.index = i;\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-danger\",\r\n          \"Delete Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Payment>(true, []);\r\n    });\r\n    this.showNotification(\r\n      \"snackbar-danger\",\r\n      totalSelect + \" Record Delete Successfully...!!!\",\r\n      \"bottom\",\r\n      \"center\"\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new PaymentService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, \"keyup\").subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, \"\", {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Payment> {\r\n  filterChange = new BehaviorSubject(\"\");\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Payment[] = [];\r\n  renderedData: Payment[] = [];\r\n  constructor(\r\n    public exampleDatabase: PaymentService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Payment[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllPayments();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((payment: Payment) => {\r\n            const searchStr = (\r\n              payment.pName +\r\n              payment.dName +\r\n              payment.charges +\r\n              payment.date +\r\n              payment.tax\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Payment[]): Payment[] {\r\n    if (!this._sort.active || this._sort.direction === \"\") {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = \"\";\r\n      let propertyB: number | string = \"\";\r\n      switch (this._sort.active) {\r\n        case \"id\":\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case \"pName\":\r\n          [propertyA, propertyB] = [a.pName, b.pName];\r\n          break;\r\n        case \"dName\":\r\n          [propertyA, propertyB] = [a.dName, b.dName];\r\n          break;\r\n        case \"charges\":\r\n          [propertyA, propertyB] = [a.charges, b.charges];\r\n          break;\r\n        case \"date\":\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n        case \"discount\":\r\n          [propertyA, propertyB] = [a.discount, b.discount];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { PaymentService } from \"../../payment.service\";\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public paymentService: PaymentService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.paymentService.deletePayment(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n\r\n      <li>\r\n        <p><span class=\"font-weight-bold\">Patient Name: </span>{{ data.pName }}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"font-weight-bold\">Doctor Name: </span>{{data.dName}}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"font-weight-bold\">Total: </span>{{data.total}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 msl-3 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"paymentForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Patient Name</mat-label>\r\n            <input matInput formControlName=\"pName\" required>\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"paymentForm.get('pName').hasError('required')\">\r\n              Patient Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Doctor Name</mat-label>\r\n            <input matInput formControlName=\"dName\" required>\r\n            <mat-icon matSuffix>perm_identity</mat-icon>\r\n            <mat-error *ngIf=\"paymentForm.get('dName').hasError('required')\">\r\n              Doctor Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"paymentForm.get('date').hasError('required')\">\r\n              Please select date\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Charges</mat-label>\r\n            <input matInput formControlName=\"charges\">\r\n            <mat-icon matSuffix>attach_money</mat-icon>\r\n            <mat-error *ngIf=\"paymentForm.get('charges').hasError('required')\">\r\n              Charges is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Tax</mat-label>\r\n            <input matInput formControlName=\"tax\">\r\n            <mat-icon matSuffix>description</mat-icon>\r\n            <mat-error *ngIf=\"paymentForm.get('tax').hasError('required')\">\r\n              Tax is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Discount</mat-label>\r\n            <input matInput formControlName=\"discount\">\r\n            <mat-icon matSuffix>local_activity</mat-icon>\r\n            <mat-error *ngIf=\"paymentForm.get('discount').hasError('required')\">\r\n              Discount is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Total</mat-label>\r\n            <input matInput formControlName=\"total\">\r\n            <mat-icon matSuffix>receipt</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!paymentForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { PaymentService } from \"../../payment.service\";\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder,\r\n} from \"@angular/forms\";\r\nimport { Payment } from \"../../payment.model\";\r\n@Component({\r\n  selector: \"app-form-dialog\",\r\n  templateUrl: \"./form-dialog.component.html\",\r\n  styleUrls: [\"./form-dialog.component.sass\"],\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  paymentForm: FormGroup;\r\n  payment: Payment;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public paymentService: PaymentService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === \"edit\") {\r\n      this.dialogTitle = data.payment.pName;\r\n      this.payment = data.payment;\r\n    } else {\r\n      this.dialogTitle = \"New Payment\";\r\n      this.payment = new Payment({});\r\n    }\r\n    this.paymentForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl(\"\", [\r\n    Validators.required,\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError(\"required\")\r\n      ? \"Required field\"\r\n      : this.formControl.hasError(\"email\")\r\n      ? \"Not a valid email\"\r\n      : \"\";\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.payment.id],\r\n      pName: [this.payment.pName],\r\n      dName: [this.payment.dName],\r\n      charges: [this.payment.charges],\r\n      date: [this.payment.date],\r\n      tax: [this.payment.tax],\r\n      discount: [this.payment.discount],\r\n      total: [this.payment.total],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.paymentService.addPayment(this.paymentForm.getRawValue());\r\n  }\r\n}\r\n","export class Payment {\r\n  id: number;\r\n  pName: string;\r\n  dName: string;\r\n  charges: string;\r\n  tax: string;\r\n  date: string;\r\n  discount: string;\r\n  total: string;\r\n  constructor(payment) {\r\n    {\r\n      this.id = payment.id || this.getRandomID();\r\n      this.pName = payment.pName || \"\";\r\n      this.dName = payment.dName || \"\";\r\n      this.charges = payment.charges || \"\";\r\n      this.tax = payment.tax || \"\";\r\n      this.date = payment.date || \"\";\r\n      this.discount = payment.discount || \"\";\r\n      this.total = payment.total || \"\";\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Payment } from \"./payment.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n@Injectable()\r\nexport class PaymentService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = \"assets/data/payment.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Payment[]> = new BehaviorSubject<Payment[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): Payment[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllPayments(): void {\r\n    this.subs.sink = this.httpClient.get<Payment[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + \" \" + error.message);\r\n      }\r\n    );\r\n  }\r\n  addPayment(payment: Payment): void {\r\n    this.dialogData = payment;\r\n\r\n    /*  this.httpClient.post(this.API_URL, payment).subscribe(data => {\r\n      this.dialogData = payment;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updatePayment(payment: Payment): void {\r\n    this.dialogData = payment;\r\n\r\n    /* this.httpClient.put(this.API_URL + payment.id, payment).subscribe(data => {\r\n      this.dialogData = payment;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deletePayment(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\n@Component({\r\n  selector: \"app-invoice\",\r\n  templateUrl: \"./invoice.component.html\",\r\n  styleUrls: [\"./invoice.component.sass\"],\r\n})\r\nexport class InvoiceComponent implements OnInit {\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Invoice</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Payment</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Invoice</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"white-box\">\r\n                  <h3>\r\n                    <b>INVOICE</b>\r\n                    <span class=\"float-end\">#345766</span>\r\n                  </h3>\r\n                  <hr>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"float-start\">\r\n                        <address>\r\n                          <img src=\"assets/images/invoice_logo.png\" alt=\"logo\" class=\"logo-default\" />\r\n                          <p class=\"text-muted m-l-5\">\r\n                            D 103, Cliniva Hospital, <br> Opp. Town Hall, <br>\r\n                            Sardar Patel Road, <br> Ahmedabad - 380015\r\n                          </p>\r\n                        </address>\r\n                      </div>\r\n                      <div class=\"float-end text-end\">\r\n                        <address>\r\n                          <p class=\"addr-font-h3 font-bold\">BILL TO :</p>\r\n                          <p class=\"font-bold addr-font-h4\">Jayesh Patel</p>\r\n                          <p class=\"text-muted m-l-30\">\r\n                            207, Prem Sagar Appt.,\r\n                            <br> Near Income Tax Office,\r\n                            <br> Ashram Road,\r\n                            <br> Ahmedabad - 380057\r\n                          </p>\r\n                          <p class=\"m-t-30\">\r\n                            <b>Invoice Date :</b>\r\n                            <i class=\"fa fa-calendar\"></i> 14th July 2017\r\n                          </p>\r\n                          <p>\r\n                            <b>Status :</b>\r\n                            <span class=\"label label-success\">Success</span>\r\n                          </p>\r\n                        </address>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"table-responsive m-t-40\">\r\n                        <table class=\"table table-hover\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th class=\"text-center\">#</th>\r\n                              <th>Detail</th>\r\n                              <th class=\"text-end\">Quantity</th>\r\n                              <th class=\"text-end\">Unit Cost</th>\r\n                              <th class=\"text-end\">Charges</th>\r\n                              <th class=\"text-end\">Discount</th>\r\n                              <th class=\"text-end\">Total</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td class=\"text-center\">1</td>\r\n                              <td>Visiting Charges</td>\r\n                              <td class=\"text-end\">-</td>\r\n                              <td class=\"text-end\">-</td>\r\n                              <td class=\"text-end\">$100</td>\r\n                              <td class=\"text-end\">-</td>\r\n                              <td class=\"text-end\">$100</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td class=\"text-center\">2</td>\r\n                              <td>Medicines</td>\r\n                              <td class=\"text-end\">10</td>\r\n                              <td class=\"text-end\">$15</td>\r\n                              <td class=\"text-end\">$150</td>\r\n                              <td class=\"text-end\">5</td>\r\n                              <td class=\"text-end\">$1000</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td class=\"text-center\">3</td>\r\n                              <td>X-ray Reports</td>\r\n                              <td class=\"text-end\">4</td>\r\n                              <td class=\"text-end\">$600</td>\r\n                              <td class=\"text-end\">$70</td>\r\n                              <td class=\"text-end\">5</td>\r\n                              <td class=\"text-end\">$1200</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td class=\"text-center\">4</td>\r\n                              <td>MRI</td>\r\n                              <td class=\"text-end\">2</td>\r\n                              <td class=\"text-end\">$245</td>\r\n                              <td class=\"text-end\">$125</td>\r\n                              <td class=\"text-end\">10</td>\r\n                              <td class=\"text-end\">$480</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td class=\"text-center\">5</td>\r\n                              <td>Other Charges</td>\r\n                              <td class=\"text-end\">-</td>\r\n                              <td class=\"text-end\">-</td>\r\n                              <td class=\"text-end\">-</td>\r\n                              <td class=\"text-end\">-</td>\r\n                              <td class=\"text-end\">$300</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"float-end m-t-30 text-end\">\r\n                        <p>Sub - Total amount: $2600</p>\r\n                        <p>Discount : $100 </p>\r\n                        <p>vat (10%) : $160 </p>\r\n                        <hr>\r\n                        <h3><b>Total :</b> $2760</h3>\r\n                      </div>\r\n                      <div class=\"clearfix\"></div>\r\n                      <hr>\r\n                      <div class=\"text-end\">\r\n                        <button mat-flat-button color=\"primary\"><i class=\"fas fa-print\"></i>\r\n                          Print</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AddPaymentComponent } from \"./add-payment/add-payment.component\";\r\nimport { InvoiceComponent } from \"./invoice/invoice.component\";\r\nimport { AllpaymentComponent } from \"./allpayment/allpayment.component\";\r\nimport { Page404Component } from \"./../../authentication/page404/page404.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"add-payment\",\r\n    component: AddPaymentComponent,\r\n  },\r\n  {\r\n    path: \"all-payment\",\r\n    component: AllpaymentComponent,\r\n  },\r\n  {\r\n    path: \"invoice\",\r\n    component: InvoiceComponent,\r\n  },\r\n  { path: \"**\", component: Page404Component },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PaymentRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { PaymentRoutingModule } from \"./payment-routing.module\";\r\nimport { AddPaymentComponent } from \"./add-payment/add-payment.component\";\r\nimport { InvoiceComponent } from \"./invoice/invoice.component\";\r\nimport { AllpaymentComponent } from \"./allpayment/allpayment.component\";\r\nimport { FormDialogComponent } from \"./allpayment/dialog/form-dialog/form-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./allpayment/dialog/delete/delete.component\";\r\nimport { PaymentService } from \"./allpayment/payment.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddPaymentComponent,\r\n    InvoiceComponent,\r\n    AllpaymentComponent,\r\n    FormDialogComponent,\r\n    DeleteDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PaymentRoutingModule,\r\n    FormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatDatepickerModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [PaymentService],\r\n})\r\nexport class PaymentModule {}\r\n"]}