{"version":3,"sources":["./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/forgot-password/forgot-password.component.ts","./src/app/authentication/forgot-password/forgot-password.component.html","./src/app/authentication/locked/locked.component.ts","./src/app/authentication/locked/locked.component.html","./src/app/authentication/page500/page500.component.ts","./src/app/authentication/page500/page500.component.html","./src/app/authentication/signin/signin.component.ts","./src/app/authentication/signin/signin.component.html","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html"],"names":[],"mappings":"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","file":"src_app_authentication_authentication_module_ts-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { LockedComponent } from \"./locked/locked.component\";\r\nimport { Page404Component } from \"./page404/page404.component\";\r\nimport { Page500Component } from \"./page500/page500.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"signin\",\r\n    pathMatch: \"full\",\r\n  },\r\n  {\r\n    path: \"signin\",\r\n    component: SigninComponent,\r\n  },\r\n  {\r\n    path: \"signup\",\r\n    component: SignupComponent,\r\n  },\r\n  {\r\n    path: \"forgot-password\",\r\n    component: ForgotPasswordComponent,\r\n  },\r\n  {\r\n    path: \"locked\",\r\n    component: LockedComponent,\r\n  },\r\n  {\r\n    path: \"page404\",\r\n    component: Page404Component,\r\n  },\r\n  {\r\n    path: \"page500\",\r\n    component: Page500Component,\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AuthenticationRoutingModule } from \"./authentication-routing.module\";\r\nimport { Page500Component } from \"./page500/page500.component\";\r\nimport { Page404Component } from \"./page404/page404.component\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { LockedComponent } from \"./locked/locked.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\n@NgModule({\r\n  declarations: [\r\n    Page500Component,\r\n    Page404Component,\r\n    SigninComponent,\r\n    SignupComponent,\r\n    LockedComponent,\r\n    ForgotPasswordComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AuthenticationRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-forgot-password\",\r\n  templateUrl: \"./forgot-password.component.html\",\r\n  styleUrls: [\"./forgot-password.component.scss\"],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      email: [\r\n        \"\",\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate([\"/dashboard/main\"]);\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-03.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\"> Reset Password </h2>\r\n          <p class=\"auth-signup-text text-muted\">Let Us Help You</p>\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                  Enter your registered email address.\r\n                </span>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput formControlName=\"email\" required>\r\n                  <mat-icon matSuffix>mail</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('email').hasError('required') || authForm.get('email').touched\">\r\n                    Please enter a valid email address\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\r\n                Reset My Password\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-25 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Login?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { AuthService } from \"src/app/core/service/auth.service\";\r\nimport { Role } from \"src/app/core/models/role\";\r\n@Component({\r\n  selector: \"app-locked\",\r\n  templateUrl: \"./locked.component.html\",\r\n  styleUrls: [\"./locked.component.scss\"],\r\n})\r\nexport class LockedComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  userImg: string;\r\n  userFullName: string;\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      password: [\"\", Validators.required],\r\n    });\r\n    this.userImg = this.authService.currentUserValue.img;\r\n    this.userFullName =\r\n      this.authService.currentUserValue.firstName +\r\n      \" \" +\r\n      this.authService.currentUserValue.lastName;\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      const role = this.authService.currentUserValue.role;\r\n      if (role === Role.All || role === Role.Admin) {\r\n        this.router.navigate([\"/admin/dashboard/main\"]);\r\n      } else if (role === Role.Doctor) {\r\n        this.router.navigate([\"/doctor/dashboard\"]);\r\n      } else if (role === Role.Patient) {\r\n        this.router.navigate([\"/patient/dashboard\"]);\r\n      } else {\r\n        this.router.navigate([\"/authentication/signin\"]);\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-01.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"auth-locked\">\r\n              <div class=\"image\">\r\n                <img src={{userImg}} alt=\"User\">\r\n              </div>\r\n            </div>\r\n            <span class=\"auth-locked-title p-b-34 p-t-27\">\r\n              {{userFullName}}\r\n            </span>\r\n            <div class=\"text-center\">\r\n              <p class=\"txt1 p-b-20\">\r\n                Locked\r\n              </p>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                  Enter your password here.\r\n                </span>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\r\n                Reset My Password\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Need Help?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n@Component({\r\n  selector: \"app-page500\",\r\n  templateUrl: \"./page500.component.html\",\r\n  styleUrls: [\"./page500.component.scss\"],\r\n})\r\nexport class Page500Component implements OnInit {\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-05.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <form>\r\n            <span class=\"error-header p-b-45\">\r\n              500\r\n            </span>\r\n            <span class=\"error-subheader2 p-b-5\">\r\n              Oops, Something went wrong. Please try after some times.\r\n            </span>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" type=\"submit\">\r\n                Go To Home Page\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Need Help?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { AuthService } from \"src/app/core/service/auth.service\";\r\nimport { Role } from \"src/app/core/models/role\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n@Component({\r\n  selector: \"app-signin\",\r\n  templateUrl: \"./signin.component.html\",\r\n  styleUrls: [\"./signin.component.scss\"],\r\n})\r\nexport class SigninComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  loading = false;\r\n  error = \"\";\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      username: [\"admin@hospital.org\", Validators.required],\r\n      password: [\"admin@123\", Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  adminSet() {\r\n    this.authForm.get(\"username\").setValue(\"admin@hospital.org\");\r\n    this.authForm.get(\"password\").setValue(\"admin@123\");\r\n  }\r\n  doctorSet() {\r\n    this.authForm.get(\"username\").setValue(\"doctor@hospital.org\");\r\n    this.authForm.get(\"password\").setValue(\"doctor@123\");\r\n  }\r\n  patientSet() {\r\n    this.authForm.get(\"username\").setValue(\"patient@hospital.org\");\r\n    this.authForm.get(\"password\").setValue(\"patient@123\");\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.loading = true;\r\n    this.error = \"\";\r\n    if (this.authForm.invalid) {\r\n      this.error = \"Username and Password not valid !\";\r\n      return;\r\n    } else {\r\n      this.subs.sink = this.authService\r\n        .login(this.f.username.value, this.f.password.value)\r\n        .subscribe(\r\n          (res) => {\r\n            if (res) {\r\n              setTimeout(() => {\r\n                const role = this.authService.currentUserValue.role;\r\n                if (role === Role.All || role === Role.Admin) {\r\n                  this.router.navigate([\"/admin/dashboard/main\"]);\r\n                } else if (role === Role.Doctor) {\r\n                  this.router.navigate([\"/doctor/dashboard\"]);\r\n                } else if (role === Role.Patient) {\r\n                  this.router.navigate([\"/patient/dashboard\"]);\r\n                } else {\r\n                  this.router.navigate([\"/authentication/signin\"]);\r\n                }\r\n                this.loading = false;\r\n              }, 1000);\r\n            } else {\r\n              this.error = \"Invalid Login\";\r\n            }\r\n          },\r\n          (error) => {\r\n            this.error = error;\r\n            this.submitted = false;\r\n            this.loading = false;\r\n          }\r\n        );\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-01.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\"> Welcome to Cliniva </h2>\r\n          <p class=\"auth-signup-text text-muted\">Need an account?<a routerLink=\"/authentication/signup\"\r\n              class=\"sign-up-link\">Sign Up\r\n            </a></p>\r\n          <div class=\"d-flex justify-content-between lbl-alert mb-3\">\r\n            <div>\r\n              <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"adminSet();\">Admin</button>\r\n            </div>\r\n            <div>\r\n              <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"doctorSet();\">Doctor</button>\r\n            </div>\r\n            <div>\r\n              <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"patientSet();\">Patient</button>\r\n            </div>\r\n          </div>\r\n          <h2 class=\"login-title\">Sign in</h2>\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Username</mat-label>\r\n                  <input matInput formControlName=\"username\" />\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                    Username is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\">\r\n                  <a class=\"show-pwd-icon\" href=\"#\" onClick=\"return false;\" matSuffix (click)=\"hide = !hide\"\r\n                    [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  </a>\r\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex justify-content-between align-items-center mb-5\">\r\n              <div class=\"form-check\">\r\n                <label class=\"form-check-label\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\"> Remember me\r\n                  <span class=\"form-check-sign\">\r\n                    <span class=\"check\"></span>\r\n                  </span>\r\n                </label>\r\n              </div>\r\n              <a class=\"txt1\" routerLink=\"/authentication/forgot-password\">Forgot Password?</a>\r\n            </div>\r\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <div style=\"text-align:center\">\r\n                <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"loading\" [disabled]=\"loading\"\r\n                  class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">Save</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <h6 class=\"social-login-title\">OR</h6>\r\n          <ul class=\"list-unstyled social-icon mb-0 mt-3\">\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-google\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded flex-c-m\">\r\n                <i class=\"fab fa-facebook-f\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-twitter\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-linkedin-in\"></i>\r\n              </a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.scss\"],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n  chide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      username: [\"\", Validators.required],\r\n      email: [\r\n        \"\",\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      password: [\"\", Validators.required],\r\n      cpassword: [\"\", Validators.required],\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate([\"/admin/dashboard/main\"]);\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-02.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\"> Sign Up </h2>\r\n          <p class=\"auth-signup-text text-muted\">Enter details to create your account</p>\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Username</mat-label>\r\n                  <input matInput formControlName=\"username\" required>\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                    Username is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput formControlName=\"email\" required>\r\n                  <mat-icon matSuffix>mail</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('email').hasError('required') || authForm.get('email').touched\">\r\n                    Please enter a valid email address\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Confirm Password</mat-label>\r\n                  <input matInput formControlName=\"cpassword\" [type]=\"chide ? 'password' : 'text'\" required>\r\n                  <mat-icon matSuffix (click)=\"chide = !chide\">\r\n                    {{chide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('cpassword').hasError('required')\">\r\n                    Confirm Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex-sb-m w-full  p-b-20\">\r\n              <div>\r\n                <span>Already Registered? <a routerLink=\"/authentication/signin\">\r\n                    Login\r\n                  </a></span>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\r\n                Register\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <h6 class=\"social-login-title\">OR</h6>\r\n          <ul class=\"list-unstyled social-icon mb-0 mt-3\">\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-google\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded flex-c-m\">\r\n                <i class=\"fab fa-facebook-f\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-twitter\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-linkedin-in\"></i>\r\n              </a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}