{"version":3,"sources":["webpack:///src/app/admin/appointment/appointment-routing.module.ts","webpack:///src/app/admin/appointment/appointment.module.ts","webpack:///src/app/admin/appointment/bookappointment/bookappointment.component.html","webpack:///src/app/admin/appointment/bookappointment/bookappointment.component.ts","webpack:///src/app/admin/appointment/editappointment/editappointment.component.html","webpack:///src/app/admin/appointment/editappointment/editappointment.component.ts","webpack:///src/app/admin/appointment/viewappointment/appointment.model.ts","webpack:///src/app/admin/appointment/viewappointment/appointment.service.ts","webpack:///src/app/admin/appointment/viewappointment/dialogs/delete/delete.component.ts","webpack:///src/app/admin/appointment/viewappointment/dialogs/delete/delete.component.html","webpack:///src/app/admin/appointment/viewappointment/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/admin/appointment/viewappointment/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/admin/appointment/viewappointment/viewappointment.component.html","webpack:///src/app/admin/appointment/viewappointment/viewappointment.component.ts"],"names":["routes","path","component","BookappointmentComponent","ViewappointmentComponent","EditappointmentComponent","Page404Component","AppointmentRoutingModule","RouterModule","AppointmentModule","AppointmentService","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatRadioModule","MatSelectModule","MatCheckboxModule","MaterialFileInputModule","MatDatepickerModule","MatProgressSpinnerModule","DeleteDialogComponent","FormDialogComponent","fb","hide3","agree3","bookingForm","group","first","Validators","last","gender","mobile","address","email","dob","doctor","doa","toa","injury","note","uploadImg","console","log","value","onSubmit","formdata","createContactForm","Appointment","appointment","id","getRandomID","img","avatar","name","date","formatDate","Date","time","S4","Math","random","toString","substring","httpClient","API_URL","isTblLoading","dataChange","BehaviorSubject","dialogData","subs","sink","get","subscribe","data","next","error","message","UnsubscribeOnDestroyAdapter","dialogRef","appointmentService","close","deleteAppointment","MAT_DIALOG_DATA","confirmDelete","onNoClick","formControl","FormControl","action","dialogTitle","appointmentForm","hasError","addAppointment","getRawValue","provide","MAT_DATE_LOCALE","useValue","confirmAdd","$event","stopPropagation","selection","dialog","snackBar","displayedColumns","SelectionModel","loadData","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","row","select","totalSelect","item","index","findIndex","d","exampleDatabase","splice","refreshTable","showNotification","tempDirection","localStorage","getItem","open","direction","afterClosed","result","unshift","getDialogData","foundIndex","x","i","paginator","_changePageSize","pageSize","ExampleDataSource","sort","fromEvent","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","MatPaginator","MatSort","removeSelectedRows","addNew","refresh","_sort","filterChange","filteredData","pageIndex","displayDataChanges","sortChange","page","getAllAppointments","merge","pipe","map","slice","searchStr","toLowerCase","indexOf","sortedData","sortData","startIndex","active","a","b","propertyA","propertyB","valueA","isNaN","valueB","DataSource"],"mappings":"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E;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACA;;AACA;;AAGF;;AACF;;AACF;;AACA;;AAA8B;;AAAmB;;AACjD;;AACE;;AACE;;AACE;;AAAW;;AAAiB;;AAC5B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAmB;;AAC9B;;AACA;;AACA;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAmB;;AAC9B;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAc;;AACzB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAEA;;AAAoB;;AAAI;;AAC1B;;AACF;;AACF;;AACA;;AACE;;AACE;;AACkB;;AAAM;;AACxB;;AAAiC;;AAAM;;AACzC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;AA9J8B;;AAAA;;AAME;;AAAA;;AAiBE;;AAAA;;AAGA;;AAAA;;AAIF;;AAAA;;AAyBA;;AAAA;;AAQI;;AAAA;;AACiB;;AAAA;;AAErB;;AAAA;;AAYE;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIF;;AAAA;;AAQI;;AAAA;;AACiB;;AAAA;;AAErB;;AAAA;;AAWA;;AAAA;;AA+BY;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"src_app_admin_appointment_appointment_module_ts-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { BookappointmentComponent } from \"./bookappointment/bookappointment.component\";\r\nimport { ViewappointmentComponent } from \"./viewappointment/viewappointment.component\";\r\nimport { EditappointmentComponent } from \"./editappointment/editappointment.component\";\r\nimport { Page404Component } from \"./../../authentication/page404/page404.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"bookAppointment\",\r\n    component: BookappointmentComponent,\r\n  },\r\n  {\r\n    path: \"viewAppointment\",\r\n    component: ViewappointmentComponent,\r\n  },\r\n  {\r\n    path: \"edit-ppointment\",\r\n    component: EditappointmentComponent,\r\n  },\r\n  { path: \"**\", component: Page404Component },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppointmentRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MaterialFileInputModule } from \"ngx-material-file-input\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\n\r\nimport { AppointmentRoutingModule } from \"./appointment-routing.module\";\r\nimport { BookappointmentComponent } from \"./bookappointment/bookappointment.component\";\r\nimport { EditappointmentComponent } from \"./editappointment/editappointment.component\";\r\nimport { ViewappointmentComponent } from \"./viewappointment/viewappointment.component\";\r\nimport { DeleteDialogComponent } from \"./viewappointment/dialogs/delete/delete.component\";\r\nimport { FormDialogComponent } from \"./viewappointment/dialogs/form-dialog/form-dialog.component\";\r\nimport { AppointmentService } from \"./viewappointment/appointment.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BookappointmentComponent,\r\n    EditappointmentComponent,\r\n    ViewappointmentComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AppointmentRoutingModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MaterialFileInputModule,\r\n    MatDatepickerModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [AppointmentService],\r\n})\r\nexport class AppointmentModule {}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Book Appointment</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Appointment</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Book</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Book Appointment</h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"bookingForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>First name</mat-label>\r\n                    <input matInput formControlName=\"first\" required>\r\n                    <mat-error *ngIf=\"bookingForm.get('first').hasError('required')\">\r\n                      First name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Last name</mat-label>\r\n                    <input matInput formControlName=\"last\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Gender</mat-label>\r\n                    <mat-select formControlName=\"gender\" required>\r\n                      <mat-option [value]=\"'male'\">\r\n                        Male\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'female'\">\r\n                        Female\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"bookingForm.get('gender').hasError('required')\">\r\n                      Gender is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput formControlName=\"mobile\" type=\"number\" required>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Address</mat-label>\r\n                    <textarea matInput formControlName=\"address\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-error *ngIf=\"bookingForm.get('email').hasError('email') && bookingForm.get('email').touched\">\r\n                      Please enter a valid email address\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Date Of Birth</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"bookingForm.get('dob').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <h2 class=\"card-inside-title\">Appointment Details</h2>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Consulting Doctor</mat-label>\r\n                    <mat-select formControlName=\"doctor\" required>\r\n                      <mat-option [value]=\"'Dr.Rajesh'\">\r\n                        Dr.Rajesh\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Dr.Sarah Smith'\">\r\n                        Dr.Sarah Smith\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Dr.Jay Soni'\">\r\n                        Dr.Jay Soni\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Dr.Pooja Patel'\">\r\n                        Dr.Pooja Patel\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'other'\">\r\n                        Other\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"bookingForm.get('doctor').hasError('required')\">\r\n                      Select Any Doctor\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Date Of Appointment</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker1\" formControlName=\"doa\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker1></mat-datepicker>\r\n                    <mat-error *ngIf=\"bookingForm.get('doa').hasError('required')\">\r\n                      Please select a date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Time Of Appointment</mat-label>\r\n                    <input matInput formControlName=\"toa\" required>\r\n                    <mat-error *ngIf=\"bookingForm.get('toa').hasError('required')\">\r\n                      Please select a time\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Injury/Contion</mat-label>\r\n                    <textarea matInput formControlName=\"injury\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Note</mat-label>\r\n                    <textarea matInput formControlName=\"note\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <ngx-mat-file-input formControlName=\"uploadImg\" placeholder=\"Upload Image\">\r\n                    </ngx-mat-file-input>\r\n                    <mat-icon matSuffix>face</mat-icon>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <button class=\"btn-space\" [disabled]=\"!bookingForm.valid \" mat-raised-button\r\n                    color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-bookappointment\",\r\n  templateUrl: \"./bookappointment.component.html\",\r\n  styleUrls: [\"./bookappointment.component.sass\"],\r\n})\r\nexport class BookappointmentComponent {\r\n  bookingForm: FormGroup;\r\n  hide3 = true;\r\n  agree3 = false;\r\n  constructor(private fb: FormBuilder) {\r\n    this.bookingForm = this.fb.group({\r\n      first: [\"\", [Validators.required, Validators.pattern(\"[a-zA-Z]+\")]],\r\n      last: [\"\"],\r\n      gender: [\"\", [Validators.required]],\r\n      mobile: [\"\", [Validators.required]],\r\n      address: [\"\"],\r\n      email: [\r\n        \"\",\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      dob: [\"\", [Validators.required]],\r\n      doctor: [\"\", [Validators.required]],\r\n      doa: [\"\", [Validators.required]],\r\n      toa: [\"\", [Validators.required]],\r\n      injury: [\"\"],\r\n      note: [\"\"],\r\n      uploadImg: [\"\"],\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log(\"Form Value\", this.bookingForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Edit Appointment</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Appointment</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Edit</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Edit Appointment</h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"bookingForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>First name</mat-label>\r\n                    <input matInput formControlName=\"first\" required>\r\n                    <mat-error *ngIf=\"bookingForm.get('first').hasError('required')\">\r\n                      First name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Last name</mat-label>\r\n                    <input matInput formControlName=\"last\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Gender</mat-label>\r\n                    <mat-select formControlName=\"gender\" required>\r\n                      <mat-option [value]=\"'male'\">\r\n                        Male\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'female'\">\r\n                        Female\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"bookingForm.get('gender').hasError('required')\">\r\n                      Gender is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput formControlName=\"mobile\" type=\"number\" required>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Address</mat-label>\r\n                    <textarea matInput formControlName=\"address\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-error *ngIf=\"bookingForm.get('email').hasError('email') && bookingForm.get('email').touched\">\r\n                      Please enter a valid email address\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Date Of Birth</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"bookingForm.get('dob').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <h2 class=\"card-inside-title\">Appointment Details</h2>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Consulting Doctor</mat-label>\r\n                    <mat-select formControlName=\"doctor\" required>\r\n                      <mat-option [value]=\"'Dr.Rajesh'\">\r\n                        Dr.Rajesh\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Dr.Sarah Smith'\">\r\n                        Dr.Sarah Smith\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Dr.Jay Soni'\">\r\n                        Dr.Jay Soni\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Dr.Pooja Patel'\">\r\n                        Dr.Pooja Patel\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'other'\">\r\n                        Other\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"bookingForm.get('doctor').hasError('required')\">\r\n                      Select Any Doctor\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Date Of Appointment</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker1\" formControlName=\"doa\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker1></mat-datepicker>\r\n                    <mat-error *ngIf=\"bookingForm.get('doa').hasError('required')\">\r\n                      Please select a date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Time Of Appointment</mat-label>\r\n                    <input matInput formControlName=\"toa\" required>\r\n                    <mat-error *ngIf=\"bookingForm.get('toa').hasError('required')\">\r\n                      Please select a time\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Injury/Contion</mat-label>\r\n                    <textarea matInput formControlName=\"injury\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Note</mat-label>\r\n                    <textarea matInput formControlName=\"note\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <button class=\"btn-space\" [disabled]=\"!bookingForm.valid \" mat-raised-button\r\n                    color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-editappointment\",\r\n  templateUrl: \"./editappointment.component.html\",\r\n  styleUrls: [\"./editappointment.component.sass\"],\r\n})\r\nexport class EditappointmentComponent {\r\n  bookingForm: FormGroup;\r\n  formdata = {\r\n    first: \"Pooja\",\r\n    last: \"Sarma\",\r\n    gender: \"female\",\r\n    mobile: \"123456789\",\r\n    address: \"101, Elanxa, New Yourk\",\r\n    email: \"test@example.com\",\r\n    dob: \"1987-02-17T14:22:18Z\",\r\n    doctor: \"Dr.Rajesh\",\r\n    doa: \"2018-05-25T14:22:18Z\",\r\n    toa: \"10:25\",\r\n    injury: \"Fever\",\r\n    note: \"No Comments\",\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.bookingForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log(\"Form Value\", this.bookingForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      first: [\r\n        this.formdata.first,\r\n        [Validators.required, Validators.pattern(\"[a-zA-Z]+\")],\r\n      ],\r\n      last: [this.formdata.last],\r\n      gender: [this.formdata.gender, [Validators.required]],\r\n      mobile: [this.formdata.mobile, [Validators.required]],\r\n      address: [this.formdata.address],\r\n      email: [\r\n        this.formdata.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      dob: [this.formdata.dob, [Validators.required]],\r\n      doctor: [this.formdata.doctor, [Validators.required]],\r\n      doa: [this.formdata.doa, [Validators.required]],\r\n      toa: [this.formdata.toa, [Validators.required]],\r\n      injury: [this.formdata.injury],\r\n      note: [this.formdata.note],\r\n    });\r\n  }\r\n}\r\n","import { formatDate } from \"@angular/common\";\r\nexport class Appointment {\r\n  id: number;\r\n  img: string;\r\n  name: string;\r\n  email: string;\r\n  gender: string;\r\n  date: string;\r\n  time: string;\r\n  mobile: string;\r\n  doctor: string;\r\n  injury: string;\r\n  constructor(appointment) {\r\n    {\r\n      this.id = appointment.id || this.getRandomID();\r\n      this.img = appointment.avatar || \"assets/images/user/user1.jpg\";\r\n      this.name = appointment.name || \"\";\r\n      this.email = appointment.email || \"\";\r\n      this.gender = appointment.gender || \"male\";\r\n      this.date = formatDate(new Date(), \"yyyy-MM-dd\", \"en\") || \"\";\r\n      this.time = appointment.time || \"\";\r\n      this.mobile = appointment.mobile || \"\";\r\n      this.doctor = appointment.mobile || \"\";\r\n      this.injury = appointment.mobile || \"\";\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Appointment } from \"./appointment.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n@Injectable()\r\nexport class AppointmentService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = \"assets/data/appointment.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Appointment[]> = new BehaviorSubject<\r\n    Appointment[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): Appointment[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllAppointments(): void {\r\n    this.subs.sink = this.httpClient.get<Appointment[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + \" \" + error.message);\r\n      }\r\n    );\r\n  }\r\n  addAppointment(appointment: Appointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /*  this.httpClient.post(this.API_URL, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateAppointment(appointment: Appointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /* this.httpClient.put(this.API_URL + appointment.id, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteAppointment(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { AppointmentService } from \"../../appointment.service\";\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public appointmentService: AppointmentService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.appointmentService.deleteAppointment(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Name: </span>{{data.name}}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Email: </span>{{ data.email }}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <img [src]='appointment.img' alt=\"avatar\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 msl-3 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"appointmentForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>name</mat-label>\r\n            <input matInput formControlName=\"name\">\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"appointmentForm.get('name').hasError('required')\">\r\n              Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput formControlName=\"email\" required>\r\n            <mat-icon matSuffix>email</mat-icon>\r\n            <mat-error\r\n              *ngIf=\"appointmentForm.get('email').hasError('required') || appointmentForm.get('email').touched\">\r\n              Please enter a valid email address\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"m-b-20\">\r\n            <mat-label class=\"msr-3\">Gender:</mat-label>\r\n            <mat-radio-group aria-label=\"Select gender\" formControlName=\"gender\" required>\r\n              <mat-radio-button value=\"male\">Male</mat-radio-button>\r\n              <mat-radio-button value=\"female\">Female</mat-radio-button>\r\n              <mat-error *ngIf=\"appointmentForm.get('gender').hasError('required')\">\r\n                Select gender\r\n              </mat-error>\r\n            </mat-radio-group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Choose a date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"appointmentForm.get('date').hasError('required')\">\r\n              Please select date\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Time</mat-label>\r\n            <input matInput formControlName=\"time\">\r\n            <mat-icon matSuffix>access_time</mat-icon>\r\n            <mat-error *ngIf=\"appointmentForm.get('time').hasError('required')\">\r\n              Please select time\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Mobile</mat-label>\r\n            <input matInput formControlName=\"mobile\" type=\"number\">\r\n            <mat-icon matSuffix>phone</mat-icon>\r\n            <mat-error *ngIf=\"appointmentForm.get('mobile').hasError('required')\">\r\n              Mobile is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n            <mat-label>Doctor Name</mat-label>\r\n            <mat-select formControlName=\"doctor\" required>\r\n              <mat-option [value]=\"'Dr.Rajesh'\">\r\n                Dr.Rajesh\r\n              </mat-option>\r\n              <mat-option [value]=\"'Dr.Sarah Smith'\">\r\n                Dr.Sarah Smith\r\n              </mat-option>\r\n              <mat-option [value]=\"'Dr.Jay Soni'\">\r\n                Dr.Jay Soni\r\n              </mat-option>\r\n              <mat-option [value]=\"'Dr.Pooja Patel'\">\r\n                Dr.Pooja Patel\r\n              </mat-option>\r\n              <mat-option [value]=\"'other'\">\r\n                Other\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"appointmentForm.get('doctor').hasError('required')\">\r\n              Doctor Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Injury/Condition</mat-label>\r\n            <textarea matInput formControlName=\"injury\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!appointmentForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { AppointmentService } from \"../../appointment.service\";\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder,\r\n} from \"@angular/forms\";\r\nimport { Appointment } from \"../../appointment.model\";\r\nimport { MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { formatDate } from \"@angular/common\";\r\n@Component({\r\n  selector: \"app-form-dialog\",\r\n  templateUrl: \"./form-dialog.component.html\",\r\n  styleUrls: [\"./form-dialog.component.sass\"],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: \"en-GB\" }],\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  appointmentForm: FormGroup;\r\n  appointment: Appointment;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public appointmentService: AppointmentService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === \"edit\") {\r\n      console.log(data.appointment.date);\r\n      this.dialogTitle = data.appointment.name;\r\n      this.appointment = data.appointment;\r\n    } else {\r\n      this.dialogTitle = \"New Appointment\";\r\n      this.appointment = new Appointment({});\r\n    }\r\n    this.appointmentForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl(\"\", [\r\n    Validators.required,\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError(\"required\")\r\n      ? \"Required field\"\r\n      : this.formControl.hasError(\"email\")\r\n      ? \"Not a valid email\"\r\n      : \"\";\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.appointment.id],\r\n      img: [this.appointment.img],\r\n      name: [this.appointment.name, [Validators.required]],\r\n      email: [\r\n        this.appointment.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      gender: [this.appointment.gender],\r\n      date: [\r\n        formatDate(this.appointment.date, \"yyyy-MM-dd\", \"en\"),\r\n        [Validators.required],\r\n      ],\r\n      time: [this.appointment.time, [Validators.required]],\r\n      mobile: [this.appointment.mobile, [Validators.required]],\r\n      doctor: [this.appointment.doctor, [Validators.required]],\r\n      injury: [this.appointment.injury],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.appointmentService.addAppointment(this.appointmentForm.getRawValue());\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">View Appointments</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Appointments</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">View</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ms-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Appointments</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"img\">\r\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\"> Image\r\n                  </mat-header-cell>\r\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\"> <img\r\n                      [src]=\"row.img\" />\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"name\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.name}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"email\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.email}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"gender\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Gender</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.gender}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy' }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"time\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Time</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.time}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"mobile\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.mobile}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"doctor\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Doctor</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.doctor}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"injury\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Injury/Condition\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.injury}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(i, row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { AppointmentService } from \"./appointment.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { Appointment } from \"./appointment.model\";\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { FormDialogComponent } from \"./dialogs/form-dialog/form-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./dialogs/delete/delete.component\";\r\nimport { DateAdapter, MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n\r\n@Component({\r\n  selector: \"app-viewappointment\",\r\n  templateUrl: \"./viewappointment.component.html\",\r\n  styleUrls: [\"./viewappointment.component.sass\"],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: \"en-GB\" }],\r\n})\r\nexport class ViewappointmentComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    \"select\",\r\n    \"img\",\r\n    \"name\",\r\n    \"email\",\r\n    \"gender\",\r\n    \"date\",\r\n    \"time\",\r\n    \"mobile\",\r\n    \"doctor\",\r\n    \"injury\",\r\n    \"actions\",\r\n  ];\r\n  exampleDatabase: AppointmentService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Appointment>(true, []);\r\n  index: number;\r\n  id: number;\r\n  appointment: Appointment | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public appointmentService: AppointmentService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Appointment>(true, []);\r\n    });\r\n    this.showNotification(\r\n      \"snackbar-danger\",\r\n      totalSelect + \" Record Delete Successfully...!!!\",\r\n      \"bottom\",\r\n      \"center\"\r\n    );\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        appointment: this.appointment,\r\n        action: \"add\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.appointmentService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-success\",\r\n          \"Add Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        appointment: row,\r\n        action: \"edit\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.appointmentService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"black\",\r\n          \"Edit Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(i: number, row) {\r\n    this.index = i;\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-danger\",\r\n          \"Delete Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new AppointmentService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, \"keyup\").subscribe(() => {\r\n      if (!this.dataSource) {\r\n        return;\r\n      }\r\n      this.dataSource.filter = this.filter.nativeElement.value;\r\n    });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, \"\", {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Appointment> {\r\n  filterChange = new BehaviorSubject(\"\");\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Appointment[] = [];\r\n  renderedData: Appointment[] = [];\r\n  constructor(\r\n    public exampleDatabase: AppointmentService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Appointment[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllAppointments();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((appointment: Appointment) => {\r\n            const searchStr = (\r\n              appointment.name +\r\n              appointment.email +\r\n              appointment.gender +\r\n              appointment.date +\r\n              appointment.doctor +\r\n              appointment.injury +\r\n              appointment.mobile\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Appointment[]): Appointment[] {\r\n    if (!this._sort.active || this._sort.direction === \"\") {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = \"\";\r\n      let propertyB: number | string = \"\";\r\n      switch (this._sort.active) {\r\n        case \"id\":\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case \"name\":\r\n          [propertyA, propertyB] = [a.name, b.name];\r\n          break;\r\n        case \"email\":\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n        // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\r\n        case \"time\":\r\n          [propertyA, propertyB] = [a.time, b.time];\r\n          break;\r\n        case \"mobile\":\r\n          [propertyA, propertyB] = [a.mobile, b.mobile];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n"]}