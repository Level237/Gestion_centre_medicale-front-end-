{"version":3,"sources":["./src/app/admin/appointment/appointment-routing.module.ts","./src/app/admin/appointment/appointment.module.ts","./src/app/admin/appointment/bookappointment/bookappointment.component.ts","./src/app/admin/appointment/bookappointment/bookappointment.component.html","./src/app/admin/appointment/editappointment/editappointment.component.ts","./src/app/admin/appointment/editappointment/editappointment.component.html","./src/app/admin/appointment/viewappointment/appointment.model.ts","./src/app/admin/appointment/viewappointment/appointment.service.ts","./src/app/admin/appointment/viewappointment/dialogs/delete/delete.component.ts","./src/app/admin/appointment/viewappointment/dialogs/delete/delete.component.html","./src/app/admin/appointment/viewappointment/dialogs/form-dialog/form-dialog.component.ts","./src/app/admin/appointment/viewappointment/dialogs/form-dialog/form-dialog.component.html","./src/app/admin/appointment/viewappointment/viewappointment.component.ts","./src/app/admin/appointment/viewappointment/viewappointment.component.html"],"names":[],"mappings":"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","file":"src_app_admin_appointment_appointment_module_ts-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { BookappointmentComponent } from \"./bookappointment/bookappointment.component\";\r\nimport { ViewappointmentComponent } from \"./viewappointment/viewappointment.component\";\r\nimport { EditappointmentComponent } from \"./editappointment/editappointment.component\";\r\nimport { Page404Component } from \"./../../authentication/page404/page404.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"bookAppointment\",\r\n    component: BookappointmentComponent,\r\n  },\r\n  {\r\n    path: \"viewAppointment\",\r\n    component: ViewappointmentComponent,\r\n  },\r\n  {\r\n    path: \"edit-ppointment\",\r\n    component: EditappointmentComponent,\r\n  },\r\n  { path: \"**\", component: Page404Component },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppointmentRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MaterialFileInputModule } from \"ngx-material-file-input\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\n\r\nimport { AppointmentRoutingModule } from \"./appointment-routing.module\";\r\nimport { BookappointmentComponent } from \"./bookappointment/bookappointment.component\";\r\nimport { EditappointmentComponent } from \"./editappointment/editappointment.component\";\r\nimport { ViewappointmentComponent } from \"./viewappointment/viewappointment.component\";\r\nimport { DeleteDialogComponent } from \"./viewappointment/dialogs/delete/delete.component\";\r\nimport { FormDialogComponent } from \"./viewappointment/dialogs/form-dialog/form-dialog.component\";\r\nimport { AppointmentService } from \"./viewappointment/appointment.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BookappointmentComponent,\r\n    EditappointmentComponent,\r\n    ViewappointmentComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AppointmentRoutingModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MaterialFileInputModule,\r\n    MatDatepickerModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [AppointmentService],\r\n})\r\nexport class AppointmentModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-bookappointment\",\r\n  templateUrl: \"./bookappointment.component.html\",\r\n  styleUrls: [\"./bookappointment.component.sass\"],\r\n})\r\nexport class BookappointmentComponent {\r\n  bookingForm: FormGroup;\r\n  hide3 = true;\r\n  agree3 = false;\r\n  constructor(private fb: FormBuilder) {\r\n    this.bookingForm = this.fb.group({\r\n      first: [\"\", [Validators.required, Validators.pattern(\"[a-zA-Z]+\")]],\r\n      last: [\"\"],\r\n      gender: [\"\", [Validators.required]],\r\n      mobile: [\"\", [Validators.required]],\r\n      address: [\"\"],\r\n      email: [\r\n        \"\",\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      dob: [\"\", [Validators.required]],\r\n      doctor: [\"\", [Validators.required]],\r\n      doa: [\"\", [Validators.required]],\r\n      toa: [\"\", [Validators.required]],\r\n      injury: [\"\"],\r\n      note: [\"\"],\r\n      uploadImg: [\"\"],\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log(\"Form Value\", this.bookingForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Book Appointment</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Appointment</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Book</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Book Appointment</h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"bookingForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>First name</mat-label>\r\n                    <input matInput formControlName=\"first\" required>\r\n                    <mat-error *ngIf=\"bookingForm.get('first').hasError('required')\">\r\n                      First name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Last name</mat-label>\r\n                    <input matInput formControlName=\"last\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Gender</mat-label>\r\n                    <mat-select formControlName=\"gender\" required>\r\n                      <mat-option [value]=\"'male'\">\r\n                        Male\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'female'\">\r\n                        Female\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"bookingForm.get('gender').hasError('required')\">\r\n                      Gender is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput formControlName=\"mobile\" type=\"number\" required>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Address</mat-label>\r\n                    <textarea matInput formControlName=\"address\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-error *ngIf=\"bookingForm.get('email').hasError('email') && bookingForm.get('email').touched\">\r\n                      Please enter a valid email address\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Date Of Birth</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"bookingForm.get('dob').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <h2 class=\"card-inside-title\">Appointment Details</h2>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Consulting Doctor</mat-label>\r\n                    <mat-select formControlName=\"doctor\" required>\r\n                      <mat-option [value]=\"'Dr.Rajesh'\">\r\n                        Dr.Rajesh\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Dr.Sarah Smith'\">\r\n                        Dr.Sarah Smith\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Dr.Jay Soni'\">\r\n                        Dr.Jay Soni\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Dr.Pooja Patel'\">\r\n                        Dr.Pooja Patel\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'other'\">\r\n                        Other\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"bookingForm.get('doctor').hasError('required')\">\r\n                      Select Any Doctor\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Date Of Appointment</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker1\" formControlName=\"doa\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker1></mat-datepicker>\r\n                    <mat-error *ngIf=\"bookingForm.get('doa').hasError('required')\">\r\n                      Please select a date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Time Of Appointment</mat-label>\r\n                    <input matInput formControlName=\"toa\" required>\r\n                    <mat-error *ngIf=\"bookingForm.get('toa').hasError('required')\">\r\n                      Please select a time\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Injury/Contion</mat-label>\r\n                    <textarea matInput formControlName=\"injury\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Note</mat-label>\r\n                    <textarea matInput formControlName=\"note\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <ngx-mat-file-input formControlName=\"uploadImg\" placeholder=\"Upload Image\">\r\n                    </ngx-mat-file-input>\r\n                    <mat-icon matSuffix>face</mat-icon>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <button class=\"btn-space\" [disabled]=\"!bookingForm.valid \" mat-raised-button\r\n                    color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-editappointment\",\r\n  templateUrl: \"./editappointment.component.html\",\r\n  styleUrls: [\"./editappointment.component.sass\"],\r\n})\r\nexport class EditappointmentComponent {\r\n  bookingForm: FormGroup;\r\n  formdata = {\r\n    first: \"Pooja\",\r\n    last: \"Sarma\",\r\n    gender: \"female\",\r\n    mobile: \"123456789\",\r\n    address: \"101, Elanxa, New Yourk\",\r\n    email: \"test@example.com\",\r\n    dob: \"1987-02-17T14:22:18Z\",\r\n    doctor: \"Dr.Rajesh\",\r\n    doa: \"2018-05-25T14:22:18Z\",\r\n    toa: \"10:25\",\r\n    injury: \"Fever\",\r\n    note: \"No Comments\",\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.bookingForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log(\"Form Value\", this.bookingForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      first: [\r\n        this.formdata.first,\r\n        [Validators.required, Validators.pattern(\"[a-zA-Z]+\")],\r\n      ],\r\n      last: [this.formdata.last],\r\n      gender: [this.formdata.gender, [Validators.required]],\r\n      mobile: [this.formdata.mobile, [Validators.required]],\r\n      address: [this.formdata.address],\r\n      email: [\r\n        this.formdata.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      dob: [this.formdata.dob, [Validators.required]],\r\n      doctor: [this.formdata.doctor, [Validators.required]],\r\n      doa: [this.formdata.doa, [Validators.required]],\r\n      toa: [this.formdata.toa, [Validators.required]],\r\n      injury: [this.formdata.injury],\r\n      note: [this.formdata.note],\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Edit Appointment</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Appointment</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Edit</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Edit Appointment</h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"bookingForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>First name</mat-label>\r\n                    <input matInput formControlName=\"first\" required>\r\n                    <mat-error *ngIf=\"bookingForm.get('first').hasError('required')\">\r\n                      First name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Last name</mat-label>\r\n                    <input matInput formControlName=\"last\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Gender</mat-label>\r\n                    <mat-select formControlName=\"gender\" required>\r\n                      <mat-option [value]=\"'male'\">\r\n                        Male\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'female'\">\r\n                        Female\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"bookingForm.get('gender').hasError('required')\">\r\n                      Gender is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput formControlName=\"mobile\" type=\"number\" required>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Address</mat-label>\r\n                    <textarea matInput formControlName=\"address\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-error *ngIf=\"bookingForm.get('email').hasError('email') && bookingForm.get('email').touched\">\r\n                      Please enter a valid email address\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Date Of Birth</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"bookingForm.get('dob').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <h2 class=\"card-inside-title\">Appointment Details</h2>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Consulting Doctor</mat-label>\r\n                    <mat-select formControlName=\"doctor\" required>\r\n                      <mat-option [value]=\"'Dr.Rajesh'\">\r\n                        Dr.Rajesh\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Dr.Sarah Smith'\">\r\n                        Dr.Sarah Smith\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Dr.Jay Soni'\">\r\n                        Dr.Jay Soni\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Dr.Pooja Patel'\">\r\n                        Dr.Pooja Patel\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'other'\">\r\n                        Other\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"bookingForm.get('doctor').hasError('required')\">\r\n                      Select Any Doctor\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Date Of Appointment</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker1\" formControlName=\"doa\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker1></mat-datepicker>\r\n                    <mat-error *ngIf=\"bookingForm.get('doa').hasError('required')\">\r\n                      Please select a date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Time Of Appointment</mat-label>\r\n                    <input matInput formControlName=\"toa\" required>\r\n                    <mat-error *ngIf=\"bookingForm.get('toa').hasError('required')\">\r\n                      Please select a time\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Injury/Contion</mat-label>\r\n                    <textarea matInput formControlName=\"injury\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Note</mat-label>\r\n                    <textarea matInput formControlName=\"note\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <button class=\"btn-space\" [disabled]=\"!bookingForm.valid \" mat-raised-button\r\n                    color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { formatDate } from \"@angular/common\";\r\nexport class Appointment {\r\n  id: number;\r\n  img: string;\r\n  name: string;\r\n  email: string;\r\n  gender: string;\r\n  date: string;\r\n  time: string;\r\n  mobile: string;\r\n  doctor: string;\r\n  injury: string;\r\n  constructor(appointment) {\r\n    {\r\n      this.id = appointment.id || this.getRandomID();\r\n      this.img = appointment.avatar || \"assets/images/user/user1.jpg\";\r\n      this.name = appointment.name || \"\";\r\n      this.email = appointment.email || \"\";\r\n      this.gender = appointment.gender || \"male\";\r\n      this.date = formatDate(new Date(), \"yyyy-MM-dd\", \"en\") || \"\";\r\n      this.time = appointment.time || \"\";\r\n      this.mobile = appointment.mobile || \"\";\r\n      this.doctor = appointment.mobile || \"\";\r\n      this.injury = appointment.mobile || \"\";\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Appointment } from \"./appointment.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n@Injectable()\r\nexport class AppointmentService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = \"assets/data/appointment.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Appointment[]> = new BehaviorSubject<\r\n    Appointment[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): Appointment[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllAppointments(): void {\r\n    this.subs.sink = this.httpClient.get<Appointment[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + \" \" + error.message);\r\n      }\r\n    );\r\n  }\r\n  addAppointment(appointment: Appointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /*  this.httpClient.post(this.API_URL, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateAppointment(appointment: Appointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /* this.httpClient.put(this.API_URL + appointment.id, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteAppointment(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { AppointmentService } from \"../../appointment.service\";\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public appointmentService: AppointmentService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.appointmentService.deleteAppointment(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Name: </span>{{data.name}}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Email: </span>{{ data.email }}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { AppointmentService } from \"../../appointment.service\";\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder,\r\n} from \"@angular/forms\";\r\nimport { Appointment } from \"../../appointment.model\";\r\nimport { MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { formatDate } from \"@angular/common\";\r\n@Component({\r\n  selector: \"app-form-dialog\",\r\n  templateUrl: \"./form-dialog.component.html\",\r\n  styleUrls: [\"./form-dialog.component.sass\"],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: \"en-GB\" }],\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  appointmentForm: FormGroup;\r\n  appointment: Appointment;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public appointmentService: AppointmentService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === \"edit\") {\r\n      console.log(data.appointment.date);\r\n      this.dialogTitle = data.appointment.name;\r\n      this.appointment = data.appointment;\r\n    } else {\r\n      this.dialogTitle = \"New Appointment\";\r\n      this.appointment = new Appointment({});\r\n    }\r\n    this.appointmentForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl(\"\", [\r\n    Validators.required,\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError(\"required\")\r\n      ? \"Required field\"\r\n      : this.formControl.hasError(\"email\")\r\n      ? \"Not a valid email\"\r\n      : \"\";\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.appointment.id],\r\n      img: [this.appointment.img],\r\n      name: [this.appointment.name, [Validators.required]],\r\n      email: [\r\n        this.appointment.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      gender: [this.appointment.gender],\r\n      date: [\r\n        formatDate(this.appointment.date, \"yyyy-MM-dd\", \"en\"),\r\n        [Validators.required],\r\n      ],\r\n      time: [this.appointment.time, [Validators.required]],\r\n      mobile: [this.appointment.mobile, [Validators.required]],\r\n      doctor: [this.appointment.doctor, [Validators.required]],\r\n      injury: [this.appointment.injury],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.appointmentService.addAppointment(this.appointmentForm.getRawValue());\r\n  }\r\n}\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <img [src]='appointment.img' alt=\"avatar\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 msl-3 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"appointmentForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>name</mat-label>\r\n            <input matInput formControlName=\"name\">\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"appointmentForm.get('name').hasError('required')\">\r\n              Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput formControlName=\"email\" required>\r\n            <mat-icon matSuffix>email</mat-icon>\r\n            <mat-error\r\n              *ngIf=\"appointmentForm.get('email').hasError('required') || appointmentForm.get('email').touched\">\r\n              Please enter a valid email address\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"m-b-20\">\r\n            <mat-label class=\"msr-3\">Gender:</mat-label>\r\n            <mat-radio-group aria-label=\"Select gender\" formControlName=\"gender\" required>\r\n              <mat-radio-button value=\"male\">Male</mat-radio-button>\r\n              <mat-radio-button value=\"female\">Female</mat-radio-button>\r\n              <mat-error *ngIf=\"appointmentForm.get('gender').hasError('required')\">\r\n                Select gender\r\n              </mat-error>\r\n            </mat-radio-group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Choose a date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"appointmentForm.get('date').hasError('required')\">\r\n              Please select date\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Time</mat-label>\r\n            <input matInput formControlName=\"time\">\r\n            <mat-icon matSuffix>access_time</mat-icon>\r\n            <mat-error *ngIf=\"appointmentForm.get('time').hasError('required')\">\r\n              Please select time\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Mobile</mat-label>\r\n            <input matInput formControlName=\"mobile\" type=\"number\">\r\n            <mat-icon matSuffix>phone</mat-icon>\r\n            <mat-error *ngIf=\"appointmentForm.get('mobile').hasError('required')\">\r\n              Mobile is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n            <mat-label>Doctor Name</mat-label>\r\n            <mat-select formControlName=\"doctor\" required>\r\n              <mat-option [value]=\"'Dr.Rajesh'\">\r\n                Dr.Rajesh\r\n              </mat-option>\r\n              <mat-option [value]=\"'Dr.Sarah Smith'\">\r\n                Dr.Sarah Smith\r\n              </mat-option>\r\n              <mat-option [value]=\"'Dr.Jay Soni'\">\r\n                Dr.Jay Soni\r\n              </mat-option>\r\n              <mat-option [value]=\"'Dr.Pooja Patel'\">\r\n                Dr.Pooja Patel\r\n              </mat-option>\r\n              <mat-option [value]=\"'other'\">\r\n                Other\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"appointmentForm.get('doctor').hasError('required')\">\r\n              Doctor Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Injury/Condition</mat-label>\r\n            <textarea matInput formControlName=\"injury\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!appointmentForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { AppointmentService } from \"./appointment.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { Appointment } from \"./appointment.model\";\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { FormDialogComponent } from \"./dialogs/form-dialog/form-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./dialogs/delete/delete.component\";\r\nimport { DateAdapter, MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n\r\n@Component({\r\n  selector: \"app-viewappointment\",\r\n  templateUrl: \"./viewappointment.component.html\",\r\n  styleUrls: [\"./viewappointment.component.sass\"],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: \"en-GB\" }],\r\n})\r\nexport class ViewappointmentComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    \"select\",\r\n    \"img\",\r\n    \"name\",\r\n    \"email\",\r\n    \"gender\",\r\n    \"date\",\r\n    \"time\",\r\n    \"mobile\",\r\n    \"doctor\",\r\n    \"injury\",\r\n    \"actions\",\r\n  ];\r\n  exampleDatabase: AppointmentService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Appointment>(true, []);\r\n  index: number;\r\n  id: number;\r\n  appointment: Appointment | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public appointmentService: AppointmentService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Appointment>(true, []);\r\n    });\r\n    this.showNotification(\r\n      \"snackbar-danger\",\r\n      totalSelect + \" Record Delete Successfully...!!!\",\r\n      \"bottom\",\r\n      \"center\"\r\n    );\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        appointment: this.appointment,\r\n        action: \"add\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.appointmentService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-success\",\r\n          \"Add Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        appointment: row,\r\n        action: \"edit\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.appointmentService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"black\",\r\n          \"Edit Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(i: number, row) {\r\n    this.index = i;\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-danger\",\r\n          \"Delete Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new AppointmentService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, \"keyup\").subscribe(() => {\r\n      if (!this.dataSource) {\r\n        return;\r\n      }\r\n      this.dataSource.filter = this.filter.nativeElement.value;\r\n    });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, \"\", {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Appointment> {\r\n  filterChange = new BehaviorSubject(\"\");\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Appointment[] = [];\r\n  renderedData: Appointment[] = [];\r\n  constructor(\r\n    public exampleDatabase: AppointmentService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Appointment[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllAppointments();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((appointment: Appointment) => {\r\n            const searchStr = (\r\n              appointment.name +\r\n              appointment.email +\r\n              appointment.gender +\r\n              appointment.date +\r\n              appointment.doctor +\r\n              appointment.injury +\r\n              appointment.mobile\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Appointment[]): Appointment[] {\r\n    if (!this._sort.active || this._sort.direction === \"\") {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = \"\";\r\n      let propertyB: number | string = \"\";\r\n      switch (this._sort.active) {\r\n        case \"id\":\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case \"name\":\r\n          [propertyA, propertyB] = [a.name, b.name];\r\n          break;\r\n        case \"email\":\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n        // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\r\n        case \"time\":\r\n          [propertyA, propertyB] = [a.time, b.time];\r\n          break;\r\n        case \"mobile\":\r\n          [propertyA, propertyB] = [a.mobile, b.mobile];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">View Appointments</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Appointments</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">View</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ms-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Appointments</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"img\">\r\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\"> Image\r\n                  </mat-header-cell>\r\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\"> <img\r\n                      [src]=\"row.img\" />\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"name\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.name}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"email\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.email}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"gender\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Gender</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.gender}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy' }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"time\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Time</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.time}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"mobile\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.mobile}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"doctor\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Doctor</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.doctor}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"injury\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Injury/Condition\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.injury}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(i, row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n"],"sourceRoot":"webpack:///"}