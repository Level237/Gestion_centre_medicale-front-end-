{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/slider.js"],"names":["_c0","MatAutocomplete_ng_template_0_Template","rf","ctx","formFieldId_r1","id","ctx_r0","_classList","ariaLabel","_getPanelAriaLabelledby","_c1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","_MatAutocompleteMixinBase","mixinDisableRipple","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","_MatAutocompleteBase","_changeDetectorRef","_elementRef","defaults","platform","_activeOptionChanges","Subscription","showPanel","_isOpen","displayWith","optionSelected","EventEmitter","opened","closed","optionActivated","inertGroups","SAFARI","_autoActiveFirstOption","value","coerceBooleanProperty","length","coerceStringArray","reduce","classList","className","_setVisibilityClasses","nativeElement","_keyManager","ActiveDescendantKeyManager","options","withWrap","change","subscribe","index","isOpen","emit","toArray","_setVisibility","unsubscribe","scrollTop","panel","markForCheck","event","labelId","labelExpression","ariaLabelledby","_visibleClass","_hiddenClass","ɵfac","_MatAutocompleteBase_Factory","t","ɵdir","type","viewQuery","_MatAutocompleteBase_Query","TemplateRef","_t","template","first","inputs","panelWidth","outputs","features","ctorParameters","ChangeDetectorRef","ElementRef","undefined","decorators","Inject","args","Platform","propDecorators","ViewChild","Input","Output","ngDevMode","Directive","MatAutocomplete","arguments","ɵMatAutocomplete_BaseFactory","MatAutocomplete_Factory","ɵcmp","selectors","contentQueries","MatAutocomplete_ContentQueries","dirIndex","MAT_OPTGROUP","MatOption","optionGroups","hostAttrs","disableRipple","exportAs","provide","MAT_OPTION_PARENT_COMPONENT","useExisting","ngContentSelectors","decls","vars","consts","MatAutocomplete_Template","directives","styles","encapsulation","changeDetection","ContentChildren","descendants","Component","selector","ViewEncapsulation","ChangeDetectionStrategy","host","providers","_MatAutocompleteOriginBase","elementRef","_MatAutocompleteOriginBase_Factory","MatAutocompleteOrigin","ɵMatAutocompleteOrigin_BaseFactory","MatAutocompleteOrigin_Factory","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","Overlay","useFactory","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatAutocompleteTrigger","multi","getMatAutocompleteMissingPanelError","Error","_MatAutocompleteTriggerBase","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_document","_viewportRuler","_defaults","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","Subject","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","position","autocompleteAttribute","_overlayAttached","optionSelections","defer","autocomplete","merge","map","onSelectionChange","onStable","pipe","take","switchMap","_scrollStrategy","window","_getWindow","runOutsideAngular","addEventListener","changes","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","complete","_attachOverlay","_floatLabel","_resetLabel","hasAttached","detach","_closingActionsSubscription","detectChanges","tabOut","filter","_getOutsideClickStream","detachments","of","MatOptionSelectionChange","activeItem","fromEvent","clickTarget","_getEventTarget","formField","customOrigin","connectedTo","contains","overlayElement","Promise","resolve","then","_setTriggerValue","fn","isDisabled","disabled","keyCode","ESCAPE","hasModifierKey","preventDefault","activeOption","ENTER","_selectViaInteraction","_resetActiveItem","prevActiveItem","isArrowKey","UP_ARROW","DOWN_ARROW","TAB","onKeydown","_canOpen","openPanel","_scrollToOption","activeItemIndex","target","parseFloat","_previousValue","shouldAnimate","floatLabel","_animateAndLockLabel","firstStable","optionChanges","tap","reapplyLastPosition","delay","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","forEach","selected","deselect","_a","overlayRef","_portal","TemplatePortal","getLabelId","create","_getOverlayConfig","keydownEvents","next","stopPropagation","updateSize","width","_getPanelWidth","setOrigin","_getConnectedElement","attach","_subscribeToClosingActions","OverlayConfig","positionStrategy","_getOverlayPosition","direction","panelClass","overlayPanelClass","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","_aboveClass","abovePositions","positions","withPositions","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setFirstItemActive","setActiveItem","element","readOnly","defaultView","labelCount","_countGroupLabelsBeforeOption","_setScrollTop","_getHostElement","newScrollPosition","_getOptionScrollPosition","offsetTop","offsetHeight","_getScrollTop","_MatAutocompleteTriggerBase_Factory","MAT_FORM_FIELD","DOCUMENT","autocompleteDisabled","ViewContainerRef","NgZone","Directionality","Optional","MatFormField","Host","ViewportRuler","ɵMatAutocompleteTrigger_BaseFactory","MatAutocompleteTrigger_Factory","hostVars","hostBindings","MatAutocompleteTrigger_HostBindings","MatAutocompleteTrigger_focusin_HostBindingHandler","_handleFocus","MatAutocompleteTrigger_blur_HostBindingHandler","MatAutocompleteTrigger_input_HostBindingHandler","$event","_handleInput","MatAutocompleteTrigger_keydown_HostBindingHandler","_handleKeydown","toString","MatAutocompleteModule","MatAutocompleteModule_Factory","ɵmod","ɵinj","imports","OverlayModule","MatOptionModule","MatCommonModule","CommonModule","CdkScrollableModule","NgModule","exports","declarations","ngJitMode","activeEventOptions","normalizePassiveListenerOptions","passive","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","MatSlider","MatSliderChange","_MatSliderBase","mixinTabIndex","mixinColor","mixinDisabled","_focusMonitor","tabIndex","_ngZone","_animationMode","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","_pointerDown","isTouchEvent","button","run","_touchId","getTouchIdForSlider","pointerPosition","getPointerPositionOnPage","oldValue","_lastPointerEvent","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_emitInputEvent","_pointerMove","_pointerUp","findMatchingTouch","changedTouches","_removeGlobalEvents","_emitChangeEvent","_windowBlur","parseInt","v","coerceNumberProperty","_calculatePercentage","_roundToDecimal","split","pop","min","max","toFixed","_blurHostElement","_clamp","vertical","invert","percent","_isMinValue","thumbLabel","axis","scale","sign","_shouldInvertMouseCoords","transform","_getThumbGap","display","_getDirection","offset","tickSize","backgroundSize","rotate","shouldInvertAxis","_shouldInvertAxis","side","invertOffset","monitor","origin","stopMonitoring","_getSliderDimensions","_updateTickIntervalPercent","PAGE_UP","_increment","PAGE_DOWN","END","HOME","LEFT_ARROW","RIGHT_ARROW","triggerEvent","document","isTouch","moveEventName","endEventName","numSteps","step","pos","top","left","size","height","posComponent","y","x","exactValue","_calculateValue","closestValue","Math","round","_createChangeEvent","tickInterval","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","percentage","_sliderWrapper","blur","MatSlider_Factory","ANIMATION_MODULE_TYPE","MatSlider_Query","MatSlider_HostBindings","MatSlider_focus_HostBindingHandler","_onFocus","MatSlider_blur_HostBindingHandler","_onBlur","MatSlider_keydown_HostBindingHandler","_onKeydown","MatSlider_keyup_HostBindingHandler","_onKeyup","MatSlider_mouseenter_HostBindingHandler","MatSlider_selectstart_HostBindingHandler","valueText","displayValue","color","MatSlider_Template","_getTrackBackgroundStyles","_getTrackFillStyles","_getTicksContainerStyles","_getTicksStyles","_getThumbContainerStyles","FocusMonitor","String","Attribute","point","touches","clientX","clientY","i","identifier","sliderHost","MatSliderModule","MatSliderModule_Factory"],"mappings":"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","file":"default-node_modules_angular_material___ivy_ngcc___fesm2015_autocomplete_js-node_modules_angu-af90d9-es5.js","sourcesContent":["import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport { Platform, _getEventTarget } from '@angular/cdk/platform';\nimport { InjectionToken, EventEmitter, Directive, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, hasModifierKey, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/cdk/scrolling';\nimport * as ɵngcc6 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const formFieldId_r1 = ctx.id;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0._getPanelAriaLabelledby(formFieldId_r1));\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nconst _MatAutocompleteMixinBase = mixinDisableRipple(class {\n});\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults, platform) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated using the keyboard. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        // TODO(crisbeto): the problem that the `inertGroups` option resolves is only present on\n        // Safari using VoiceOver. We should occasionally check back to see whether the bug\n        // wasn't resolved in VoiceOver, and if it has, we can remove this and the `inertGroups`\n        // option altogether.\n        this.inertGroups = (platform === null || platform === void 0 ? void 0 : platform.SAFARI) || false;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = coerceStringArray(value).reduce((classList, className) => {\n                classList[className] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            if (this.isOpen) {\n                this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n            }\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Gets the aria-labelledby for the autocomplete panel. */\n    _getPanelAriaLabelledby(labelId) {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = function _MatAutocompleteBase_Factory(t) { return new (t || _MatAutocompleteBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform)); };\n_MatAutocompleteBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteBase, viewQuery: function _MatAutocompleteBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, inputs: { displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatAutocompleteBase.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] },\n    { type: Platform }\n];\n_MatAutocompleteBase.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatAutocompleteBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc1.Platform }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = /*@__PURE__*/ function () { let ɵMatAutocomplete_BaseFactory; return function MatAutocomplete_Factory(t) { return (ɵMatAutocomplete_BaseFactory || (ɵMatAutocomplete_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAutocomplete)))(t || MatAutocomplete); }; }();\nMatAutocomplete.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 4, \"ng-template\");\n    } }, directives: [ɵngcc2.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatAutocomplete.propDecorators = {\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\\n\"]\n            }]\n    }], null, { optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = function _MatAutocompleteOriginBase_Factory(t) { return new (t || _MatAutocompleteOriginBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\n_MatAutocompleteOriginBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteOriginBase });\n_MatAutocompleteOriginBase.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatAutocompleteOriginBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = /*@__PURE__*/ function () { let ɵMatAutocompleteOrigin_BaseFactory; return function MatAutocompleteOrigin_Factory(t) { return (ɵMatAutocompleteOrigin_BaseFactory || (ɵMatAutocompleteOrigin_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteOrigin)))(t || MatAutocompleteOrigin); }; }();\nMatAutocompleteOrigin.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler, _defaults) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._defaults = _defaults;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of autocomplete option selections. */\n        this.optionSelections = defer(() => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => event instanceof MatOptionSelectionChange ? event : null));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'auxclick'), fromEvent(this._document, 'touchend'))\n            .pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = _getEventTarget(event);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve(null).then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE && !hasModifierKey(event)) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        var _a;\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef, { id: (_a = this._formField) === null || _a === void 0 ? void 0 : _a.getLabelId() });\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                    (event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey'))) {\n                    this._closeKeyEventStream.next();\n                    this._resetActiveItem();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        var _a;\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir,\n            panelClass: (_a = this._defaults) === null || _a === void 0 ? void 0 : _a.overlayPanelClass,\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        const autocomplete = this.autocomplete;\n        if (autocomplete.autoActiveFirstOption) {\n            // Note that we go through `setFirstItemActive`, rather than `setActiveItem(0)`, because\n            // the former will find the next enabled option, if the first one is disabled.\n            autocomplete._keyManager.setFirstItemActive();\n        }\n        else {\n            autocomplete._keyManager.setActiveItem(-1);\n        }\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else if (autocomplete.panel) {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = function _MatAutocompleteTriggerBase_Factory(t) { return new (t || _MatAutocompleteTriggerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, 8)); };\n_MatAutocompleteTriggerBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteTriggerBase, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatAutocompleteTriggerBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\n_MatAutocompleteTriggerBase.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatAutocompleteTriggerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc3.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc6.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc5.ViewportRuler }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = /*@__PURE__*/ function () { let ɵMatAutocompleteTrigger_BaseFactory; return function MatAutocompleteTrigger_Factory(t) { return (ɵMatAutocompleteTrigger_BaseFactory || (ɵMatAutocompleteTrigger_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteTrigger)))(t || MatAutocompleteTrigger); }; }();\nMatAutocompleteTrigger.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵfac = function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); };\nMatAutocompleteModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n            CommonModule\n        ], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                    CommonModule\n                ],\n                exports: [\n                    MatAutocomplete,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    CdkScrollableModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin]; }, imports: function () { return [OverlayModule,\n        MatOptionModule,\n        MatCommonModule,\n        CommonModule]; }, exports: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin, CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, NgZone, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true\n};\n/** A simple change event emitted by the MatSlider component. */\nclass MatSliderChange {\n}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nconst _MatSliderBase = mixinTabIndex(mixinColor(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding and what the user is using to slide it with.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = null;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /** Subscription to the Directionality change EventEmitter. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Called when the user has put their pointer down on the slider. */\n        this._pointerDown = (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                this._touchId = isTouchEvent(event) ?\n                    getTouchIdForSlider(event, this._elementRef.nativeElement) : undefined;\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    const oldValue = this.value;\n                    this._isSliding = 'pointer';\n                    this._lastPointerEvent = event;\n                    event.preventDefault();\n                    this._focusHostElement();\n                    this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                    this._bindGlobalEvents(event);\n                    this._focusHostElement();\n                    this._updateValueFromPosition(pointerPosition);\n                    this._valueOnSlideStart = oldValue;\n                    // Emit a change and input event if the value changed.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            });\n        };\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (event) => {\n            if (this._isSliding === 'pointer') {\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    // Prevent the slide from selecting anything else.\n                    event.preventDefault();\n                    const oldValue = this.value;\n                    this._lastPointerEvent = event;\n                    this._updateValueFromPosition(pointerPosition);\n                    // Native range elements always emit `input` events when the value changed while sliding.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            }\n        };\n        /** Called when the user has lifted their pointer. Bound on the document level. */\n        this._pointerUp = (event) => {\n            if (this._isSliding === 'pointer') {\n                if (!isTouchEvent(event) || typeof this._touchId !== 'number' ||\n                    // Note that we use `changedTouches`, rather than `touches` because it\n                    // seems like in most cases `touches` is empty for `touchend` events.\n                    findMatchingTouch(event.changedTouches, this._touchId)) {\n                    event.preventDefault();\n                    this._removeGlobalEvents();\n                    this._isSliding = null;\n                    this._touchId = undefined;\n                    if (this._valueOnSlideStart != this.value && !this.disabled) {\n                        this._emitChangeEvent();\n                    }\n                    this._valueOnSlideStart = this._lastPointerEvent = null;\n                }\n            }\n        };\n        /** Called when the window has lost focus. */\n        this._windowBlur = () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        };\n        this._document = _document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _ngZone.runOutsideAngular(() => {\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        });\n    }\n    /** Whether the slider is inverted. */\n    get invert() { return this._invert; }\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n    get max() { return this._max; }\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n    get min() { return this._min; }\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n    get step() { return this._step; }\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = this._step.toString().split('.').pop().length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n    get thumbLabel() { return this._thumbLabel; }\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    get tickInterval() { return this._tickInterval; }\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /** Value of the slider. */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            let value = coerceNumberProperty(v, 0);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal && value !== this.min && value !== this.max) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the slider is vertical. */\n    get vertical() { return this._vertical; }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /** set focus to the host element */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /** blur the host element */\n    blur() {\n        this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n    _shouldInvertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n    _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n    _getThumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue() && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /** CSS styles for the track background element. */\n    _getTrackBackgroundStyles() {\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`\n        };\n    }\n    /** CSS styles for the track fill element. */\n    _getTrackFillStyles() {\n        const percent = this.percent;\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : ''\n        };\n    }\n    /** CSS styles for the ticks container element. */\n    _getTicksContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /** CSS styles for the ticks element. */\n    _getTicksStyles() {\n        let tickSize = this._tickIntervalPercent * 100;\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue() && this._getThumbGap()) {\n            const shouldInvertAxis = this._shouldInvertAxis();\n            let side;\n            if (this.vertical) {\n                side = shouldInvertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = shouldInvertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._getThumbGap()}px`;\n        }\n        return styles;\n    }\n    _getThumbContainerStyles() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n    _shouldInvertMouseCoords() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n    }\n    /** The language direction for this slider element. */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onBlur() {\n        this.onTouched();\n    }\n    _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event) ||\n            (this._isSliding && this._isSliding !== 'keyboard')) {\n            return;\n        }\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = 'keyboard';\n        event.preventDefault();\n    }\n    _onKeyup() {\n        if (this._isSliding === 'keyboard') {\n            this._isSliding = null;\n        }\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        const document = this._document;\n        const isTouch = isTouchEvent(triggerEvent);\n        const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        const endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n        if (isTouch) {\n            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Removes any global event listeners that we may have added. */\n    _removeGlobalEvents() {\n        const document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /** Creates a slider change object from the specified value. */\n    _createChangeEvent(value = this.value) {\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlider.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"], hostVars: 29, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-valuetext\", ctx.valueText == null ? ctx.displayValue : ctx.valueText)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._shouldInvertAxis())(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue())(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue() && ctx._getThumbGap() && ctx._shouldInvertAxis())(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", value: \"value\", vertical: \"vertical\", displayWith: \"displayWith\", valueText: \"valueText\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelement(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackBackgroundStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackFillStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksContainerStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getThumbContainerStyles());\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, directives: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    valueText: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slider',\n                exportAs: 'matSlider',\n                providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    // On Safari starting to slide temporarily triggers text selection mode which\n                    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                    '(selectstart)': '$event.preventDefault()',\n                    'class': 'mat-slider mat-focus-indicator',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n                    // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n                    // it can cause the slider to read out a very long value like 0.20000068 if the current value\n                    // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n                    // to the same value that we set on the slider's thumb which will be truncated.\n                    '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if mouse coordinates need to be inverted.\n                    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue()',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], valueText: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event, id) {\n    let point;\n    if (isTouchEvent(event)) {\n        // The `identifier` could be undefined if the browser doesn't support `TouchEvent.identifier`.\n        // If that's the case, attribute the first touch to all active sliders. This should still cover\n        // the most common case while only breaking multi-touch.\n        if (typeof id === 'number') {\n            point = findMatchingTouch(event.touches, id) || findMatchingTouch(event.changedTouches, id);\n        }\n        else {\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            point = event.touches[0] || event.changedTouches[0];\n        }\n    }\n    else {\n        point = event;\n    }\n    return point ? { x: point.clientX, y: point.clientY } : undefined;\n}\n/** Finds a `Touch` with a specific ID in a `TouchList`. */\nfunction findMatchingTouch(touches, id) {\n    for (let i = 0; i < touches.length; i++) {\n        if (touches[i].identifier === id) {\n            return touches[i];\n        }\n    }\n    return undefined;\n}\n/** Gets the unique ID of a touch that matches a specific slider. */\nfunction getTouchIdForSlider(event, sliderHost) {\n    for (let i = 0; i < event.touches.length; i++) {\n        const target = event.touches[i].target;\n        if (sliderHost === target || sliderHost.contains(target)) {\n            return event.touches[i].identifier;\n        }\n    }\n    return undefined;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); };\nMatSliderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n\n//# sourceMappingURL=slider.js.map"]}