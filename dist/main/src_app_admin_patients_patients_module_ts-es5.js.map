{"version":3,"sources":["webpack:///src/app/admin/patients/add-patient/add-patient.component.html","webpack:///src/app/admin/patients/add-patient/add-patient.component.ts","webpack:///src/app/admin/patients/allpatients/allpatients.component.html","webpack:///src/app/admin/patients/allpatients/allpatients.component.ts","webpack:///src/app/admin/patients/allpatients/dialog/delete/delete.component.ts","webpack:///src/app/admin/patients/allpatients/dialog/delete/delete.component.html","webpack:///src/app/admin/patients/allpatients/dialog/form-dialog/form-dialog.component.html","webpack:///src/app/admin/patients/allpatients/dialog/form-dialog/form-dialog.component.ts","webpack:///src/app/admin/patients/allpatients/patient.model.ts","webpack:///src/app/admin/patients/allpatients/patient.service.ts","webpack:///src/app/admin/patients/edit-patient/edit-patient.component.html","webpack:///src/app/admin/patients/edit-patient/edit-patient.component.ts","webpack:///src/app/admin/patients/patient-profile/patient-profile.component.ts","webpack:///src/app/admin/patients/patient-profile/patient-profile.component.html","webpack:///src/app/admin/patients/patients-routing.module.ts","webpack:///src/app/admin/patients/patients.module.ts"],"names":["AddPatientComponent","fb","patientForm","group","first","Validators","last","gender","mobile","dob","age","email","maritalStatus","address","bGroup","bPresure","sugger","injury","uploadImg","console","log","value","onSubmit","$event","stopPropagation","selection","AllpatientsComponent","httpClient","dialog","patientService","snackBar","displayedColumns","SelectionModel","loadData","tempDirection","localStorage","getItem","dialogRef","open","FormDialogComponent","data","patient","action","direction","subs","sink","afterClosed","subscribe","result","exampleDatabase","dataChange","unshift","getDialogData","refreshTable","showNotification","row","id","foundIndex","findIndex","x","i","index","DeleteComponent","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","d","PatientService","ExampleDataSource","sort","fromEvent","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","UnsubscribeOnDestroyAdapter","MatPaginator","MatSort","removeSelectedRows","addNew","refresh","_sort","filterChange","BehaviorSubject","filteredData","pageIndex","next","displayDataChanges","sortChange","page","getAllPatients","merge","pipe","map","slice","searchStr","name","date","treatment","toLowerCase","indexOf","sortedData","sortData","startIndex","active","a","b","propertyA","propertyB","valueA","isNaN","valueB","DataSource","close","deletePatient","MAT_DIALOG_DATA","confirmDelete","onNoClick","formControl","FormControl","dialogTitle","Patient","createContactForm","hasError","img","addPatient","getRawValue","confirmAdd","getRandomID","avatar","S4","Math","random","toString","substring","API_URL","isTblLoading","dialogData","get","error","message","EditPatientComponent","formdata","PatientProfileComponent","routes","path","component","Page404Component","PatientsRoutingModule","RouterModule","PatientsModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatToolbarModule","MatDatepickerModule","MatSelectModule","MatRadioModule","MatMenuModule","MatCheckboxModule","MaterialFileInputModule","MatProgressSpinnerModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCoB;;AACE;;AACF;;;;;;AAsBA;;AACE;;AACF;;;;;;AAiBA;;AACE;;AACF;;;;;;AAeA;;AACE;;AACF;;;;;;AAcA;;AACE;;AACF;;;;UCzGPA,oB;AAEX,sCAAoBC,EAApB,EAAqC;AAAA;;AAAjB,eAAAA,EAAA,GAAAA,EAAA;AAClB,eAAKC,WAAL,GAAmB,KAAKD,EAAL,CAAQE,KAAR,CAAc;AAC/BC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAC,UAAA,SAAD,EAAsB,4CAAAA,UAAA,SAAmB,WAAnB,CAAtB,CAAL,CADwB;AAE/BC,gBAAI,EAAE,CAAC,EAAD,CAFyB;AAG/BC,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAF,UAAA,SAAD,CAAL,CAHuB;AAI/BG,kBAAM,EAAE,CAAC,EAAD,CAJuB;AAK/BC,eAAG,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAJ,UAAA,SAAD,CAAL,CAL0B;AAM/BK,eAAG,EAAE,CAAC,EAAD,CAN0B;AAO/BC,iBAAK,EAAE,CACL,EADK,EAEL,CAAC,4CAAAN,UAAA,SAAD,EAAsB,4CAAAA,UAAA,MAAtB,EAAwC,4CAAAA,UAAA,WAAqB,CAArB,CAAxC,CAFK,CAPwB;AAW/BO,yBAAa,EAAE,CAAC,EAAD,CAXgB;AAY/BC,mBAAO,EAAE,CAAC,EAAD,CAZsB;AAa/BC,kBAAM,EAAE,CAAC,EAAD,CAbuB;AAc/BC,oBAAQ,EAAE,CAAC,EAAD,CAdqB;AAe/BC,kBAAM,EAAE,CAAC,EAAD,CAfuB;AAgB/BC,kBAAM,EAAE,CAAC,EAAD,CAhBuB;AAiB/BC,qBAAS,EAAE,CAAC,EAAD;AAjBoB,WAAd,CAAnB;AAmBD;;;;iBACD,oBAAW;AACTC,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKlB,WAAL,CAAiBmB,KAA3C;AACD;;;;;;;yBAzBUrB,oB,EAAmB,wH;AAAA,O;;;cAAnBA,oB;AAAmB,wC;AAAA,kB;AAAA,gB;AAAA,2sD;AAAA;AAAA;ADRhC;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAW;;AACpC;;AACA;;AACE;;AACE;;AAA4B;;AAAI;;AACpC;;AACA;;AACE;;AAAoC;;AAAQ;;AAC9C;;AACA;;AAAmC;;AAAG;;AACxC;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAS;;AAAmB;;AAAS;;AAE3C;;AACA;;AACE;;AAA4C;AAAA,qBAAY,IAAAsB,QAAA,EAAZ;AAAsB,aAAtB;;AAC1C;;AACE;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACA;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAG;;AACd;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACF;;AACF;;AACF;;A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;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACA;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAG;;AACd;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACkB;;AAAM;;AACxB;;AAAiC;;AAAM;;AACzC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAzI8B;;AAAA;;AAME;;AAAA;;AAiBE;;AAAA;;AAGA;;AAAA;;AAIF;;AAAA;;AAgBI;;AAAA;;AACiB;;AAAA;;AAErB;;AAAA;;AAiBA;;AAAA;;AASE;;AAAA;;AAGA;;AAAA;;AAIF;;AAAA;;AA4CY;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEpJ/B4I,wB;AACX,4CAAc;AAAA;AAAE;;;;iBAEhB,oBAAQ,CAAW;;;;;;;yBAHRA,wB;AAAuB,O;;;cAAvBA,wB;AAAuB,4C;AAAA,kB;AAAA,e;AAAA,6qD;AAAA;AAAA;ACPpC;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAe;;AACxC;;AACA;;AACE;;AACE;;AAA4B;;AAAI;;AACpC;;AACA;;AACE;;AAAoC;;AAAO;;AAC7C;;AACA;;AAAmC;;AAAO;;AAC5C;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAa;;AACnB;;AACA;;AACE;;AAAwB;;AAQZ;;AACZ;;AAA0B;;AAAe;;AACzC;;AAAG;;AAAc;;AACjB;;AACA;;AAA0B;;AAAO;;AACjC;;AAAG;;AAAc;;AACjB;;AACA;;AAA0B;;AAAS;;AACnC;;AAAG;;AACc;;AACjB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAK;;AACX;;AACA;;AACE;;AAAG;;AAKiB;;AACpB;;AAAG;;AAEqD;;AACxD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAI;;AAAc;;AACpB;;AACA;;AACE;;AACE;;AACE;;AAAI;;AAAW;;AAAwB;;AAAE;;AAAO;;AAChD;;AACE;;AAEF;;AACF;;AACA;;AACE;;AAAI;;AAAc;;AAAwB;;AAAE;;AAAO;;AACnD;;AACE;;AAEF;;AACF;;AACA;;AACE;;AAAI;;AAAK;;AAAwB;;AAAE;;AAAO;;AAC1C;;AACE;;AAEF;;AACF;;AACA;;AACE;;AAAI;;AAAW;;AAAwB;;AAAG;;AAAO;;AACjD;;AACE;;AAEF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAI;;AAAkB;;AACxB;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAI;;AACR;;AAAI;;AAAM;;AACV;;AAAI;;AAAS;;AACb;;AAAI;;AAAU;;AACd;;AAAI;;AAAM;;AACZ;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAU;;AACd;;AAAI;;AAAS;;AACb;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAG;;AACP;;AACE;;AACE;;AAA0B;;AAAS;;AACrC;;AACA;;AACE;;AAA0B;;AAAM;;AAClC;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAU;;AACd;;AAAI;;AAAS;;AACb;;AAAI;;AAAK;;AACT;;AAAI;;AAAG;;AACP;;AACE;;AACE;;AAA0B;;AAAS;;AACrC;;AACA;;AACE;;AAA0B;;AAAM;;AAClC;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAU;;AACd;;AAAI;;AAAS;;AACb;;AAAI;;AAAU;;AACd;;AAAI;;AAAG;;AACP;;AACE;;AACE;;AAA0B;;AAAS;;AACrC;;AACA;;AACE;;AAA0B;;AAAM;;AAClC;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAU;;AACd;;AAAI;;AAAS;;AACb;;AAAI;;AAAK;;AACT;;AAAI;;AAAG;;AACP;;AACE;;AACE;;AAA0B;;AAAS;;AACrC;;AACA;;AACE;;AAA0B;;AAAM;;AAClC;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAU;;AACd;;AAAI;;AAAS;;AACb;;AAAI;;AAAS;;AACb;;AAAI;;AAAG;;AACP;;AACE;;AACE;;AAA0B;;AAAS;;AACrC;;AACA;;AACE;;AAA0B;;AAAM;;AAClC;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAU;;AACd;;AAAI;;AAAS;;AACb;;AAAI;;AAAS;;AACb;;AAAI;;AAAG;;AACP;;AACE;;AACE;;AAA0B;;AAAS;;AACrC;;AACA;;AACE;;AAA0B;;AAAM;;AAClC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/NA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,cADR;AAEEC,iBAAS,EAAE,gEAAA3I;AAFb,OADqB,EAKrB;AACE0I,YAAI,EAAE,aADR;AAEEC,iBAAS,EAAE,gEAAArK;AAFb,OALqB,EASrB;AACEoK,YAAI,EAAE,cADR;AAEEC,iBAAS,EAAE,kEAAAL;AAFb,OATqB,EAarB;AACEI,YAAI,EAAE,iBADR;AAEEC,iBAAS,EAAE,wEAAAH;AAFb,OAbqB,EAiBrB;AAAEE,YAAI,EAAE,IAAR;AAAcC,iBAAS,EAAE,uEAAAC;AAAzB,OAjBqB,CAAvB;;UAwBaC,sB;;;;;yBAAAA,sB;AAAqB,O;;;cAArBA;;;kBAHF,CAAC,6CAAAC,YAAA,UAAsBL,MAAtB,CAAD,C,EACC,6CAAAK,Y;;;;4HAECD,sB,EAAqB;AAAA;AAAA,oBAFtB,6CAAAC,YAEsB;AAAA,S;AAFV,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCkCXC,e;;;;;yBAAAA,e;AAAc,O;;;cAAdA;;;mBAFA,CAAC,0DAAAzF,cAAD,C;AAAgB,kBAvBlB,CACP,6CAAA0F,YADO,EAEP,sDAAAH,qBAFO,EAGP,6CAAAI,WAHO,EAIP,6CAAAC,mBAJO,EAKP,sDAAAC,cALO,EAMP,0DAAAC,kBANO,EAOP,2DAAAC,kBAPO,EAQP,sDAAAC,cARO,EASP,0DAAAC,iBATO,EAUP,uDAAAC,eAVO,EAWP,qDAAAC,aAXO,EAYP,uDAAAC,eAZO,EAaP,qDAAAC,aAbO,EAcP,wDAAAC,gBAdO,EAeP,2DAAAC,mBAfO,EAgBP,uDAAAC,eAhBO,EAiBP,sDAAAC,cAjBO,EAkBP,qDAAAC,aAlBO,EAmBP,yDAAAC,iBAnBO,EAoBP,sDAAAC,uBApBO,EAqBP,iEAAAC,wBArBO,CAuBkB;;;;4HAEhBpB,e,EAAc;AAAA,yBAhCvB,gEAAAzK,mBAgCuB,EA/BvB,gEAAA0B,oBA+BuB,EA9BvB,kEAAAsI,oBA8BuB,EA7BvB,wEAAAE,uBA6BuB,EA5BvB,yEAAApG,eA4BuB,EA3BvB,mFAAAvB,mBA2BuB;AA3BJ,oBAGnB,6CAAAmI,YAHmB,EAInB,sDAAAH,qBAJmB,EAKnB,6CAAAI,WALmB,EAMnB,6CAAAC,mBANmB,EAOnB,sDAAAC,cAPmB,EAQnB,0DAAAC,kBARmB,EASnB,2DAAAC,kBATmB,EAUnB,sDAAAC,cAVmB,EAWnB,0DAAAC,iBAXmB,EAYnB,uDAAAC,eAZmB,EAanB,qDAAAC,aAbmB,EAcnB,uDAAAC,eAdmB,EAenB,qDAAAC,aAfmB,EAgBnB,wDAAAC,gBAhBmB,EAiBnB,2DAAAC,mBAjBmB,EAkBnB,uDAAAC,eAlBmB,EAmBnB,sDAAAC,cAnBmB,EAoBnB,qDAAAC,aApBmB,EAqBnB,yDAAAC,iBArBmB,EAsBnB,sDAAAC,uBAtBmB,EAuBnB,iEAAAC,wBAvBmB;AA2BI,S;AAJC,O","file":"src_app_admin_patients_patients_module_ts-es5.js","sourcesContent":["<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Add Patient</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Patients</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Add</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2><strong> Patient Information</strong></h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"patientForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>First name</mat-label>\r\n                    <input matInput formControlName=\"first\" required>\r\n                    <mat-error *ngIf=\"patientForm.get('first').hasError('required')\">\r\n                      First name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Last name</mat-label>\r\n                    <input matInput formControlName=\"last\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Gender</mat-label>\r\n                    <mat-select formControlName=\"gender\" required>\r\n                      <mat-option [value]=\"'Male'\">\r\n                        Male\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Female'\">\r\n                        Female\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"patientForm.get('gender').hasError('required')\">\r\n                      Gender is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput formControlName=\"mobile\" type=\"number\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Date Of Birth</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"patientForm.get('dob').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Age</mat-label>\r\n                    <input matInput formControlName=\"age\" type=\"number\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" type=\"email\" required>\r\n                    <mat-error *ngIf=\"patientForm.get('email').hasError('email') && patientForm.get('email').touched\">\r\n                      Please enter a valid email address\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Marital Status</mat-label>\r\n                    <mat-select formControlName=\"maritalStatus\" required>\r\n                      <mat-option [value]=\"'1'\">\r\n                        Single\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'2'\">\r\n                        Married\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"patientForm.get('maritalStatus').hasError('required')\">\r\n                      Select Any\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Address</mat-label>\r\n                    <textarea matInput formControlName=\"address\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Blood Group</mat-label>\r\n                    <input matInput formControlName=\"bGroup\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Blood Presure</mat-label>\r\n                    <input matInput formControlName=\"bPresure\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Sugger</mat-label>\r\n                    <input matInput formControlName=\"sugger\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Injury/Condition</mat-label>\r\n                    <input matInput formControlName=\"injury\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Upload Image</mat-label>\r\n                    <ngx-mat-file-input formControlName=\"uploadImg\">\r\n                    </ngx-mat-file-input>\r\n                    <mat-icon matSuffix>face</mat-icon>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <button class=\"btn-space\" [disabled]=\"!patientForm.valid \" mat-raised-button\r\n                    color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-add-patient\",\r\n  templateUrl: \"./add-patient.component.html\",\r\n  styleUrls: [\"./add-patient.component.sass\"],\r\n})\r\nexport class AddPatientComponent {\r\n  patientForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.patientForm = this.fb.group({\r\n      first: [\"\", [Validators.required, Validators.pattern(\"[a-zA-Z]+\")]],\r\n      last: [\"\"],\r\n      gender: [\"\", [Validators.required]],\r\n      mobile: [\"\"],\r\n      dob: [\"\", [Validators.required]],\r\n      age: [\"\"],\r\n      email: [\r\n        \"\",\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      maritalStatus: [\"\"],\r\n      address: [\"\"],\r\n      bGroup: [\"\"],\r\n      bPresure: [\"\"],\r\n      sugger: [\"\"],\r\n      injury: [\"\"],\r\n      uploadImg: [\"\"],\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log(\"Form Value\", this.patientForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">View Patient</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Patient</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">View</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"table-responsive\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ms-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Patients</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"img\">\r\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\"> Image\r\n                  </mat-header-cell>\r\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\"> <img\r\n                      [src]=\"row.img\" />\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"name\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.name}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"gender\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-8'\">Gender\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-8'\"> {{row.gender}}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"address\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-15'\">Address\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-20'\"> {{row.address}}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"mobile\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.mobile}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Birth Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy'}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"bGroup\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Blood Group</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.bGroup}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"treatment\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Treatment</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.treatment}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(i, row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { PatientService } from \"./patient.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { Patient } from \"./patient.model\";\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { FormDialogComponent } from \"./dialog/form-dialog/form-dialog.component\";\r\nimport { DeleteComponent } from \"./dialog/delete/delete.component\";\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n\r\n@Component({\r\n  selector: \"app-allpatients\",\r\n  templateUrl: \"./allpatients.component.html\",\r\n  styleUrls: [\"./allpatients.component.sass\"],\r\n})\r\nexport class AllpatientsComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    \"select\",\r\n    \"img\",\r\n    \"name\",\r\n    \"gender\",\r\n    \"address\",\r\n    \"mobile\",\r\n    \"date\",\r\n    \"bGroup\",\r\n    \"treatment\",\r\n    \"actions\",\r\n  ];\r\n  exampleDatabase: PatientService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Patient>(true, []);\r\n  index: number;\r\n  id: number;\r\n  patient: Patient | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public patientService: PatientService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        patient: this.patient,\r\n        action: \"add\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.patientService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-success\",\r\n          \"Add Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        patient: row,\r\n        action: \"edit\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.patientService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"black\",\r\n          \"Edit Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(i: number, row) {\r\n    this.index = i;\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-danger\",\r\n          \"Delete Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Patient>(true, []);\r\n    });\r\n    this.showNotification(\r\n      \"snackbar-danger\",\r\n      totalSelect + \" Record Delete Successfully...!!!\",\r\n      \"bottom\",\r\n      \"center\"\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new PatientService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, \"keyup\").subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, \"\", {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Patient> {\r\n  filterChange = new BehaviorSubject(\"\");\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Patient[] = [];\r\n  renderedData: Patient[] = [];\r\n  constructor(\r\n    public exampleDatabase: PatientService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Patient[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllPatients();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((patient: Patient) => {\r\n            const searchStr = (\r\n              patient.name +\r\n              patient.gender +\r\n              patient.address +\r\n              patient.date +\r\n              patient.bGroup +\r\n              patient.treatment +\r\n              patient.mobile\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Patient[]): Patient[] {\r\n    if (!this._sort.active || this._sort.direction === \"\") {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = \"\";\r\n      let propertyB: number | string = \"\";\r\n      switch (this._sort.active) {\r\n        case \"id\":\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case \"name\":\r\n          [propertyA, propertyB] = [a.name, b.name];\r\n          break;\r\n        case \"gender\":\r\n          [propertyA, propertyB] = [a.gender, b.gender];\r\n          break;\r\n        case \"date\":\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n        case \"address\":\r\n          [propertyA, propertyB] = [a.address, b.address];\r\n          break;\r\n        case \"mobile\":\r\n          [propertyA, propertyB] = [a.mobile, b.mobile];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { PatientService } from \"../../patient.service\";\r\n\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class DeleteComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public patientService: PatientService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.patientService.deletePatient(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Patient Name: </span>{{data.name}}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Gender: </span>{{ data.gender }}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"font-weight-bold\">Blood Group: </span>{{data.bGroup}}\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <img [src]='patient.img' alt=\"avatar\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 msl-3 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"patientForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput formControlName=\"name\" required>\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"patientForm.get('name').hasError('required')\">\r\n              Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Mobile</mat-label>\r\n            <input matInput formControlName=\"mobile\" type=\"number\">\r\n            <mat-icon matSuffix>phone</mat-icon>\r\n            <mat-error *ngIf=\"patientForm.get('mobile').hasError('required')\">\r\n              Mobile is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"m-b-20\">\r\n            <mat-label class=\"msr-3\">Gender:</mat-label>\r\n            <mat-radio-group aria-label=\"Select gender\" formControlName=\"gender\" required>\r\n              <mat-radio-button value=\"male\">Male</mat-radio-button>\r\n              <mat-radio-button value=\"female\">Female</mat-radio-button>\r\n              <mat-error *ngIf=\"patientForm.get('gender').hasError('required')\">\r\n                Select gender\r\n              </mat-error>\r\n            </mat-radio-group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Address</mat-label>\r\n            <textarea matInput formControlName=\"address\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Birth date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"patientForm.get('date').hasError('required')\">\r\n              Please select date\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n            <mat-label>Blood Group</mat-label>\r\n            <mat-select formControlName=\"bGroup\" required>\r\n              <mat-option [value]=\"'A+'\">\r\n                A+\r\n              </mat-option>\r\n              <mat-option [value]=\"'B+'\">\r\n                B+\r\n              </mat-option>\r\n              <mat-option [value]=\"'O+'\">\r\n                O+\r\n              </mat-option>\r\n              <mat-option [value]=\"'AB+'\">\r\n                AB+\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"patientForm.get('bGroup').hasError('required')\">\r\n              Blood Group is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Treatment</mat-label>\r\n            <input matInput formControlName=\"treatment\" required>\r\n            <mat-icon matSuffix>healing</mat-icon>\r\n            <mat-error *ngIf=\"patientForm.get('treatment').hasError('required')\">\r\n              Treatment is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!patientForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { PatientService } from \"../../patient.service\";\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder,\r\n} from \"@angular/forms\";\r\nimport { Patient } from \"../../patient.model\";\r\n\r\n@Component({\r\n  selector: \"app-form-dialog\",\r\n  templateUrl: \"./form-dialog.component.html\",\r\n  styleUrls: [\"./form-dialog.component.sass\"],\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  patientForm: FormGroup;\r\n  patient: Patient;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public patientService: PatientService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === \"edit\") {\r\n      this.dialogTitle = data.patient.name;\r\n      this.patient = data.patient;\r\n    } else {\r\n      this.dialogTitle = \"New Patient\";\r\n      this.patient = new Patient({});\r\n    }\r\n    this.patientForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl(\"\", [\r\n    Validators.required,\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError(\"required\")\r\n      ? \"Required field\"\r\n      : this.formControl.hasError(\"email\")\r\n      ? \"Not a valid email\"\r\n      : \"\";\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.patient.id],\r\n      img: [this.patient.img],\r\n      name: [this.patient.name],\r\n      gender: [this.patient.gender],\r\n      date: [this.patient.date],\r\n      bGroup: [this.patient.bGroup],\r\n      mobile: [this.patient.mobile],\r\n      address: [this.patient.address],\r\n      treatment: [this.patient.treatment],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.patientService.addPatient(this.patientForm.getRawValue());\r\n  }\r\n}\r\n","export class Patient {\r\n  id: number;\r\n  img: string;\r\n  name: string;\r\n  gender: string;\r\n  bGroup: string;\r\n  date: string;\r\n  address: string;\r\n  mobile: string;\r\n  treatment: string;\r\n  constructor(patient) {\r\n    {\r\n      this.id = patient.id || this.getRandomID();\r\n      this.img = patient.avatar || \"assets/images/user/user1.jpg\";\r\n      this.name = patient.name || \"\";\r\n      this.gender = patient.gender || \"male\";\r\n      this.bGroup = patient.email || \"\";\r\n      this.date = patient.date || \"\";\r\n      this.address = patient.address || \"\";\r\n      this.mobile = patient.mobile || \"\";\r\n      this.treatment = patient.treatment || \"\";\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    var S4 = function () {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Patient } from \"./patient.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n@Injectable()\r\nexport class PatientService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = \"assets/data/patient.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Patient[]> = new BehaviorSubject<Patient[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): Patient[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllPatients(): void {\r\n    this.subs.sink = this.httpClient.get<Patient[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + \" \" + error.message);\r\n      }\r\n    );\r\n  }\r\n  addPatient(patient: Patient): void {\r\n    this.dialogData = patient;\r\n\r\n    /*  this.httpClient.post(this.API_URL, patient).subscribe(data => {\r\n      this.dialogData = patient;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updatePatient(patient: Patient): void {\r\n    this.dialogData = patient;\r\n\r\n    /* this.httpClient.put(this.API_URL + patient.id, patient).subscribe(data => {\r\n      this.dialogData = patient;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deletePatient(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Edit Patient</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Patients</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Edit</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2><strong> Patient Information</strong></h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"patientForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>First name</mat-label>\r\n                    <input matInput formControlName=\"first\" required>\r\n                    <mat-error *ngIf=\"patientForm.get('first').hasError('required')\">\r\n                      First name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Last name</mat-label>\r\n                    <input matInput formControlName=\"last\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Gender</mat-label>\r\n                    <mat-select formControlName=\"gender\" required>\r\n                      <mat-option [value]=\"'Male'\">\r\n                        Male\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Female'\">\r\n                        Female\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"patientForm.get('gender').hasError('required')\">\r\n                      Gender is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput formControlName=\"mobile\" type=\"number\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Date Of Birth</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"patientForm.get('dob').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Age</mat-label>\r\n                    <input matInput formControlName=\"age\" type=\"number\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" type=\"email\" required>\r\n                    <mat-error *ngIf=\"patientForm.get('email').hasError('email') && patientForm.get('email').touched\">\r\n                      Please enter a valid email address\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Marital Status</mat-label>\r\n                    <mat-select formControlName=\"maritalStatus\" required>\r\n                      <mat-option [value]=\"'1'\">\r\n                        Single\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'2'\">\r\n                        Married\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"patientForm.get('maritalStatus').hasError('required')\">\r\n                      Select Any\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Address</mat-label>\r\n                    <textarea matInput formControlName=\"address\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Blood Group</mat-label>\r\n                    <input matInput formControlName=\"bGroup\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Blood Presure</mat-label>\r\n                    <input matInput formControlName=\"bPresure\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Sugger</mat-label>\r\n                    <input matInput formControlName=\"sugger\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Injury/Condition</mat-label>\r\n                    <input matInput formControlName=\"injury\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <button class=\"btn-space\" [disabled]=\"!patientForm.valid \" mat-raised-button\r\n                    color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-edit-patient\",\r\n  templateUrl: \"./edit-patient.component.html\",\r\n  styleUrls: [\"./edit-patient.component.sass\"],\r\n})\r\nexport class EditPatientComponent {\r\n  patientForm: FormGroup;\r\n  formdata = {\r\n    first: \"Pooja\",\r\n    last: \"Sarma\",\r\n    gender: \"Female\",\r\n    mobile: \"123456789\",\r\n    age: \"23\",\r\n    email: \"test@example.com\",\r\n    maritalStatus: \"1\",\r\n    bGroup: \"O+\",\r\n    bPresure: \"123\",\r\n    sugger: \"150\",\r\n    injury: \"Fever\",\r\n    address: \"101, Elanxa, New Yourk\",\r\n    dob: \"1987-02-17T14:22:18Z\",\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.patientForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log(\"Form Value\", this.patientForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      first: [\r\n        this.formdata.first,\r\n        [Validators.required, Validators.pattern(\"[a-zA-Z]+\")],\r\n      ],\r\n      last: [this.formdata.last],\r\n      gender: [this.formdata.gender, [Validators.required]],\r\n      mobile: [this.formdata.mobile, [Validators.required]],\r\n      age: [this.formdata.age],\r\n      maritalStatus: [this.formdata.maritalStatus],\r\n      email: [\r\n        this.formdata.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      bGroup: [this.formdata.bGroup],\r\n      bPresure: [this.formdata.bPresure],\r\n      address: [this.formdata.address],\r\n      dob: [this.formdata.dob, [Validators.required]],\r\n      sugger: [this.formdata.sugger],\r\n      injury: [this.formdata.injury],\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-patient-profile\",\r\n  templateUrl: \"./patient-profile.component.html\",\r\n  styleUrls: [\"./patient-profile.component.sass\"],\r\n})\r\nexport class PatientProfileComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Patient Profile</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Patient</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Profile</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-lg-4 col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"contact-grid profile-image\">\r\n            <img src=\"assets/images/user/usrbig4.jpg\" alt=\"\">\r\n          </div>\r\n        </div>\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>About Patient</h2>\r\n          </div>\r\n          <div class=\"tab-pane body active\" id=\"about\">\r\n            <p class=\"text-default\">Lorem Ipsum is simply dummy text of the printing and\r\n              typesetting industry. Lorem Ipsum has\r\n              been the industry's standard dummy text ever since the 1500s, when an unknown\r\n              printer\r\n              took a galley of type and scrambled it to make a type specimen book. It has\r\n              survived\r\n              not only five centuries, but also the leap into electronic typesetting, remaining\r\n              essentially\r\n              unchanged.</p>\r\n            <small class=\"text-muted\">Email address: </small>\r\n            <p>john@gmail.com</p>\r\n            <hr>\r\n            <small class=\"text-muted\">Phone: </small>\r\n            <p>+91 1234567890</p>\r\n            <hr>\r\n            <small class=\"text-muted\">Address: </small>\r\n            <p>345, Sarju Appt., Mota Varacha, Surat\r\n              Gujarat, India.</p>\r\n            <hr>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-8 col-md-12\">\r\n        <div class=\"tab-content\">\r\n          <div role=\"tabpanel\" class=\"tab-pane active\" aria-expanded=\"true\">\r\n            <div class=\"row clearfix\">\r\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card project_widget\">\r\n                  <div class=\"header\">\r\n                    <h5>About</h5>\r\n                  </div>\r\n                  <div class=\"body\">\r\n                    <p>It is also used to identify any abnormal tissue in the uterine cavity, such\r\n                      as uterine fibroids, endometrial polyps, scar tissue, or retained pregnancy\r\n                      tissue, the presence of which may be suggested by history or previous tests\r\n                      such as a hysterosalpingogram (x-ray of the uterus and tubes). This\r\n                      procedure is done in the office here at IVF New England, and is done by one\r\n                      of the physicians.</p>\r\n                    <p>Approximately an hour before the exam we suggest that you take Ibuprofen 600\r\n                      mg (Motrin/Advil) or a similar medication to minimize some mild to moderate\r\n                      cramping that you may experience during the procedure.</p>\r\n                    <br>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card project_widget\">\r\n                  <div class=\"header\">\r\n                    <h5>General Report</h5>\r\n                  </div>\r\n                  <div class=\"body\">\r\n                    <ul class=\"list-unstyled\">\r\n                      <li>\r\n                        <h5>Heart Beat <span class=\"float-end\">85</span></h5>\r\n                        <div class=\"progress skill-progress m-b-20\">\r\n                          <div class=\"progress-bar l-bg-green width-per-45\" role=\"progressbar\" aria-valuenow=\"45\"\r\n                            aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <h5>Blood Pressure<span class=\"float-end\">93</span></h5>\r\n                        <div class=\"progress skill-progress m-b-20\">\r\n                          <div class=\"progress-bar l-bg-orange width-per-38\" role=\"progressbar\" aria-valuenow=\"38\"\r\n                            aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <h5>Sugar<span class=\"float-end\">55</span></h5>\r\n                        <div class=\"progress skill-progress m-b-20\">\r\n                          <div class=\"progress-bar l-bg-cyan width-per-39\" role=\"progressbar\" aria-valuenow=\"39\"\r\n                            aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <h5>Haemoglobin<span class=\"float-end\">78%</span></h5>\r\n                        <div class=\"progress skill-progress m-b-20\">\r\n                          <div class=\"progress-bar l-bg-purple width-per-70\" role=\"progressbar\" aria-valuenow=\"70\"\r\n                            aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card project_widget\">\r\n                  <div class=\"header\">\r\n                    <h5>Past Visit History</h5>\r\n                  </div>\r\n                  <div class=\"body\">\r\n                    <div class=\"table-responsive\">\r\n                      <table class=\"table table-striped custom-table table-hover\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Date</th>\r\n                            <th>Doctor</th>\r\n                            <th>Treatment</th>\r\n                            <th>Charges($)</th>\r\n                            <th>Action</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          <tr>\r\n                            <td>11/05/2017</td>\r\n                            <td>Dr.Rajesh</td>\r\n                            <td>Check up</td>\r\n                            <td>14$</td>\r\n                            <td>\r\n                              <button class=\"btn tblActnBtn\">\r\n                                <i class=\"material-icons\">mode_edit</i>\r\n                              </button>\r\n                              <button class=\"btn tblActnBtn\">\r\n                                <i class=\"material-icons\">delete</i>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>13/05/2017</td>\r\n                            <td>Dr.Rajesh</td>\r\n                            <td>X-Ray</td>\r\n                            <td>16$</td>\r\n                            <td>\r\n                              <button class=\"btn tblActnBtn\">\r\n                                <i class=\"material-icons\">mode_edit</i>\r\n                              </button>\r\n                              <button class=\"btn tblActnBtn\">\r\n                                <i class=\"material-icons\">delete</i>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>13/05/2017</td>\r\n                            <td>Dr.Rajesh</td>\r\n                            <td>Blood Test</td>\r\n                            <td>24$</td>\r\n                            <td>\r\n                              <button class=\"btn tblActnBtn\">\r\n                                <i class=\"material-icons\">mode_edit</i>\r\n                              </button>\r\n                              <button class=\"btn tblActnBtn\">\r\n                                <i class=\"material-icons\">delete</i>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>14/05/2017</td>\r\n                            <td>Dr.Rajesh</td>\r\n                            <td>Admit</td>\r\n                            <td>14$</td>\r\n                            <td>\r\n                              <button class=\"btn tblActnBtn\">\r\n                                <i class=\"material-icons\">mode_edit</i>\r\n                              </button>\r\n                              <button class=\"btn tblActnBtn\">\r\n                                <i class=\"material-icons\">delete</i>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>15/05/2017</td>\r\n                            <td>Dr.Rajesh</td>\r\n                            <td>Operation</td>\r\n                            <td>14$</td>\r\n                            <td>\r\n                              <button class=\"btn tblActnBtn\">\r\n                                <i class=\"material-icons\">mode_edit</i>\r\n                              </button>\r\n                              <button class=\"btn tblActnBtn\">\r\n                                <i class=\"material-icons\">delete</i>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>18/05/2017</td>\r\n                            <td>Dr.Rajesh</td>\r\n                            <td>Discharge</td>\r\n                            <td>14$</td>\r\n                            <td>\r\n                              <button class=\"btn tblActnBtn\">\r\n                                <i class=\"material-icons\">mode_edit</i>\r\n                              </button>\r\n                              <button class=\"btn tblActnBtn\">\r\n                                <i class=\"material-icons\">delete</i>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { PatientProfileComponent } from \"./patient-profile/patient-profile.component\";\r\nimport { EditPatientComponent } from \"./edit-patient/edit-patient.component\";\r\nimport { AddPatientComponent } from \"./add-patient/add-patient.component\";\r\nimport { AllpatientsComponent } from \"./allpatients/allpatients.component\";\r\nimport { Page404Component } from \"./../../authentication/page404/page404.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"all-patients\",\r\n    component: AllpatientsComponent,\r\n  },\r\n  {\r\n    path: \"add-patient\",\r\n    component: AddPatientComponent,\r\n  },\r\n  {\r\n    path: \"edit-patient\",\r\n    component: EditPatientComponent,\r\n  },\r\n  {\r\n    path: \"patient-profile\",\r\n    component: PatientProfileComponent,\r\n  },\r\n  { path: \"**\", component: Page404Component },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PatientsRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MaterialFileInputModule } from \"ngx-material-file-input\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { PatientsRoutingModule } from \"./patients-routing.module\";\r\nimport { AddPatientComponent } from \"./add-patient/add-patient.component\";\r\nimport { AllpatientsComponent } from \"./allpatients/allpatients.component\";\r\nimport { EditPatientComponent } from \"./edit-patient/edit-patient.component\";\r\nimport { PatientProfileComponent } from \"./patient-profile/patient-profile.component\";\r\nimport { DeleteComponent } from \"./allpatients/dialog/delete/delete.component\";\r\nimport { FormDialogComponent } from \"./allpatients/dialog/form-dialog/form-dialog.component\";\r\nimport { PatientService } from \"./allpatients/patient.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddPatientComponent,\r\n    AllpatientsComponent,\r\n    EditPatientComponent,\r\n    PatientProfileComponent,\r\n    DeleteComponent,\r\n    FormDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PatientsRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatDatepickerModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatMenuModule,\r\n    MatCheckboxModule,\r\n    MaterialFileInputModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [PatientService],\r\n})\r\nexport class PatientsModule {}\r\n"]}