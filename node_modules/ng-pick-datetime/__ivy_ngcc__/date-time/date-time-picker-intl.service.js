import * as ɵngcc0 from '@angular/core';
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
var OwlDateTimeIntl = (function () {
    function OwlDateTimeIntl() {
        this.changes = new Subject();
        this.upSecondLabel = 'Add a second';
        this.downSecondLabel = 'Minus a second';
        this.upMinuteLabel = 'Add a minute';
        this.downMinuteLabel = 'Minus a minute';
        this.upHourLabel = 'Add a hour';
        this.downHourLabel = 'Minus a hour';
        this.prevMonthLabel = 'Previous month';
        this.nextMonthLabel = 'Next month';
        this.prevYearLabel = 'Previous year';
        this.nextYearLabel = 'Next year';
        this.prevMultiYearLabel = 'Previous 21 years';
        this.nextMultiYearLabel = 'Next 21 years';
        this.switchToMonthViewLabel = 'Change to month view';
        this.switchToMultiYearViewLabel = 'Choose month and year';
        this.cancelBtnLabel = 'Cancel';
        this.setBtnLabel = 'Set';
        this.rangeFromLabel = 'From';
        this.rangeToLabel = 'To';
        this.hour12AMLabel = 'AM';
        this.hour12PMLabel = 'PM';
    }
    OwlDateTimeIntl.ngInjectableDef = i0.defineInjectable({ factory: function OwlDateTimeIntl_Factory() { return new OwlDateTimeIntl(); }, token: OwlDateTimeIntl, providedIn: "root" });
OwlDateTimeIntl.ɵfac = function OwlDateTimeIntl_Factory(t) { return new (t || OwlDateTimeIntl)(); };
OwlDateTimeIntl.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: OwlDateTimeIntl, factory: function (t) { return OwlDateTimeIntl.ɵfac(t); }, providedIn: 'root' });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OwlDateTimeIntl, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null); })();
    return OwlDateTimeIntl;
}());
export { OwlDateTimeIntl };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS10aW1lLXBpY2tlci1pbnRsLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbImRhdGUtdGltZS1waWNrZXItaW50bC5zZXJ2aWNlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O2dEQUd3QjtBQUN4QjtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgKiBhcyBpMCBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xudmFyIE93bERhdGVUaW1lSW50bCA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gT3dsRGF0ZVRpbWVJbnRsKCkge1xuICAgICAgICB0aGlzLmNoYW5nZXMgPSBuZXcgU3ViamVjdCgpO1xuICAgICAgICB0aGlzLnVwU2Vjb25kTGFiZWwgPSAnQWRkIGEgc2Vjb25kJztcbiAgICAgICAgdGhpcy5kb3duU2Vjb25kTGFiZWwgPSAnTWludXMgYSBzZWNvbmQnO1xuICAgICAgICB0aGlzLnVwTWludXRlTGFiZWwgPSAnQWRkIGEgbWludXRlJztcbiAgICAgICAgdGhpcy5kb3duTWludXRlTGFiZWwgPSAnTWludXMgYSBtaW51dGUnO1xuICAgICAgICB0aGlzLnVwSG91ckxhYmVsID0gJ0FkZCBhIGhvdXInO1xuICAgICAgICB0aGlzLmRvd25Ib3VyTGFiZWwgPSAnTWludXMgYSBob3VyJztcbiAgICAgICAgdGhpcy5wcmV2TW9udGhMYWJlbCA9ICdQcmV2aW91cyBtb250aCc7XG4gICAgICAgIHRoaXMubmV4dE1vbnRoTGFiZWwgPSAnTmV4dCBtb250aCc7XG4gICAgICAgIHRoaXMucHJldlllYXJMYWJlbCA9ICdQcmV2aW91cyB5ZWFyJztcbiAgICAgICAgdGhpcy5uZXh0WWVhckxhYmVsID0gJ05leHQgeWVhcic7XG4gICAgICAgIHRoaXMucHJldk11bHRpWWVhckxhYmVsID0gJ1ByZXZpb3VzIDIxIHllYXJzJztcbiAgICAgICAgdGhpcy5uZXh0TXVsdGlZZWFyTGFiZWwgPSAnTmV4dCAyMSB5ZWFycyc7XG4gICAgICAgIHRoaXMuc3dpdGNoVG9Nb250aFZpZXdMYWJlbCA9ICdDaGFuZ2UgdG8gbW9udGggdmlldyc7XG4gICAgICAgIHRoaXMuc3dpdGNoVG9NdWx0aVllYXJWaWV3TGFiZWwgPSAnQ2hvb3NlIG1vbnRoIGFuZCB5ZWFyJztcbiAgICAgICAgdGhpcy5jYW5jZWxCdG5MYWJlbCA9ICdDYW5jZWwnO1xuICAgICAgICB0aGlzLnNldEJ0bkxhYmVsID0gJ1NldCc7XG4gICAgICAgIHRoaXMucmFuZ2VGcm9tTGFiZWwgPSAnRnJvbSc7XG4gICAgICAgIHRoaXMucmFuZ2VUb0xhYmVsID0gJ1RvJztcbiAgICAgICAgdGhpcy5ob3VyMTJBTUxhYmVsID0gJ0FNJztcbiAgICAgICAgdGhpcy5ob3VyMTJQTUxhYmVsID0gJ1BNJztcbiAgICB9XG4gICAgT3dsRGF0ZVRpbWVJbnRsLm5nSW5qZWN0YWJsZURlZiA9IGkwLmRlZmluZUluamVjdGFibGUoeyBmYWN0b3J5OiBmdW5jdGlvbiBPd2xEYXRlVGltZUludGxfRmFjdG9yeSgpIHsgcmV0dXJuIG5ldyBPd2xEYXRlVGltZUludGwoKTsgfSwgdG9rZW46IE93bERhdGVUaW1lSW50bCwgcHJvdmlkZWRJbjogXCJyb290XCIgfSk7XG4gICAgT3dsRGF0ZVRpbWVJbnRsID0gX19kZWNvcmF0ZShbXG4gICAgICAgIEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbiAgICBdLCBPd2xEYXRlVGltZUludGwpO1xuICAgIHJldHVybiBPd2xEYXRlVGltZUludGw7XG59KCkpO1xuZXhwb3J0IHsgT3dsRGF0ZVRpbWVJbnRsIH07XG4iXX0=