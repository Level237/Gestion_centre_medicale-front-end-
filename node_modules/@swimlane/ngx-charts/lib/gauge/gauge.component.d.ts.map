{"version":3,"file":"gauge.component.d.ts","sources":["gauge.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { ElementRef, AfterViewInit, EventEmitter, TemplateRef } from '@angular/core';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { ColorHelper } from '../common/color.helper';\nimport { LegendOptions, LegendPosition, ViewDimensions } from '../common/types';\nimport { ArcItem } from './gauge-arc.component';\ninterface Arcs {\n    backgroundArc: ArcItem;\n    valueArc: ArcItem;\n}\nexport declare class GaugeComponent extends BaseChartComponent implements AfterViewInit {\n    legend: boolean;\n    legendTitle: string;\n    legendPosition: LegendPosition;\n    min: number;\n    max: number;\n    textValue: string;\n    units: string;\n    bigSegments: number;\n    smallSegments: number;\n    results: any[];\n    showAxis: boolean;\n    startAngle: number;\n    angleSpan: number;\n    activeEntries: any[];\n    axisTickFormatting: any;\n    tooltipDisabled: boolean;\n    valueFormatting: (value: any) => string;\n    showText: boolean;\n    margin: number[];\n    activate: EventEmitter<any>;\n    deactivate: EventEmitter<any>;\n    tooltipTemplate: TemplateRef<any>;\n    textEl: ElementRef;\n    dims: ViewDimensions;\n    domain: any[];\n    valueDomain: [number, number];\n    valueScale: any;\n    colors: ColorHelper;\n    transform: string;\n    outerRadius: number;\n    textRadius: number;\n    resizeScale: number;\n    rotation: string;\n    textTransform: string;\n    cornerRadius: number;\n    arcs: Arcs[];\n    displayValue: string;\n    legendOptions: LegendOptions;\n    ngAfterViewInit(): void;\n    update(): void;\n    getArcs(): any[];\n    getDomain(): string[];\n    getValueDomain(): [number, number];\n    getValueScale(): any;\n    getDisplayValue(): string;\n    scaleText(repeat?: boolean): void;\n    onClick(data: any): void;\n    getLegendOptions(): LegendOptions;\n    setColors(): void;\n    onActivate(item: any): void;\n    onDeactivate(item: any): void;\n    isActive(entry: any): boolean;\n    trackBy(index: number, item: Arcs): any;\n}\nexport {};\n"]}