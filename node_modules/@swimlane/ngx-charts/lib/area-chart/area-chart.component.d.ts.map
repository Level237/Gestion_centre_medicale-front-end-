{"version":3,"file":"area-chart.component.d.ts","sources":["area-chart.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, TemplateRef } from '@angular/core';\nimport { CurveFactory } from 'd3-shape';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { ViewDimensions, LegendPosition, LegendOptions, ScaleType } from '../common/types';\nimport { Series, StringOrNumberOrDate } from '../models/chart-data.model';\nexport declare class AreaChartComponent extends BaseChartComponent {\n    legend: boolean;\n    legendTitle: string;\n    legendPosition: LegendPosition;\n    xAxis: boolean;\n    yAxis: boolean;\n    baseValue: any;\n    autoScale: boolean;\n    showXAxisLabel: boolean;\n    showYAxisLabel: boolean;\n    xAxisLabel: string;\n    yAxisLabel: string;\n    timeline: boolean;\n    gradient: boolean;\n    showGridLines: boolean;\n    curve: CurveFactory;\n    activeEntries: any[];\n    schemeType: ScaleType;\n    trimXAxisTicks: boolean;\n    trimYAxisTicks: boolean;\n    rotateXAxisTicks: boolean;\n    maxXAxisTickLength: number;\n    maxYAxisTickLength: number;\n    xAxisTickFormatting: any;\n    yAxisTickFormatting: any;\n    xAxisTicks: any[];\n    yAxisTicks: any[];\n    roundDomains: boolean;\n    tooltipDisabled: boolean;\n    xScaleMin: any;\n    xScaleMax: any;\n    yScaleMin: number;\n    yScaleMax: number;\n    activate: EventEmitter<any>;\n    deactivate: EventEmitter<any>;\n    tooltipTemplate: TemplateRef<any>;\n    seriesTooltipTemplate: TemplateRef<any>;\n    dims: ViewDimensions;\n    xSet: any;\n    xDomain: any[];\n    yDomain: [number, number];\n    seriesDomain: string[];\n    xScale: any;\n    yScale: any;\n    transform: string;\n    colors: ColorHelper;\n    clipPathId: string;\n    clipPath: string;\n    scaleType: ScaleType;\n    series: Series;\n    margin: number[];\n    hoveredVertical: any;\n    xAxisHeight: number;\n    yAxisWidth: number;\n    filteredDomain: any;\n    legendOptions: LegendOptions;\n    timelineWidth: number;\n    timelineHeight: number;\n    timelineXScale: any;\n    timelineYScale: any;\n    timelineXDomain: any[];\n    timelineTransform: any;\n    timelinePadding: number;\n    update(): void;\n    updateTimeline(): void;\n    getXDomain(): any[];\n    getYDomain(): [number, number];\n    getSeriesDomain(): string[];\n    getXScale(domain: any, width: number): number;\n    getYScale(domain: any, height: number): number;\n    getScaleType(values: any): ScaleType;\n    updateDomain(domain: any): void;\n    updateHoveredVertical(item: any): void;\n    hideCircles(): void;\n    onClick(data: any, series?: Series): void;\n    trackBy(index: number, item: Series): StringOrNumberOrDate;\n    setColors(): void;\n    getLegendOptions(): LegendOptions;\n    updateYAxisWidth({ width }: {\n        width: number;\n    }): void;\n    updateXAxisHeight({ height }: {\n        height: number;\n    }): void;\n    onActivate(item: any): void;\n    onDeactivate(item: any): void;\n    deactivateAll(): void;\n}\n"]}