{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js"],"names":["_c0","MatSortHeader_div_3_Template","rf","ctx","_r2","MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener","ctx_r1","_disableViewStateAnimation","MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener","ctx_r3","ctx_r0","_getArrowViewState","_getArrowDirectionState","_c1","getSortDuplicateSortableIdError","id","Error","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","direction","MAT_SORT_DEFAULT_OPTIONS","InjectionToken","_MatSortBase","mixinInitialized","mixinDisabled","MatSort","_defaultOptions","sortables","Map","_stateChanges","Subject","start","_direction","sortChange","EventEmitter","ngDevMode","_disableClear","v","coerceBooleanProperty","sortable","has","set","active","getNextSortDirection","emit","_a","_b","_c","disableClear","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","indexOf","length","_markInitialized","next","complete","ɵfac","MatSort_Factory","t","ɵdir","type","selectors","hostAttrs","inputs","disabled","outputs","exportAs","features","ctorParameters","undefined","decorators","Optional","Inject","args","propDecorators","Input","Output","Directive","selector","host","sortOrder","reverse","push","SORT_ANIMATION_TRANSITION","AnimationDurations","AnimationCurves","matSortAnimations","indicator","trigger","state","style","transform","transition","animate","leftPointer","rightPointer","arrowOpacity","opacity","arrowPosition","keyframes","allowChildren","query","animateChild","optional","MatSortHeaderIntl","changes","MatSortHeaderIntl_Factory","ɵprov","factory","token","providedIn","Injectable","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","parentIntl","MAT_SORT_HEADER_INTL_PROVIDER","provide","deps","SkipSelf","useFactory","_MatSortHeaderBase","MatSortHeader","_intl","_changeDetectorRef","_sort","_columnDef","_focusMonitor","_elementRef","_ariaDescriber","_showIndicatorHint","_viewState","_arrowDirection","_sortActionDescription","_handleStateChanges","value","_updateSortActionDescription","name","_updateArrowDirection","_setAnimationTransitionState","toState","_isSorted","register","_sortButton","nativeElement","querySelector","monitor","subscribe","origin","newState","_setIndicatorHintVisible","markForCheck","stopMonitoring","deregister","_rerenderSubscription","unsubscribe","visible","_isDisabled","fromState","viewState","sort","event","keyCode","SPACE","ENTER","preventDefault","_toggleOnInteraction","newDescription","removeDescription","describe","merge","MatSortHeader_Factory","AriaDescriber","ɵcmp","hostVars","hostBindings","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","_handleClick","MatSortHeader_keydown_HostBindingHandler","$event","_handleKeydown","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","_getAriaSortAttribute","sortActionDescription","attrs","ngContentSelectors","decls","vars","consts","template","MatSortHeader_Template","_renderArrow","directives","styles","encapsulation","data","animation","changeDetection","ChangeDetectorRef","FocusMonitor","ElementRef","Component","ViewEncapsulation","ChangeDetectionStrategy","animations","MatSortModule","MatSortModule_Factory","ɵmod","ɵinj","providers","imports","CommonModule","MatCommonModule","NgModule","exports","declarations","ngJitMode"],"mappings":"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","file":"default-node_modules_angular_material___ivy_ngcc___fesm2015_sort_js-es5.js","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Directive, Optional, Inject, Input, Output, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, NgModule } from '@angular/core';\nimport { FocusMonitor, AriaDescriber } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r0._getArrowViewState())(\"@arrowPosition\", ctx_r0._getArrowViewState())(\"@allowChildren\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r0._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nconst _MatSortBase = mixinInitialized(mixinDisabled(class {\n}));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortBase {\n    constructor(_defaultOptions) {\n        super();\n        this._defaultOptions = _defaultOptions;\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /** The sort direction of the currently active MatSortable. */\n    get direction() { return this._direction; }\n    set direction(direction) {\n        if (direction && direction !== 'asc' && direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     */\n    get disableClear() { return this._disableClear; }\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        var _a, _b, _c;\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = (_b = (_a = sortable === null || sortable === void 0 ? void 0 : sortable.disableClear) !== null && _a !== void 0 ? _a : this.disableClear) !== null && _b !== void 0 ? _b : !!((_c = this._defaultOptions) === null || _c === void 0 ? void 0 : _c.disableClear);\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return new (t || MatSort)(ɵngcc0.ɵɵdirectiveInject(MAT_SORT_DEFAULT_OPTIONS, 8)); };\nMatSort.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatSort.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SORT_DEFAULT_OPTIONS,] }] }\n];\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SORT_DEFAULT_OPTIONS]\n            }] }]; }, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\nMatSortHeaderIntl.ɵprov = i0.ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nconst _MatSortHeaderBase = mixinDisabled(class {\n});\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderBase {\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef, \n    /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n    _ariaDescriber) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        // Default the action description to \"Sort\" because it's better than nothing.\n        // Without a description, the button's label comes from the sort header text content,\n        // which doesn't give any indication that it performs a sorting operation.\n        this._sortActionDescription = 'Sort';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._handleStateChanges();\n    }\n    /**\n     * Description applied to MatSortHeader's button element with aria-describedby. This text should\n     * describe the action that will occur when the user clicks the sort header.\n     */\n    get sortActionDescription() {\n        return this._sortActionDescription;\n    }\n    set sortActionDescription(value) {\n        this._updateSortActionDescription(value);\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() { return this._disableClear; }\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n        this._sortButton = this._elementRef.nativeElement.querySelector('[role=\"button\"]');\n        this._updateSortActionDescription(this._sortActionDescription);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    _updateSortActionDescription(newDescription) {\n        // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n        // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n        // for every *cell* in the table, creating a lot of unnecessary noise.\n        var _a, _b;\n        // If _sortButton is undefined, the component hasn't been initialized yet so there's\n        // nothing to update in the DOM.\n        if (this._sortButton) {\n            // removeDescription will no-op if there is no existing message.\n            // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n            (_a = this._ariaDescriber) === null || _a === void 0 ? void 0 : _a.removeDescription(this._sortButton, this._sortActionDescription);\n            (_b = this._ariaDescriber) === null || _b === void 0 ? void 0 : _b.describe(this._sortButton, newDescription);\n        }\n        this._sortActionDescription = newDescription;\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription =\n            merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n                if (this._isSorted()) {\n                    this._updateArrowDirection();\n                    // Do not show the animation if the header was already shown in the right position.\n                    if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                        this._disableViewStateAnimation = true;\n                    }\n                    this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                    this._showIndicatorHint = false;\n                }\n                // If this header was recently active and now no longer sorted, animate away the arrow.\n                if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = false;\n                    this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n                }\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AriaDescriber, 8)); };\nMatSortHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"keydown\", function MatSortHeader_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", sortActionDescription: \"sortActionDescription\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 6, consts: [[\"role\", \"button\", 1, \"mat-sort-header-container\", \"mat-focus-indicator\"], [1, \"mat-sort-header-content\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._isDisabled() ? null : 0);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: AriaDescriber, decorators: [{ type: Inject, args: [AriaDescriber,] }, { type: Optional }] }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    sortActionDescription: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     role=\\\"button\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.AriaDescriber, decorators: [{\n                type: Inject,\n                args: [AriaDescriber]\n            }, {\n                type: Optional\n            }] }]; }, { arrowPosition: [{\n            type: Input\n        }], sortActionDescription: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSortModule {\n}\nMatSortModule.ɵfac = function MatSortModule_Factory(t) { return new (t || MatSortModule)(); };\nMatSortModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule, MatCommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort, MatSortHeader]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSort, MatSortHeader]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map"]}