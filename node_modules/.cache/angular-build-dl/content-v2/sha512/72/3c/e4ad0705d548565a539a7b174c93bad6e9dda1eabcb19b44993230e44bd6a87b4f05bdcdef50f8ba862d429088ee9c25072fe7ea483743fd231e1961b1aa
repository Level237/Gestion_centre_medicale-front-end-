{"version":3,"sources":["webpack:///src/app/admin/doctors/add-doctor/add-doctor.component.html","webpack:///src/app/admin/doctors/add-doctor/add-doctor.component.ts","webpack:///src/app/admin/doctors/alldoctors/alldoctors.component.html","webpack:///src/app/admin/doctors/alldoctors/alldoctors.component.ts","webpack:///src/app/admin/doctors/alldoctors/dialogs/delete/delete.component.ts","webpack:///src/app/admin/doctors/alldoctors/dialogs/delete/delete.component.html","webpack:///src/app/admin/doctors/alldoctors/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/admin/doctors/alldoctors/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/admin/doctors/alldoctors/doctors.model.ts","webpack:///src/app/admin/doctors/alldoctors/doctors.service.ts","webpack:///src/app/admin/doctors/doctor-profile/doctor-profile.component.html","webpack:///src/app/admin/doctors/doctor-profile/doctor-profile.component.ts","webpack:///src/app/admin/doctors/doctors-routing.module.ts","webpack:///src/app/admin/doctors/doctors.module.ts","webpack:///src/app/admin/doctors/edit-doctor/edit-doctor.component.html","webpack:///src/app/admin/doctors/edit-doctor/edit-doctor.component.ts"],"names":["AddDoctorComponent","fb","hide3","agree3","docForm","group","first","Validators","last","gender","mobile","password","conformPassword","designation","department","address","email","dob","education","uploadImg","console","log","value","onSubmit","$event","stopPropagation","selection","AlldoctorsComponent","httpClient","dialog","doctorsService","snackBar","displayedColumns","SelectionModel","loadData","tempDirection","localStorage","getItem","dialogRef","open","FormDialogComponent","data","doctors","action","direction","subs","sink","afterClosed","subscribe","result","exampleDatabase","dataChange","unshift","getDialogData","refreshTable","showNotification","row","id","foundIndex","findIndex","x","i","index","DeleteDialogComponent","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","d","DoctorsService","ExampleDataSource","sort","fromEvent","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","UnsubscribeOnDestroyAdapter","MatPaginator","MatSort","removeSelectedRows","addNew","refresh","_sort","filterChange","BehaviorSubject","filteredData","pageIndex","next","displayDataChanges","sortChange","page","getAllDoctorss","merge","pipe","map","slice","searchStr","name","specialization","degree","toLowerCase","indexOf","sortedData","sortData","startIndex","active","a","b","propertyA","propertyB","date","valueA","isNaN","valueB","DataSource","close","deleteDoctors","MAT_DIALOG_DATA","confirmDelete","onNoClick","formControl","FormControl","dialogTitle","Doctors","doctorsForm","createContactForm","hasError","img","formatDate","addDoctors","getRawValue","confirmAdd","getRandomID","avatar","Date","S4","Math","random","toString","substring","API_URL","isTblLoading","dialogData","get","error","message","DoctorProfileComponent","routes","path","component","EditDoctorComponent","Page404Component","DoctorsRoutingModule","RouterModule","DoctorsModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatToolbarModule","MatSelectModule","MatDatepickerModule","MatTabsModule","MatCheckboxModule","MaterialFileInputModule","MatProgressSpinnerModule","formdata"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCoB;;AACE;;AACF;;;;;;AAsBA;;AACE;;AACF;;;;;;AAeA;;AACE;;AACF;;;;;;AAOA;;AACE;;AACF;;;;;;AA4BA;;AACE;;AACF;;;;;;AAiBA;;AACE;;AACF;;;;;;AASA;;AACE;;AACF;;;;UC5IPA,mB;AAIX,qCAAoBC,EAApB,EAAqC;AAAA;;AAAjB,eAAAA,EAAA,GAAAA,EAAA;AAFpB,eAAAC,KAAA,GAAQ,IAAR;AACA,eAAAC,MAAA,GAAS,KAAT;AAEE,eAAKC,OAAL,GAAe,KAAKH,EAAL,CAAQI,KAAR,CAAc;AAC3BC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAC,UAAA,SAAD,EAAsB,4CAAAA,UAAA,SAAmB,WAAnB,CAAtB,CAAL,CADoB;AAE3BC,gBAAI,EAAE,CAAC,EAAD,CAFqB;AAG3BC,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAF,UAAA,SAAD,CAAL,CAHmB;AAI3BG,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAH,UAAA,SAAD,CAAL,CAJmB;AAK3BI,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAJ,UAAA,SAAD,CAAL,CALiB;AAM3BK,2BAAe,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAL,UAAA,SAAD,CAAL,CANU;AAO3BM,uBAAW,EAAE,CAAC,EAAD,CAPc;AAQ3BC,sBAAU,EAAE,CAAC,EAAD,CARe;AAS3BC,mBAAO,EAAE,CAAC,EAAD,CATkB;AAU3BC,iBAAK,EAAE,CACL,EADK,EAEL,CAAC,4CAAAT,UAAA,SAAD,EAAsB,4CAAAA,UAAA,MAAtB,EAAwC,4CAAAA,UAAA,WAAqB,CAArB,CAAxC,CAFK,CAVoB;AAc3BU,eAAG,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAV,UAAA,SAAD,CAAL,CAdsB;AAe3BW,qBAAS,EAAE,CAAC,EAAD,CAfgB;AAgB3BC,qBAAS,EAAE,CAAC,EAAD;AAhBgB,WAAd,CAAf;AAkBD;;;;iBACD,oBAAW;AACTC,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKjB,OAAL,CAAakB,KAAvC;AACD;;;;;;;yBA1BUtB,mB,EAAkB,wH;AAAA,O;;;cAAlBA,mB;AAAkB,uC;AAAA,kB;AAAA,gB;AAAA,2vD;AAAA;AAAA;ADP/B;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAU;;AACnC;;AACA;;AACE;;AACE;;AAA4B;;AAAI;;AACpC;;AACA;;AACE;;AAAoC;;AAAO;;AAC7C;;AACA;;AAAmC;;AAAG;;AACxC;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAU;;AAEhB;;AACA;;AACE;;AAAwC;AAAA,qBAAY,IAAAuB,QAAA,EAAZ;AAAsB,aAAtB;;AACtC;;AACE;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAiB;;AAC5B;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAiB;;AAC5B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAGF;;A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A,qBAAY,IAAAlJ,QAAA,EAAZ;AAAsB,aAAtB;;AACtC;;AACE;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAiB;;AAC5B;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAiB;;AAC5B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACA;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACkB;;AAAM;;AACxB;;AAAiC;;AAAM;;AACzC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AA/I8B;;AAAA;;AAME;;AAAA;;AAiBE;;AAAA;;AAGA;;AAAA;;AAIF;;AAAA;;AAiBA;;AAAA;;AASA;;AAAA;;AAiBE;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIF;;AAAA;;AAmBA;;AAAA;;AAQI;;AAAA;;AACiB;;AAAA;;AAErB;;AAAA;;AAgBY;;AAAA","file":"src_app_admin_doctors_doctors_module_ts-es5.js","sourcesContent":["<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Add Doctor</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Doctors</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Add</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Add Doctor</h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"docForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>First name</mat-label>\r\n                    <input matInput formControlName=\"first\" required>\r\n                    <mat-error *ngIf=\"docForm.get('first').hasError('required')\">\r\n                      First name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Last name</mat-label>\r\n                    <input matInput formControlName=\"last\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Gender</mat-label>\r\n                    <mat-select formControlName=\"gender\" required>\r\n                      <mat-option [value]=\"'Male'\">\r\n                        Male\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Female'\">\r\n                        Female\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"docForm.get('gender').hasError('required')\">\r\n                      Gender is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput formControlName=\"mobile\" type=\"number\" required>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input matInput formControlName=\"password\" type=\"password\" required>\r\n                    <mat-error *ngIf=\"docForm.get('password').hasError('required')\">\r\n                      password is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Re-Enter Password</mat-label>\r\n                    <input matInput formControlName=\"conformPassword\" type=\"password\" required>\r\n                    <mat-error *ngIf=\"docForm.get('conformPassword').hasError('required')\">\r\n                      Re-Enter password is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Designation</mat-label>\r\n                    <input matInput formControlName=\"designation\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Select Department</mat-label>\r\n                    <mat-select formControlName=\"department\" required>\r\n                      <mat-option [value]=\"'1'\">\r\n                        Neurology\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'2'\">\r\n                        Orthopedics\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'3'\">\r\n                        Gynaecology\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'4'\">\r\n                        Microbiology\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"docForm.get('department').hasError('required')\">\r\n                      Select Any Department\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Address</mat-label>\r\n                    <textarea matInput formControlName=\"address\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-error *ngIf=\"docForm.get('email').hasError('email') && docForm.get('email').touched\">\r\n                      Please enter a valid email address\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Date Of Birth</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"docForm.get('dob').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Education</mat-label>\r\n                    <textarea matInput formControlName=\"education\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Upload Image</mat-label>\r\n                    <ngx-mat-file-input formControlName=\"uploadImg\">\r\n                    </ngx-mat-file-input>\r\n                    <mat-icon matSuffix>face</mat-icon>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <button class=\"btn-space\" [disabled]=\"!docForm.valid \" mat-raised-button\r\n                    color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-add-doctor\",\r\n  templateUrl: \"./add-doctor.component.html\",\r\n  styleUrls: [\"./add-doctor.component.sass\"],\r\n})\r\nexport class AddDoctorComponent {\r\n  docForm: FormGroup;\r\n  hide3 = true;\r\n  agree3 = false;\r\n  constructor(private fb: FormBuilder) {\r\n    this.docForm = this.fb.group({\r\n      first: [\"\", [Validators.required, Validators.pattern(\"[a-zA-Z]+\")]],\r\n      last: [\"\"],\r\n      gender: [\"\", [Validators.required]],\r\n      mobile: [\"\", [Validators.required]],\r\n      password: [\"\", [Validators.required]],\r\n      conformPassword: [\"\", [Validators.required]],\r\n      designation: [\"\"],\r\n      department: [\"\"],\r\n      address: [\"\"],\r\n      email: [\r\n        \"\",\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      dob: [\"\", [Validators.required]],\r\n      education: [\"\"],\r\n      uploadImg: [\"\"],\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log(\"Form Value\", this.docForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">View Doctors</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Doctors</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">View</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"table-responsive\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ms-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Doctors</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"img\">\r\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\"> Image\r\n                  </mat-header-cell>\r\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\"> <img\r\n                      [src]=\"row.img\" />\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"name\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.name}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"department\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Department</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.department}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"specialization\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Specialization</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.specialization}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"degree\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Degree</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.degree}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"mobile\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.mobile}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"email\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.email}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Joining Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy'}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(i, row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { DoctorsService } from \"./doctors.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { Doctors } from \"./doctors.model\";\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { FormDialogComponent } from \"./dialogs/form-dialog/form-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./dialogs/delete/delete.component\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n@Component({\r\n  selector: \"app-alldoctors\",\r\n  templateUrl: \"./alldoctors.component.html\",\r\n  styleUrls: [\"./alldoctors.component.sass\"],\r\n})\r\nexport class AlldoctorsComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    \"select\",\r\n    \"img\",\r\n    \"name\",\r\n    \"department\",\r\n    \"specialization\",\r\n    \"degree\",\r\n    \"mobile\",\r\n    \"email\",\r\n    \"date\",\r\n    \"actions\",\r\n  ];\r\n  exampleDatabase: DoctorsService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Doctors>(true, []);\r\n  index: number;\r\n  id: number;\r\n  doctors: Doctors | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public doctorsService: DoctorsService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        doctors: this.doctors,\r\n        action: \"add\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataServicex\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.doctorsService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-success\",\r\n          \"Add Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        doctors: row,\r\n        action: \"edit\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.doctorsService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"black\",\r\n          \"Edit Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(i: number, row) {\r\n    this.index = i;\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-danger\",\r\n          \"Delete Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Doctors>(true, []);\r\n    });\r\n    this.showNotification(\r\n      \"snackbar-danger\",\r\n      totalSelect + \" Record Delete Successfully...!!!\",\r\n      \"bottom\",\r\n      \"center\"\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new DoctorsService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, \"keyup\").subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, \"\", {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Doctors> {\r\n  filterChange = new BehaviorSubject(\"\");\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Doctors[] = [];\r\n  renderedData: Doctors[] = [];\r\n  constructor(\r\n    public exampleDatabase: DoctorsService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Doctors[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllDoctorss();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((doctors: Doctors) => {\r\n            const searchStr = (\r\n              doctors.name +\r\n              doctors.department +\r\n              doctors.specialization +\r\n              doctors.degree +\r\n              doctors.email +\r\n              doctors.mobile\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Doctors[]): Doctors[] {\r\n    if (!this._sort.active || this._sort.direction === \"\") {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = \"\";\r\n      let propertyB: number | string = \"\";\r\n      switch (this._sort.active) {\r\n        case \"id\":\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case \"name\":\r\n          [propertyA, propertyB] = [a.name, b.name];\r\n          break;\r\n        case \"email\":\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n        case \"date\":\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n        case \"time\":\r\n          [propertyA, propertyB] = [a.department, b.department];\r\n          break;\r\n        case \"mobile\":\r\n          [propertyA, propertyB] = [a.mobile, b.mobile];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { DoctorsService } from \"../../doctors.service\";\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public doctorsService: DoctorsService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.doctorsService.deleteDoctors(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Name: </span>{{data.name}}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Department: </span>{{ data.department }}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <img [src]='doctors.img' alt=\"avatar\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 msl-3 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"doctorsForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput formControlName=\"name\" required>\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"doctorsForm.get('name').hasError('required')\">\r\n              Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>department</mat-label>\r\n            <input matInput formControlName=\"department\" required>\r\n            <mat-icon matSuffix>business_center</mat-icon>\r\n            <mat-error *ngIf=\"doctorsForm.get('department').hasError('required')\">\r\n              Department is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Specialization</mat-label>\r\n            <input matInput formControlName=\"specialization\" required>\r\n            <mat-icon matSuffix>flag</mat-icon>\r\n            <mat-error *ngIf=\"doctorsForm.get('specialization').hasError('required')\">\r\n              Specialization is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Degree</mat-label>\r\n            <input matInput formControlName=\"degree\" required>\r\n            <mat-icon matSuffix>school</mat-icon>\r\n            <mat-error *ngIf=\"doctorsForm.get('degree').hasError('required')\">\r\n              Department is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Mobile</mat-label>\r\n            <input matInput formControlName=\"mobile\" type=\"number\">\r\n            <mat-icon matSuffix>phone</mat-icon>\r\n            <mat-error *ngIf=\"doctorsForm.get('mobile').hasError('required')\">\r\n              Mobile is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput formControlName=\"email\" required>\r\n            <mat-icon matSuffix>email</mat-icon>\r\n            <mat-error *ngIf=\"doctorsForm.get('email').hasError('required') || doctorsForm.get('email').touched\">\r\n              Please enter a valid email address\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Joining date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"doctorsForm.get('date').hasError('required')\">\r\n              Please select date\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!doctorsForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { DoctorsService } from \"../../doctors.service\";\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder,\r\n} from \"@angular/forms\";\r\nimport { Doctors } from \"../../doctors.model\";\r\nimport { formatDate } from \"@angular/common\";\r\n@Component({\r\n  selector: \"app-form-dialog\",\r\n  templateUrl: \"./form-dialog.component.html\",\r\n  styleUrls: [\"./form-dialog.component.sass\"],\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  doctorsForm: FormGroup;\r\n  doctors: Doctors;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public doctorsService: DoctorsService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === \"edit\") {\r\n      this.dialogTitle = data.doctors.name;\r\n      this.doctors = data.doctors;\r\n    } else {\r\n      this.dialogTitle = \"New Doctors\";\r\n      this.doctors = new Doctors({});\r\n    }\r\n    this.doctorsForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl(\"\", [\r\n    Validators.required,\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError(\"required\")\r\n      ? \"Required field\"\r\n      : this.formControl.hasError(\"email\")\r\n      ? \"Not a valid email\"\r\n      : \"\";\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.doctors.id],\r\n      img: [this.doctors.img],\r\n      name: [this.doctors.name],\r\n      email: [this.doctors.email],\r\n      date: [\r\n        formatDate(this.doctors.date, \"yyyy-MM-dd\", \"en\"),\r\n        [Validators.required],\r\n      ],\r\n      specialization: [this.doctors.specialization],\r\n      mobile: [this.doctors.mobile],\r\n      department: [this.doctors.department],\r\n      degree: [this.doctors.degree],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.doctorsService.addDoctors(this.doctorsForm.getRawValue());\r\n  }\r\n}\r\n","import { formatDate } from \"@angular/common\";\r\nexport class Doctors {\r\n  id: number;\r\n  img: string;\r\n  name: string;\r\n  email: string;\r\n  date: string;\r\n  specialization: string;\r\n  mobile: string;\r\n  department: string;\r\n  degree: string;\r\n  constructor(doctors) {\r\n    {\r\n      this.id = doctors.id || this.getRandomID();\r\n      this.img = doctors.avatar || \"assets/images/user/user1.jpg\";\r\n      this.name = doctors.name || \"\";\r\n      this.email = doctors.email || \"\";\r\n      this.date = formatDate(new Date(), \"yyyy-MM-dd\", \"en\") || \"\";\r\n      this.specialization = doctors.specialization || \"\";\r\n      this.mobile = doctors.mobile || \"\";\r\n      this.department = doctors.department || \"\";\r\n      this.degree = doctors.degree || \"\";\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Doctors } from \"./doctors.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n@Injectable()\r\nexport class DoctorsService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = \"assets/data/doctors.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Doctors[]> = new BehaviorSubject<Doctors[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): Doctors[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllDoctorss(): void {\r\n    this.subs.sink = this.httpClient.get<Doctors[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + \" \" + error.message);\r\n      }\r\n    );\r\n  }\r\n  addDoctors(doctors: Doctors): void {\r\n    this.dialogData = doctors;\r\n\r\n    /*  this.httpClient.post(this.API_URL, doctors).subscribe(data => {\r\n      this.dialogData = doctors;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateDoctors(doctors: Doctors): void {\r\n    this.dialogData = doctors;\r\n\r\n    /* this.httpClient.put(this.API_URL + doctors.id, doctors).subscribe(data => {\r\n      this.dialogData = doctors;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteDoctors(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Doctor Profile</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Doctor</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Profile</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Your content goes here  -->\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-lg-4 col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"m-b-20\">\r\n            <div class=\"contact-grid\">\r\n              <div class=\"profile-header bg-dark\">\r\n                <div class=\"user-name\">DR. John Smith</div>\r\n                <div class=\"name-center\">Senior Doctor</div>\r\n              </div>\r\n              <img src=\"assets/images/user/usrbig3.jpg\" class=\"user-img\" alt=\"\">\r\n              <p>\r\n                456, Estern evenue, Courtage area,\r\n                <br />New York\r\n              </p>\r\n              <div>\r\n                <span class=\"phone\">\r\n                  <i class=\"material-icons\">phone</i>264-625-2583</span>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-4\">\r\n                  <h5>564</h5>\r\n                  <small>Following</small>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                  <h5>18k</h5>\r\n                  <small>Followers</small>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                  <h5>565</h5>\r\n                  <small>Post</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card\">\r\n          <mat-tab-group mat-align-tabs=\"start\">\r\n            <mat-tab label=\"About\">\r\n              <div class=\"p-4\">\r\n                <p class=\"text-default\">Lorem Ipsum is simply dummy text of the printing and\r\n                  typesetting industry. Lorem Ipsum has\r\n                  been the industry's standard dummy text ever since the 1500s, when an unknown\r\n                  printer\r\n                  took a galley of type and scrambled it to make a type specimen book. It has\r\n                  survived\r\n                  not only five centuries, but also the leap into electronic typesetting, remaining\r\n                  essentially\r\n                  unchanged.</p>\r\n                <small class=\"text-muted\">Email address: </small>\r\n                <p>john@gmail.com</p>\r\n                <hr>\r\n                <small class=\"text-muted\">Phone: </small>\r\n                <p>+91 1234567890</p>\r\n                <hr>\r\n              </div>\r\n            </mat-tab>\r\n            <mat-tab label=\"Skills\">\r\n              <ul class=\"list-unstyled p-4\">\r\n                <li>\r\n                  <div>OPD</div>\r\n                  <div class=\"progress skill-progress m-b-20\">\r\n                    <div class=\"progress-bar l-bg-green width-per-45\" role=\"progressbar\" aria-valuenow=\"45\"\r\n                      aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div>Operations</div>\r\n                  <div class=\"progress skill-progress m-b-20\">\r\n                    <div class=\"progress-bar l-bg-orange width-per-38\" role=\"progressbar\" aria-valuenow=\"38\"\r\n                      aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div>Patient Visit</div>\r\n                  <div class=\"progress skill-progress m-b-20\">\r\n                    <div class=\"progress-bar l-bg-cyan width-per-39\" role=\"progressbar\" aria-valuenow=\"39\"\r\n                      aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div>RND</div>\r\n                  <div class=\"progress skill-progress m-b-20\">\r\n                    <div class=\"progress-bar l-bg-purple width-per-70\" role=\"progressbar\" aria-valuenow=\"70\"\r\n                      aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </mat-tab>\r\n          </mat-tab-group>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-8 col-md-12\">\r\n        <div class=\"card\">\r\n          <mat-tab-group>\r\n            <mat-tab>\r\n              <ng-template mat-tab-label>\r\n                <mat-icon class=\"example-tab-icon msr-2\">face</mat-icon>\r\n                About Me\r\n              </ng-template>\r\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"project_widget\">\r\n                  <div class=\"header\">\r\n                    <h2><strong>About</strong></h2>\r\n                  </div>\r\n                  <div class=\"body\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-3 col-6 b-r\">\r\n                        <strong>Full Name</strong>\r\n                        <br>\r\n                        <p class=\"text-muted\">Emily Smith</p>\r\n                      </div>\r\n                      <div class=\"col-md-3 col-6 b-r\">\r\n                        <strong>Mobile</strong>\r\n                        <br>\r\n                        <p class=\"text-muted\">(123) 456 7890</p>\r\n                      </div>\r\n                      <div class=\"col-md-3 col-6 b-r\">\r\n                        <strong>Email</strong>\r\n                        <br>\r\n                        <p class=\"text-muted\">johndeo@example.com</p>\r\n                      </div>\r\n                      <div class=\"col-md-3 col-6\">\r\n                        <strong>Location</strong>\r\n                        <br>\r\n                        <p class=\"text-muted\">India</p>\r\n                      </div>\r\n                    </div>\r\n                    <p class=\"m-t-30\">Completed my graduation in Arts from the well known and\r\n                      renowned institution\r\n                      of India – SARDAR PATEL ARTS COLLEGE, BARODA in 2000-01, which was\r\n                      affiliated\r\n                      to M.S. University. I ranker in University exams from the same\r\n                      university\r\n                      from 1996-01.</p>\r\n                    <p>Worked as Professor and Head of the department at Sarda Collage, Rajkot,\r\n                      Gujarat\r\n                      from 2003-2015 </p>\r\n                    <p>Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                      industry. Lorem\r\n                      Ipsum has been the industry's standard dummy text ever since the 1500s,\r\n                      when\r\n                      an unknown printer took a galley of type and scrambled it to make a\r\n                      type\r\n                      specimen book. It has survived not only five centuries, but also the\r\n                      leap\r\n                      into electronic typesetting, remaining essentially unchanged.</p>\r\n                    <br>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"project_widget\">\r\n                  <div class=\"header\">\r\n                    <h2><strong>Education</strong></h2>\r\n                  </div>\r\n                  <div class=\"body\">\r\n                    <ul>\r\n                      <li>M.B.B.S.,Gujarat University, Ahmedabad,India.</li>\r\n                      <li>M.S.,Gujarat University, Ahmedabad, India.</li>\r\n                      <li>SPINAL FELLOWSHIP Dr. John Adam, Allegimeines Krakenhaus, Schwerin,\r\n                        Germany.</li>\r\n                      <li>Fellowship in Endoscopic Spine Surgery Phoenix, USA.</li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"project_widget\">\r\n                  <div class=\"header\">\r\n                    <h2><strong>Experience</strong></h2>\r\n                  </div>\r\n                  <div class=\"body\">\r\n                    <ul>\r\n                      <li>One year rotatory internship from April-2009 to march-2010 at B. J.\r\n                        Medical College, Ahmedabad.</li>\r\n                      <li>Three year residency at V.S. General Hospital as a resident in\r\n                        orthopedics from April - 2008 to April - 2011.</li>\r\n                      <li>I have worked as a part time physiotherapist in Apang manav mandal from\r\n                        1st june 2004 to 31st jan 2005. </li>\r\n                      <li>Clinical and Research fellowship in Scoliosis at Shaurashtra University\r\n                        and Medical Centre (KUMC) , Krishna Hospital , Rajkot from April 2013 to\r\n                        June 2013. </li>\r\n                      <li>2.5 Years Worked at Mahatma Gandhi General Hospital, Surendranagar.\r\n                      </li>\r\n                      <li>Consultant Orthopedics Surgeon Jalna 2 years. </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"project_widget\">\r\n                  <div class=\"header\">\r\n                    <h2><strong>Conferences, Cources &amp; Workshop Attended</strong></h2>\r\n                  </div>\r\n                  <div class=\"body\">\r\n                    <ul>\r\n                      <li>Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                        industry.\r\n                      </li>\r\n                      <li>Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                        industry.\r\n                      </li>\r\n                      <li>Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                        industry.\r\n                      </li>\r\n                      <li>Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                        industry.\r\n                      </li>\r\n                      <li>Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                        industry.\r\n                      </li>\r\n                      <li>Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                        industry.\r\n                      </li>\r\n                      <li>Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                        industry.\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </mat-tab>\r\n\r\n            <mat-tab>\r\n              <ng-template mat-tab-label>\r\n                <mat-icon class=\"example-tab-icon msr-2\">settings</mat-icon>\r\n                Settings\r\n              </ng-template>\r\n              <div class=\"header\">\r\n                <h2>\r\n                  <strong>Security</strong> Settings</h2>\r\n              </div>\r\n              <div class=\"body\">\r\n                <div class=\"example-container\">\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                    <mat-label>Username</mat-label>\r\n                    <input matInput>\r\n                  </mat-form-field>\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                    <mat-label>Current Password</mat-label>\r\n                    <input matInput type=\"password\">\r\n                  </mat-form-field>\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                    <mat-label>New Password</mat-label>\r\n                    <input matInput type=\"password\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <button mat-raised-button color=\"primary\">Save</button>\r\n              </div>\r\n              <div class=\"header\">\r\n                <h2>\r\n                  <strong>Account</strong> Settings</h2>\r\n              </div>\r\n              <div class=\"body\">\r\n                <div class=\"row clearfix\">\r\n                  <div class=\"col-lg-6 col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                        <mat-label>First Name</mat-label>\r\n                        <input matInput>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6 col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                        <mat-label>Last Name</mat-label>\r\n                        <input matInput>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-4 col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                        <mat-label>City</mat-label>\r\n                        <input matInput>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-4 col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                        <mat-label>Email</mat-label>\r\n                        <input matInput>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-4 col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                        <mat-label>Country</mat-label>\r\n                        <input matInput>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                        <mat-label>Address</mat-label>\r\n                        <textarea matInput></textarea>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <mat-checkbox class=\"example-margin\">Profile Visibility For Everyone\r\n                      </mat-checkbox>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <mat-checkbox class=\"example-margin\">New task notifications\r\n                      </mat-checkbox>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <mat-checkbox class=\"example-margin\">New friend request notifications\r\n                      </mat-checkbox>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-12\">\r\n                    <button mat-raised-button color=\"primary\">Save Changes</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </mat-tab>\r\n          </mat-tab-group>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n@Component({\r\n  selector: \"app-doctor-profile\",\r\n  templateUrl: \"./doctor-profile.component.html\",\r\n  styleUrls: [\"./doctor-profile.component.sass\"],\r\n})\r\nexport class DoctorProfileComponent implements OnInit {\r\n  constructor() {}\r\n  ngOnInit(): void {}\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AlldoctorsComponent } from \"./alldoctors/alldoctors.component\";\r\nimport { AddDoctorComponent } from \"./add-doctor/add-doctor.component\";\r\nimport { EditDoctorComponent } from \"./edit-doctor/edit-doctor.component\";\r\nimport { DoctorProfileComponent } from \"./doctor-profile/doctor-profile.component\";\r\nimport { Page404Component } from \"./../../authentication/page404/page404.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"allDoctors\",\r\n    component: AlldoctorsComponent,\r\n  },\r\n  {\r\n    path: \"add-doctor\",\r\n    component: AddDoctorComponent,\r\n  },\r\n  {\r\n    path: \"edit-doctor\",\r\n    component: EditDoctorComponent,\r\n  },\r\n  {\r\n    path: \"doctor-profile\",\r\n    component: DoctorProfileComponent,\r\n  },\r\n  { path: \"**\", component: Page404Component },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DoctorsRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { DoctorsRoutingModule } from \"./doctors-routing.module\";\r\nimport { AlldoctorsComponent } from \"./alldoctors/alldoctors.component\";\r\nimport { DeleteDialogComponent } from \"./alldoctors/dialogs/delete/delete.component\";\r\nimport { FormDialogComponent } from \"./alldoctors/dialogs/form-dialog/form-dialog.component\";\r\nimport { AddDoctorComponent } from \"./add-doctor/add-doctor.component\";\r\nimport { EditDoctorComponent } from \"./edit-doctor/edit-doctor.component\";\r\nimport { DoctorProfileComponent } from \"./doctor-profile/doctor-profile.component\";\r\nimport { MaterialFileInputModule } from \"ngx-material-file-input\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { DoctorsService } from \"./alldoctors/doctors.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AlldoctorsComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n    AddDoctorComponent,\r\n    EditDoctorComponent,\r\n    DoctorProfileComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatTabsModule,\r\n    MatCheckboxModule,\r\n    MaterialFileInputModule,\r\n    DoctorsRoutingModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [DoctorsService],\r\n})\r\nexport class DoctorsModule {}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Edit Doctor</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Doctors</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Edit</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Edit Doctor</h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"docForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>First name</mat-label>\r\n                    <input matInput formControlName=\"first\" required>\r\n                    <mat-error *ngIf=\"docForm.get('first').hasError('required')\">\r\n                      First name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Last name</mat-label>\r\n                    <input matInput formControlName=\"last\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Gender</mat-label>\r\n                    <mat-select formControlName=\"gender\" required>\r\n                      <mat-option [value]=\"'Male'\">\r\n                        Male\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Female'\">\r\n                        Female\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"docForm.get('gender').hasError('required')\">\r\n                      Gender is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput formControlName=\"mobile\" type=\"number\" required>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input matInput formControlName=\"password\" type=\"password\" required>\r\n                    <mat-error *ngIf=\"docForm.get('password').hasError('required')\">\r\n                      password is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Re-Enter Password</mat-label>\r\n                    <input matInput formControlName=\"conformPassword\" type=\"password\" required>\r\n                    <mat-error *ngIf=\"docForm.get('conformPassword').hasError('required')\">\r\n                      Re-Enter password is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Designation</mat-label>\r\n                    <input matInput formControlName=\"designation\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Select Department</mat-label>\r\n                    <mat-select formControlName=\"department\" required>\r\n                      <mat-option [value]=\"'1'\">\r\n                        Neurology\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'2'\">\r\n                        Orthopedics\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'3'\">\r\n                        Gynaecology\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'4'\">\r\n                        Microbiology\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"docForm.get('department').hasError('required')\">\r\n                      Select Any Department\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Address</mat-label>\r\n                    <textarea matInput formControlName=\"address\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-error *ngIf=\"docForm.get('email').hasError('email') && docForm.get('email').touched\">\r\n                      Please enter a valid email address\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Date Of Birth</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"docForm.get('dob').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Education</mat-label>\r\n                    <textarea matInput formControlName=\"education\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <button class=\"btn-space\" [disabled]=\"!docForm.valid \" mat-raised-button\r\n                    color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-edit-doctor\",\r\n  templateUrl: \"./edit-doctor.component.html\",\r\n  styleUrls: [\"./edit-doctor.component.sass\"],\r\n})\r\nexport class EditDoctorComponent {\r\n  docForm: FormGroup;\r\n  formdata = {\r\n    first: \"Pooja\",\r\n    last: \"Sarma\",\r\n    gender: \"Female\",\r\n    mobile: \"123456789\",\r\n    password: \"123\",\r\n    conformPassword: \"123\",\r\n    email: \"test@example.com\",\r\n    designation: \"Sr. Doctor\",\r\n    department: \"2\",\r\n    address: \"101, Elanxa, New Yourk\",\r\n    dob: \"1987-02-17T14:22:18Z\",\r\n    education: \"M.B.B.S.\",\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.docForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log(\"Form Value\", this.docForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      first: [\r\n        this.formdata.first,\r\n        [Validators.required, Validators.pattern(\"[a-zA-Z]+\")],\r\n      ],\r\n      last: [this.formdata.last],\r\n      gender: [this.formdata.gender, [Validators.required]],\r\n      mobile: [this.formdata.mobile, [Validators.required]],\r\n      password: [this.formdata.password],\r\n      conformPassword: [this.formdata.conformPassword],\r\n      email: [\r\n        this.formdata.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      designation: [this.formdata.designation],\r\n      department: [this.formdata.department],\r\n      address: [this.formdata.address],\r\n      dob: [this.formdata.dob, [Validators.required]],\r\n      education: [this.formdata.education],\r\n    });\r\n  }\r\n}\r\n"]}