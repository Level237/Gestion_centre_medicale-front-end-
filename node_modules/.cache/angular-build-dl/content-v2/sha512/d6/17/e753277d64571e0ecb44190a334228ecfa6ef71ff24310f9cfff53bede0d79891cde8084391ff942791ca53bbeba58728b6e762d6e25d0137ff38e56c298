{"version":3,"sources":["./src/app/admin/payment/add-payment/add-payment.component.ts","./src/app/admin/payment/add-payment/add-payment.component.html","./src/app/admin/payment/allpayment/allpayment.component.ts","./src/app/admin/payment/allpayment/allpayment.component.html","./src/app/admin/payment/allpayment/dialog/delete/delete.component.ts","./src/app/admin/payment/allpayment/dialog/delete/delete.component.html","./src/app/admin/payment/allpayment/dialog/form-dialog/form-dialog.component.ts","./src/app/admin/payment/allpayment/dialog/form-dialog/form-dialog.component.html","./src/app/admin/payment/allpayment/payment.model.ts","./src/app/admin/payment/allpayment/payment.service.ts","./src/app/admin/payment/invoice/invoice.component.ts","./src/app/admin/payment/invoice/invoice.component.html","./src/app/admin/payment/payment-routing.module.ts","./src/app/admin/payment/payment.module.ts"],"names":[],"mappings":"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","file":"src_app_admin_payment_payment_module_ts-es2015.js","sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-add-payment\",\r\n  templateUrl: \"./add-payment.component.html\",\r\n  styleUrls: [\"./add-payment.component.sass\"],\r\n})\r\nexport class AddPaymentComponent {\r\n  paymentForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.paymentForm = this.fb.group({\r\n      bNo: [\"\", [Validators.required]],\r\n      pName: [\"\", [Validators.required]],\r\n      dName: [\"\", [Validators.required]],\r\n      pDate: [\"\", [Validators.required]],\r\n      dDate: [\"\", [Validators.required]],\r\n      discount: [\"\"],\r\n      total: [\"\"],\r\n      pMethod: [\"\", [Validators.required]],\r\n      pStatus: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log(\"Form Value\", this.paymentForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Add Payment</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Payment</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Add Payment</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2><strong>Payment Information</strong></h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"paymentForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Bill No</mat-label>\r\n                    <input matInput formControlName=\"bNo\" required>\r\n                    <mat-error *ngIf=\"paymentForm.get('bNo').hasError('required')\">\r\n                      Bill Number is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Patient Name</mat-label>\r\n                    <input matInput formControlName=\"pName\" required>\r\n                    <mat-error *ngIf=\"paymentForm.get('pName').hasError('required')\">\r\n                      Patient Name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Doctor Name</mat-label>\r\n                    <mat-select formControlName=\"dName\" required>\r\n                      <mat-option [value]=\"'1'\">\r\n                        DR. John Deo\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'2'\">\r\n                        Dr.Rajesh\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'3'\">\r\n                        DR. Megha Trivedi\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'4'\">\r\n                        DR. Smith\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"paymentForm.get('dName').hasError('required')\">\r\n                      Doctor name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Payment Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"pDate\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"paymentForm.get('pDate').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Discount</mat-label>\r\n                    <input matInput formControlName=\"discount\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Total Ammount</mat-label>\r\n                    <input matInput formControlName=\"total\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Payment Method</mat-label>\r\n                    <mat-select formControlName=\"pMethod\" required>\r\n                      <mat-option [value]=\"'1'\">\r\n                        Cash\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'2'\">\r\n                        Cheque\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'3'\">\r\n                        Credit Card\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'4'\">\r\n                        Debit Card\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'5'\">\r\n                        Net Banking\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'6'\">\r\n                        Insurence\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"paymentForm.get('pMethod').hasError('required')\">\r\n                      Payment Method is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Payment Status</mat-label>\r\n                    <mat-select formControlName=\"pStatus\" required>\r\n                      <mat-option [value]=\"'1'\">\r\n                        Complete\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'2'\">\r\n                        Pending\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'3'\">\r\n                        Partial\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"paymentForm.get('pStatus').hasError('required')\">\r\n                      Payment Status is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <button class=\"btn-space\" mat-raised-button color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { PaymentService } from \"./payment.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { Payment } from \"./payment.model\";\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { FormDialogComponent } from \"./dialog/form-dialog/form-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./dialog/delete/delete.component\";\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n\r\n@Component({\r\n  selector: \"app-allpayment\",\r\n  templateUrl: \"./allpayment.component.html\",\r\n  styleUrls: [\"./allpayment.component.sass\"],\r\n})\r\nexport class AllpaymentComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    \"select\",\r\n    \"pName\",\r\n    \"dName\",\r\n    \"charges\",\r\n    \"date\",\r\n    \"tax\",\r\n    \"disc\",\r\n    \"total\",\r\n    \"actions\",\r\n  ];\r\n  exampleDatabase: PaymentService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Payment>(true, []);\r\n  index: number;\r\n  id: number;\r\n  payment: Payment | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public paymentService: PaymentService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        payment: this.payment,\r\n        action: \"add\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.paymentService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-success\",\r\n          \"Add Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        payment: row,\r\n        action: \"edit\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.paymentService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"black\",\r\n          \"Edit Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(i: number, row) {\r\n    this.index = i;\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-danger\",\r\n          \"Delete Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Payment>(true, []);\r\n    });\r\n    this.showNotification(\r\n      \"snackbar-danger\",\r\n      totalSelect + \" Record Delete Successfully...!!!\",\r\n      \"bottom\",\r\n      \"center\"\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new PaymentService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, \"keyup\").subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, \"\", {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Payment> {\r\n  filterChange = new BehaviorSubject(\"\");\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Payment[] = [];\r\n  renderedData: Payment[] = [];\r\n  constructor(\r\n    public exampleDatabase: PaymentService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Payment[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllPayments();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((payment: Payment) => {\r\n            const searchStr = (\r\n              payment.pName +\r\n              payment.dName +\r\n              payment.charges +\r\n              payment.date +\r\n              payment.tax\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Payment[]): Payment[] {\r\n    if (!this._sort.active || this._sort.direction === \"\") {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = \"\";\r\n      let propertyB: number | string = \"\";\r\n      switch (this._sort.active) {\r\n        case \"id\":\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case \"pName\":\r\n          [propertyA, propertyB] = [a.pName, b.pName];\r\n          break;\r\n        case \"dName\":\r\n          [propertyA, propertyB] = [a.dName, b.dName];\r\n          break;\r\n        case \"charges\":\r\n          [propertyA, propertyB] = [a.charges, b.charges];\r\n          break;\r\n        case \"date\":\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n        case \"discount\":\r\n          [propertyA, propertyB] = [a.discount, b.discount];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">All Payment</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Payments</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">All Payment</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"table-responsive\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ms-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Payment</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"pName\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Patient Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.pName}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"dName\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Doctor Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.dName}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"charges\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Charges</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.charges}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy'}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"tax\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Tax</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.tax}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"disc\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Discount</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.discount}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"total\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Total</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.total}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(i, row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { PaymentService } from \"../../payment.service\";\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public paymentService: PaymentService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.paymentService.deletePayment(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n\r\n      <li>\r\n        <p><span class=\"font-weight-bold\">Patient Name: </span>{{ data.pName }}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"font-weight-bold\">Doctor Name: </span>{{data.dName}}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"font-weight-bold\">Total: </span>{{data.total}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { PaymentService } from \"../../payment.service\";\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder,\r\n} from \"@angular/forms\";\r\nimport { Payment } from \"../../payment.model\";\r\n@Component({\r\n  selector: \"app-form-dialog\",\r\n  templateUrl: \"./form-dialog.component.html\",\r\n  styleUrls: [\"./form-dialog.component.sass\"],\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  paymentForm: FormGroup;\r\n  payment: Payment;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public paymentService: PaymentService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === \"edit\") {\r\n      this.dialogTitle = data.payment.pName;\r\n      this.payment = data.payment;\r\n    } else {\r\n      this.dialogTitle = \"New Payment\";\r\n      this.payment = new Payment({});\r\n    }\r\n    this.paymentForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl(\"\", [\r\n    Validators.required,\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError(\"required\")\r\n      ? \"Required field\"\r\n      : this.formControl.hasError(\"email\")\r\n      ? \"Not a valid email\"\r\n      : \"\";\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.payment.id],\r\n      pName: [this.payment.pName],\r\n      dName: [this.payment.dName],\r\n      charges: [this.payment.charges],\r\n      date: [this.payment.date],\r\n      tax: [this.payment.tax],\r\n      discount: [this.payment.discount],\r\n      total: [this.payment.total],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.paymentService.addPayment(this.paymentForm.getRawValue());\r\n  }\r\n}\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 msl-3 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"paymentForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Patient Name</mat-label>\r\n            <input matInput formControlName=\"pName\" required>\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"paymentForm.get('pName').hasError('required')\">\r\n              Patient Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Doctor Name</mat-label>\r\n            <input matInput formControlName=\"dName\" required>\r\n            <mat-icon matSuffix>perm_identity</mat-icon>\r\n            <mat-error *ngIf=\"paymentForm.get('dName').hasError('required')\">\r\n              Doctor Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"paymentForm.get('date').hasError('required')\">\r\n              Please select date\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Charges</mat-label>\r\n            <input matInput formControlName=\"charges\">\r\n            <mat-icon matSuffix>attach_money</mat-icon>\r\n            <mat-error *ngIf=\"paymentForm.get('charges').hasError('required')\">\r\n              Charges is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Tax</mat-label>\r\n            <input matInput formControlName=\"tax\">\r\n            <mat-icon matSuffix>description</mat-icon>\r\n            <mat-error *ngIf=\"paymentForm.get('tax').hasError('required')\">\r\n              Tax is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Discount</mat-label>\r\n            <input matInput formControlName=\"discount\">\r\n            <mat-icon matSuffix>local_activity</mat-icon>\r\n            <mat-error *ngIf=\"paymentForm.get('discount').hasError('required')\">\r\n              Discount is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Total</mat-label>\r\n            <input matInput formControlName=\"total\">\r\n            <mat-icon matSuffix>receipt</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!paymentForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","export class Payment {\r\n  id: number;\r\n  pName: string;\r\n  dName: string;\r\n  charges: string;\r\n  tax: string;\r\n  date: string;\r\n  discount: string;\r\n  total: string;\r\n  constructor(payment) {\r\n    {\r\n      this.id = payment.id || this.getRandomID();\r\n      this.pName = payment.pName || \"\";\r\n      this.dName = payment.dName || \"\";\r\n      this.charges = payment.charges || \"\";\r\n      this.tax = payment.tax || \"\";\r\n      this.date = payment.date || \"\";\r\n      this.discount = payment.discount || \"\";\r\n      this.total = payment.total || \"\";\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Payment } from \"./payment.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n@Injectable()\r\nexport class PaymentService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = \"assets/data/payment.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Payment[]> = new BehaviorSubject<Payment[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): Payment[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllPayments(): void {\r\n    this.subs.sink = this.httpClient.get<Payment[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + \" \" + error.message);\r\n      }\r\n    );\r\n  }\r\n  addPayment(payment: Payment): void {\r\n    this.dialogData = payment;\r\n\r\n    /*  this.httpClient.post(this.API_URL, payment).subscribe(data => {\r\n      this.dialogData = payment;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updatePayment(payment: Payment): void {\r\n    this.dialogData = payment;\r\n\r\n    /* this.httpClient.put(this.API_URL + payment.id, payment).subscribe(data => {\r\n      this.dialogData = payment;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deletePayment(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\n@Component({\r\n  selector: \"app-invoice\",\r\n  templateUrl: \"./invoice.component.html\",\r\n  styleUrls: [\"./invoice.component.sass\"],\r\n})\r\nexport class InvoiceComponent implements OnInit {\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Invoice</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Payment</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Invoice</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"white-box\">\r\n                  <h3>\r\n                    <b>INVOICE</b>\r\n                    <span class=\"float-end\">#345766</span>\r\n                  </h3>\r\n                  <hr>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"float-start\">\r\n                        <address>\r\n                          <img src=\"assets/images/invoice_logo.png\" alt=\"logo\" class=\"logo-default\" />\r\n                          <p class=\"text-muted m-l-5\">\r\n                            D 103, Cliniva Hospital, <br> Opp. Town Hall, <br>\r\n                            Sardar Patel Road, <br> Ahmedabad - 380015\r\n                          </p>\r\n                        </address>\r\n                      </div>\r\n                      <div class=\"float-end text-end\">\r\n                        <address>\r\n                          <p class=\"addr-font-h3 font-bold\">BILL TO :</p>\r\n                          <p class=\"font-bold addr-font-h4\">Jayesh Patel</p>\r\n                          <p class=\"text-muted m-l-30\">\r\n                            207, Prem Sagar Appt.,\r\n                            <br> Near Income Tax Office,\r\n                            <br> Ashram Road,\r\n                            <br> Ahmedabad - 380057\r\n                          </p>\r\n                          <p class=\"m-t-30\">\r\n                            <b>Invoice Date :</b>\r\n                            <i class=\"fa fa-calendar\"></i> 14th July 2017\r\n                          </p>\r\n                          <p>\r\n                            <b>Status :</b>\r\n                            <span class=\"label label-success\">Success</span>\r\n                          </p>\r\n                        </address>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"table-responsive m-t-40\">\r\n                        <table class=\"table table-hover\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th class=\"text-center\">#</th>\r\n                              <th>Detail</th>\r\n                              <th class=\"text-end\">Quantity</th>\r\n                              <th class=\"text-end\">Unit Cost</th>\r\n                              <th class=\"text-end\">Charges</th>\r\n                              <th class=\"text-end\">Discount</th>\r\n                              <th class=\"text-end\">Total</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td class=\"text-center\">1</td>\r\n                              <td>Visiting Charges</td>\r\n                              <td class=\"text-end\">-</td>\r\n                              <td class=\"text-end\">-</td>\r\n                              <td class=\"text-end\">$100</td>\r\n                              <td class=\"text-end\">-</td>\r\n                              <td class=\"text-end\">$100</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td class=\"text-center\">2</td>\r\n                              <td>Medicines</td>\r\n                              <td class=\"text-end\">10</td>\r\n                              <td class=\"text-end\">$15</td>\r\n                              <td class=\"text-end\">$150</td>\r\n                              <td class=\"text-end\">5</td>\r\n                              <td class=\"text-end\">$1000</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td class=\"text-center\">3</td>\r\n                              <td>X-ray Reports</td>\r\n                              <td class=\"text-end\">4</td>\r\n                              <td class=\"text-end\">$600</td>\r\n                              <td class=\"text-end\">$70</td>\r\n                              <td class=\"text-end\">5</td>\r\n                              <td class=\"text-end\">$1200</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td class=\"text-center\">4</td>\r\n                              <td>MRI</td>\r\n                              <td class=\"text-end\">2</td>\r\n                              <td class=\"text-end\">$245</td>\r\n                              <td class=\"text-end\">$125</td>\r\n                              <td class=\"text-end\">10</td>\r\n                              <td class=\"text-end\">$480</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td class=\"text-center\">5</td>\r\n                              <td>Other Charges</td>\r\n                              <td class=\"text-end\">-</td>\r\n                              <td class=\"text-end\">-</td>\r\n                              <td class=\"text-end\">-</td>\r\n                              <td class=\"text-end\">-</td>\r\n                              <td class=\"text-end\">$300</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"float-end m-t-30 text-end\">\r\n                        <p>Sub - Total amount: $2600</p>\r\n                        <p>Discount : $100 </p>\r\n                        <p>vat (10%) : $160 </p>\r\n                        <hr>\r\n                        <h3><b>Total :</b> $2760</h3>\r\n                      </div>\r\n                      <div class=\"clearfix\"></div>\r\n                      <hr>\r\n                      <div class=\"text-end\">\r\n                        <button mat-flat-button color=\"primary\"><i class=\"fas fa-print\"></i>\r\n                          Print</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AddPaymentComponent } from \"./add-payment/add-payment.component\";\r\nimport { InvoiceComponent } from \"./invoice/invoice.component\";\r\nimport { AllpaymentComponent } from \"./allpayment/allpayment.component\";\r\nimport { Page404Component } from \"./../../authentication/page404/page404.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"add-payment\",\r\n    component: AddPaymentComponent,\r\n  },\r\n  {\r\n    path: \"all-payment\",\r\n    component: AllpaymentComponent,\r\n  },\r\n  {\r\n    path: \"invoice\",\r\n    component: InvoiceComponent,\r\n  },\r\n  { path: \"**\", component: Page404Component },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PaymentRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { PaymentRoutingModule } from \"./payment-routing.module\";\r\nimport { AddPaymentComponent } from \"./add-payment/add-payment.component\";\r\nimport { InvoiceComponent } from \"./invoice/invoice.component\";\r\nimport { AllpaymentComponent } from \"./allpayment/allpayment.component\";\r\nimport { FormDialogComponent } from \"./allpayment/dialog/form-dialog/form-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./allpayment/dialog/delete/delete.component\";\r\nimport { PaymentService } from \"./allpayment/payment.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddPaymentComponent,\r\n    InvoiceComponent,\r\n    AllpaymentComponent,\r\n    FormDialogComponent,\r\n    DeleteDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PaymentRoutingModule,\r\n    FormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatDatepickerModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [PaymentService],\r\n})\r\nexport class PaymentModule {}\r\n"],"sourceRoot":"webpack:///"}