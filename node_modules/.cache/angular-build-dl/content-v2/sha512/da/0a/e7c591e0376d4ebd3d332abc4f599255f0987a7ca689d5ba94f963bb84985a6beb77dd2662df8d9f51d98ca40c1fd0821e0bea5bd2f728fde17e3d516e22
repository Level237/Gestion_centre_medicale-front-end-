{"version":3,"sources":["webpack:///src/app/admin/room/add-allotment/add-allotment.component.html","webpack:///src/app/admin/room/add-allotment/add-allotment.component.ts","webpack:///src/app/admin/room/allroom/allroom.component.html","webpack:///src/app/admin/room/allroom/allroom.component.ts","webpack:///src/app/admin/room/allroom/dialog/delete/delete.component.ts","webpack:///src/app/admin/room/allroom/dialog/delete/delete.component.html","webpack:///src/app/admin/room/allroom/dialog/form-dialog/form-dialog.component.html","webpack:///src/app/admin/room/allroom/dialog/form-dialog/form-dialog.component.ts","webpack:///src/app/admin/room/allroom/room.model.ts","webpack:///src/app/admin/room/allroom/room.service.ts","webpack:///src/app/admin/room/edit-allotment/edit-allotment.component.html","webpack:///src/app/admin/room/edit-allotment/edit-allotment.component.ts","webpack:///src/app/admin/room/room-routing.module.ts","webpack:///src/app/admin/room/room.module.ts"],"names":["AddAllotmentComponent","fb","roomForm","group","rNo","Validators","rType","pName","aDate","dDate","console","log","value","onSubmit","$event","stopPropagation","selection","AllroomComponent","httpClient","dialog","roomService","snackBar","displayedColumns","SelectionModel","loadData","tempDirection","localStorage","getItem","dialogRef","open","FormDialogComponent","data","room","action","direction","subs","sink","afterClosed","subscribe","result","exampleDatabase","dataChange","unshift","getDialogData","refreshTable","showNotification","row","id","foundIndex","findIndex","x","i","index","DeleteDialogComponent","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","d","RoomService","ExampleDataSource","sort","fromEvent","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","UnsubscribeOnDestroyAdapter","MatPaginator","MatSort","removeSelectedRows","addNew","refresh","_sort","filterChange","BehaviorSubject","filteredData","pageIndex","next","displayDataChanges","sortChange","page","getAllRooms","merge","pipe","map","slice","searchStr","sex","admitDate","dischargeDate","toLowerCase","indexOf","sortedData","sortData","startIndex","active","a","b","propertyA","propertyB","valueA","isNaN","valueB","DataSource","close","deleteRoom","MAT_DIALOG_DATA","confirmDelete","onNoClick","formControl","FormControl","dialogTitle","Room","createContactForm","hasError","img","addRoom","getRawValue","confirmAdd","getRandomID","avatar","formatDate","Date","S4","Math","random","toString","substring","API_URL","isTblLoading","dialogData","get","error","name","message","EditAllotmentComponent","formdata","routes","path","component","Page404Component","RoomRoutingModule","RouterModule","RoomModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatCheckboxModule","MatToolbarModule","MatSelectModule","MatDatepickerModule","MatProgressSpinnerModule"],"mappings":"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","file":"src_app_admin_room_room_module_ts-es5.js","sourcesContent":["<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">New Allotment</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Room</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">New Allotment</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2><strong> New Allotment</strong></h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"roomForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Room No</mat-label>\r\n                    <input matInput formControlName=\"rNo\" required>\r\n                    <mat-error *ngIf=\"roomForm.get('rNo').hasError('required')\">\r\n                      Room Number is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Room Type</mat-label>\r\n                    <mat-select formControlName=\"rType\" required>\r\n                      <mat-option [value]=\"'1'\">\r\n                        General\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'2'\">\r\n                        Delux\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'3'\">\r\n                        Super Delux\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'4'\">\r\n                        ICU\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"roomForm.get('rType').hasError('required')\">\r\n                      Room Type is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Patient Name</mat-label>\r\n                    <input matInput formControlName=\"pName\" required>\r\n                    <mat-error *ngIf=\"roomForm.get('pName').hasError('required')\">\r\n                      Patient Name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Allotment Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"aDate\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"roomForm.get('aDate').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Discharge Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker1\" formControlName=\"dDate\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker1></mat-datepicker>\r\n                    <mat-error *ngIf=\"roomForm.get('dDate').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <button class=\"btn-space\" [disabled]=\"!roomForm.valid \" mat-raised-button\r\n                    color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-add-allotment\",\r\n  templateUrl: \"./add-allotment.component.html\",\r\n  styleUrls: [\"./add-allotment.component.sass\"],\r\n})\r\nexport class AddAllotmentComponent {\r\n  roomForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.roomForm = this.fb.group({\r\n      rNo: [\"\", [Validators.required]],\r\n      rType: [\"\", [Validators.required]],\r\n      pName: [\"\", [Validators.required]],\r\n      aDate: [\"\", [Validators.required]],\r\n      dDate: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log(\"Form Value\", this.roomForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">View Rooms</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Rooms</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">View</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"table-responsive\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ms-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Rooms</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"img\">\r\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\"> Image\r\n                  </mat-header-cell>\r\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\"> <img\r\n                      [src]=\"row.img\" />\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"rNo\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Room No</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.rNo}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"pName\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>patient Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.pName}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"rType\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Room Type</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.rType}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"sex\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Sex</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.sex}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"admitDate\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Admit Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.admitDate | date: 'MM/dd/yyyy'}}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"dischargeDate\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Discharge Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.dischargeDate | date: 'MM/dd/yyyy'}}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(i, row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { RoomService } from \"./room.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { Room } from \"./room.model\";\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { FormDialogComponent } from \"./dialog/form-dialog/form-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./dialog/delete/delete.component\";\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n\r\n@Component({\r\n  selector: \"app-allroom\",\r\n  templateUrl: \"./allroom.component.html\",\r\n  styleUrls: [\"./allroom.component.sass\"],\r\n})\r\nexport class AllroomComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    \"select\",\r\n    \"img\",\r\n    \"rNo\",\r\n    \"pName\",\r\n    \"rType\",\r\n    \"sex\",\r\n    \"admitDate\",\r\n    \"dischargeDate\",\r\n    \"actions\",\r\n  ];\r\n  exampleDatabase: RoomService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Room>(true, []);\r\n  index: number;\r\n  id: number;\r\n  room: Room | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public roomService: RoomService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        room: this.room,\r\n        action: \"add\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.roomService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-success\",\r\n          \"Add Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        room: row,\r\n        action: \"edit\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.roomService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"black\",\r\n          \"Edit Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(i: number, row) {\r\n    this.index = i;\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-danger\",\r\n          \"Delete Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Room>(true, []);\r\n    });\r\n    this.showNotification(\r\n      \"snackbar-danger\",\r\n      totalSelect + \" Record Delete Successfully...!!!\",\r\n      \"bottom\",\r\n      \"center\"\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new RoomService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, \"keyup\").subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, \"\", {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Room> {\r\n  filterChange = new BehaviorSubject(\"\");\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Room[] = [];\r\n  renderedData: Room[] = [];\r\n  constructor(\r\n    public exampleDatabase: RoomService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Room[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllRooms();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((room: Room) => {\r\n            const searchStr = (\r\n              room.rNo +\r\n              room.pName +\r\n              room.rType +\r\n              room.sex +\r\n              room.admitDate +\r\n              room.dischargeDate\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Room[]): Room[] {\r\n    if (!this._sort.active || this._sort.direction === \"\") {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = \"\";\r\n      let propertyB: number | string = \"\";\r\n      switch (this._sort.active) {\r\n        case \"id\":\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case \"pName\":\r\n          [propertyA, propertyB] = [a.pName, b.pName];\r\n          break;\r\n        case \"rType\":\r\n          [propertyA, propertyB] = [a.rType, b.rType];\r\n          break;\r\n        case \"admitDate\":\r\n          [propertyA, propertyB] = [a.admitDate, b.admitDate];\r\n          break;\r\n        case \"dischargeDate\":\r\n          [propertyA, propertyB] = [a.dischargeDate, b.dischargeDate];\r\n          break;\r\n        case \"rNo\":\r\n          [propertyA, propertyB] = [a.rNo, b.rNo];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { RoomService } from \"../../room.service\";\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public roomService: RoomService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.roomService.deleteRoom(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Room No: </span>{{data.rNo}}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Patient Name: </span>{{ data.pName }}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"font-weight-bold\">Room Type: </span>{{data.rType}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <img [src]='room.img' alt=\"avatar\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 msl-3 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"roomForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Room No</mat-label>\r\n            <input matInput formControlName=\"rNo\" required>\r\n            <mat-icon matSuffix>assignment</mat-icon>\r\n            <mat-error *ngIf=\"roomForm.get('rNo').hasError('required')\">\r\n              Room no is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Patient Name</mat-label>\r\n            <input matInput formControlName=\"pName\" required>\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"roomForm.get('pName').hasError('required')\">\r\n              Patient Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Room Type</mat-label>\r\n            <input matInput formControlName=\"rType\" required>\r\n            <mat-icon matSuffix>store</mat-icon>\r\n            <mat-error *ngIf=\"roomForm.get('rType').hasError('required')\">\r\n              Room type is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Sex</mat-label>\r\n            <input matInput formControlName=\"sex\" required>\r\n            <mat-icon matSuffix>supervisor_account</mat-icon>\r\n            <mat-error *ngIf=\"roomForm.get('sex').hasError('required')\">\r\n              Sex is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Admit date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"admitDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"roomForm.get('admitDate').hasError('required')\">\r\n              Please select Admit date\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Discharge date</mat-label>\r\n            <input matInput [matDatepicker]=\"pickerTo\" formControlName=\"dischargeDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"pickerTo\"></mat-datepicker-toggle>\r\n            <mat-datepicker #pickerTo></mat-datepicker>\r\n            <mat-error *ngIf=\"roomForm.get('dischargeDate').hasError('required')\">\r\n              Please select Discharge date\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!roomForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { RoomService } from \"../../room.service\";\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder,\r\n} from \"@angular/forms\";\r\nimport { Room } from \"../../room.model\";\r\n@Component({\r\n  selector: \"app-form-dialog\",\r\n  templateUrl: \"./form-dialog.component.html\",\r\n  styleUrls: [\"./form-dialog.component.sass\"],\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  roomForm: FormGroup;\r\n  room: Room;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public roomService: RoomService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === \"edit\") {\r\n      this.dialogTitle = data.room.pName;\r\n      this.room = data.room;\r\n    } else {\r\n      this.dialogTitle = \"New Room\";\r\n      this.room = new Room({});\r\n    }\r\n    this.roomForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl(\"\", [\r\n    Validators.required,\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError(\"required\")\r\n      ? \"Required field\"\r\n      : this.formControl.hasError(\"email\")\r\n      ? \"Not a valid email\"\r\n      : \"\";\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.room.id],\r\n      img: [this.room.img],\r\n      pName: [this.room.pName],\r\n      rType: [this.room.rType],\r\n      admitDate: [this.room.admitDate],\r\n      dischargeDate: [this.room.dischargeDate],\r\n      rNo: [this.room.rNo],\r\n      sex: [this.room.sex],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.roomService.addRoom(this.roomForm.getRawValue());\r\n  }\r\n}\r\n","import { formatDate } from \"@angular/common\";\r\nexport class Room {\r\n  id: number;\r\n  img: string;\r\n  pName: string;\r\n  rNo: string;\r\n  rType: string;\r\n  sex: string;\r\n  admitDate: string;\r\n  dischargeDate: string;\r\n  constructor(room) {\r\n    {\r\n      this.id = room.id || this.getRandomID();\r\n      this.img = room.avatar || \"assets/images/user/user1.jpg\";\r\n      this.pName = room.pName || \"\";\r\n      this.rNo = room.rNo || \"\";\r\n      this.rType = room.rType || \"\";\r\n      this.sex = room.sex || \"\";\r\n      this.admitDate = formatDate(new Date(), \"yyyy-MM-dd\", \"en\") || \"\";\r\n      this.dischargeDate = formatDate(new Date(), \"yyyy-MM-dd\", \"en\") || \"\";\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Room } from \"./room.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n@Injectable()\r\nexport class RoomService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = \"assets/data/rooms.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Room[]> = new BehaviorSubject<Room[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): Room[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllRooms(): void {\r\n    this.subs.sink = this.httpClient.get<Room[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + \" \" + error.message);\r\n      }\r\n    );\r\n  }\r\n  addRoom(room: Room): void {\r\n    this.dialogData = room;\r\n\r\n    /*  this.httpClient.post(this.API_URL, room).subscribe(data => {\r\n      this.dialogData = room;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateRoom(room: Room): void {\r\n    this.dialogData = room;\r\n\r\n    /* this.httpClient.put(this.API_URL + room.id, room).subscribe(data => {\r\n      this.dialogData = room;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteRoom(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Edit Allotment</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Room</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Edit Allotment</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2><strong> Edit Allotment</strong></h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"roomForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Room No</mat-label>\r\n                    <input matInput formControlName=\"rNo\" required>\r\n                    <mat-error *ngIf=\"roomForm.get('rNo').hasError('required')\">\r\n                      Room Number is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Room Type</mat-label>\r\n                    <mat-select formControlName=\"rType\" required>\r\n                      <mat-option [value]=\"'1'\">\r\n                        General\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'2'\">\r\n                        Delux\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'3'\">\r\n                        Super Delux\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'4'\">\r\n                        ICU\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"roomForm.get('rType').hasError('required')\">\r\n                      Room Type is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Patient Name</mat-label>\r\n                    <input matInput formControlName=\"pName\" required>\r\n                    <mat-error *ngIf=\"roomForm.get('pName').hasError('required')\">\r\n                      Patient Name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Allotment Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"aDate\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"roomForm.get('aDate').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Discharge Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker1\" formControlName=\"dDate\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker1></mat-datepicker>\r\n                    <mat-error *ngIf=\"roomForm.get('dDate').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                  <button class=\"btn-space\" [disabled]=\"!roomForm.valid \" mat-raised-button\r\n                    color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-edit-allotment\",\r\n  templateUrl: \"./edit-allotment.component.html\",\r\n  styleUrls: [\"./edit-allotment.component.sass\"],\r\n})\r\nexport class EditAllotmentComponent {\r\n  roomForm: FormGroup;\r\n  formdata = {\r\n    rNo: \"105\",\r\n    rType: \"2\",\r\n    pName: \"John Deo\",\r\n    aDate: \"2020-02-17T14:22:18Z\",\r\n    dDate: \"2020-02-19T14:22:18Z\",\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.roomForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log(\"Form Value\", this.roomForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      rNo: [this.formdata.rNo, [Validators.required]],\r\n      rType: [this.formdata.rType, [Validators.required]],\r\n      pName: [this.formdata.pName, [Validators.required]],\r\n      aDate: [this.formdata.aDate, [Validators.required]],\r\n      dDate: [this.formdata.dDate, [Validators.required]],\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AllroomComponent } from \"./allroom/allroom.component\";\r\nimport { AddAllotmentComponent } from \"./add-allotment/add-allotment.component\";\r\nimport { EditAllotmentComponent } from \"./edit-allotment/edit-allotment.component\";\r\nimport { Page404Component } from \"./../../authentication/page404/page404.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"all-rooms\",\r\n    component: AllroomComponent,\r\n  },\r\n  {\r\n    path: \"add-allotment\",\r\n    component: AddAllotmentComponent,\r\n  },\r\n  {\r\n    path: \"edit-allotment\",\r\n    component: EditAllotmentComponent,\r\n  },\r\n  { path: \"**\", component: Page404Component },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RoomRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { RoomRoutingModule } from \"./room-routing.module\";\r\nimport { AllroomComponent } from \"./allroom/allroom.component\";\r\nimport { DeleteDialogComponent } from \"./allroom/dialog/delete/delete.component\";\r\nimport { FormDialogComponent } from \"./allroom/dialog/form-dialog/form-dialog.component\";\r\nimport { EditAllotmentComponent } from \"./edit-allotment/edit-allotment.component\";\r\nimport { AddAllotmentComponent } from \"./add-allotment/add-allotment.component\";\r\nimport { RoomService } from \"./allroom/room.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AllroomComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n    EditAllotmentComponent,\r\n    AddAllotmentComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    RoomRoutingModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [RoomService],\r\n})\r\nexport class RoomModule {}\r\n"]}