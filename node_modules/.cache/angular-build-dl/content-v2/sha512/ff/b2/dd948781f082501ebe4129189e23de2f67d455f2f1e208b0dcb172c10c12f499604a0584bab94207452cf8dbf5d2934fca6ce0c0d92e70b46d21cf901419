{"version":3,"sources":["webpack:///src/app/patient/appointments/appointments-routing.module.ts","webpack:///src/app/patient/appointments/appointments.module.ts","webpack:///src/app/patient/appointments/past-appointment/dialogs/delete/delete.component.ts","webpack:///src/app/patient/appointments/past-appointment/dialogs/delete/delete.component.html","webpack:///src/app/patient/appointments/past-appointment/past-appointment.component.html","webpack:///src/app/patient/appointments/past-appointment/past-appointment.component.ts","webpack:///src/app/patient/appointments/past-appointment/past-appointment.service.ts","webpack:///src/app/patient/appointments/today-appointment/dialogs/delete/delete.component.ts","webpack:///src/app/patient/appointments/today-appointment/dialogs/delete/delete.component.html","webpack:///src/app/patient/appointments/today-appointment/today-appointment.component.ts","webpack:///src/app/patient/appointments/today-appointment/today-appointment.component.html","webpack:///src/app/patient/appointments/upcoming-appointment/dialogs/delete/delete.component.ts","webpack:///src/app/patient/appointments/upcoming-appointment/dialogs/delete/delete.component.html","webpack:///src/app/patient/appointments/upcoming-appointment/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/patient/appointments/upcoming-appointment/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/patient/appointments/upcoming-appointment/upcoming-appointment.component.html","webpack:///src/app/patient/appointments/upcoming-appointment/upcoming-appointment.component.ts","webpack:///src/app/patient/appointments/upcoming-appointment/upcoming-appointment.model.ts","webpack:///src/app/patient/appointments/upcoming-appointment/upcoming-appointment.service.ts"],"names":["routes","path","component","TodayAppointmentComponent","UpcomingAppointmentComponent","PastAppointmentComponent","Page404Component","AppointmentsRoutingModule","RouterModule","AppointmentsModule","UpcomingAppointmentService","PastAppointmentService","CommonModule","FormsModule","ReactiveFormsModule","NgxDatatableModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatSelectModule","MatCardModule","MatRadioModule","MatDatepickerModule","MatDialogModule","MatSortModule","MatCheckboxModule","MatToolbarModule","MaterialFileInputModule","MatProgressSpinnerModule","DeleteDialogComponent","FormDialogComponent","PastDeleteDialogComponent","DeleteComponent","dialogRef","data","appointmentService","close","deletePastAppointment","id","MAT_DIALOG_DATA","confirmDelete","onNoClick","$event","stopPropagation","selection","httpClient","dialog","snackBar","displayedColumns","SelectionModel","loadData","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","row","select","totalSelect","item","index","findIndex","d","exampleDatabase","dataChange","value","splice","refreshTable","showNotification","i","tempDirection","localStorage","getItem","open","direction","subs","sink","afterClosed","subscribe","result","foundIndex","x","paginator","_changePageSize","pageSize","ExampleDataSource","sort","fromEvent","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","UnsubscribeOnDestroyAdapter","MatPaginator","MatSort","provide","MAT_DATE_LOCALE","useValue","removeSelectedRows","_sort","filterChange","BehaviorSubject","filteredData","pageIndex","next","displayDataChanges","sortChange","page","getAllPastAppointment","merge","pipe","map","slice","appointment","searchStr","email","date","time","doctor","injury","mobile","toLowerCase","indexOf","sortedData","sortData","startIndex","active","a","b","propertyA","propertyB","name","valueA","isNaN","valueB","DataSource","API_URL","isTblLoading","dialogData","get","error","console","log","message","deleteUpcomingAppointment","fb","formControl","FormControl","Validators","action","dialogTitle","UpcomingAppointment","appointmentForm","createContactForm","hasError","group","img","formatDate","addUpcomingAppointment","getRawValue","confirmAdd","unshift","getDialogData","addNew","refresh","getAllUpcomingAppointment","getRandomID","avatar","gender","Date","S4","Math","random","toString","substring"],"mappings":"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","file":"src_app_patient_appointments_appointments_module_ts-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { Page404Component } from \"./../../authentication/page404/page404.component\";\r\nimport { UpcomingAppointmentComponent } from \"./upcoming-appointment/upcoming-appointment.component\";\r\nimport { PastAppointmentComponent } from \"./past-appointment/past-appointment.component\";\r\nimport { TodayAppointmentComponent } from \"./today-appointment/today-appointment.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"today\",\r\n    component: TodayAppointmentComponent,\r\n  },\r\n  {\r\n    path: \"upcoming\",\r\n    component: UpcomingAppointmentComponent,\r\n  },\r\n  {\r\n    path: \"past\",\r\n    component: PastAppointmentComponent,\r\n  },\r\n  { path: \"**\", component: Page404Component },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppointmentsRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MaterialFileInputModule } from \"ngx-material-file-input\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\n\r\nimport { AppointmentsRoutingModule } from \"./appointments-routing.module\";\r\nimport { UpcomingAppointmentComponent } from \"./upcoming-appointment/upcoming-appointment.component\";\r\nimport { DeleteDialogComponent } from \"./upcoming-appointment/dialogs/delete/delete.component\";\r\nimport { FormDialogComponent } from \"./upcoming-appointment/dialogs/form-dialog/form-dialog.component\";\r\nimport { PastAppointmentComponent } from \"./past-appointment/past-appointment.component\";\r\nimport { PastDeleteDialogComponent } from \"./past-appointment/dialogs/delete/delete.component\";\r\nimport { TodayAppointmentComponent } from \"./today-appointment/today-appointment.component\";\r\nimport { DeleteComponent } from \"./today-appointment/dialogs/delete/delete.component\";\r\nimport { UpcomingAppointmentService } from \"./upcoming-appointment/upcoming-appointment.service\";\r\nimport { PastAppointmentService } from \"./past-appointment/past-appointment.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UpcomingAppointmentComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n    PastAppointmentComponent,\r\n    PastDeleteDialogComponent,\r\n    TodayAppointmentComponent,\r\n    DeleteComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AppointmentsRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxDatatableModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MaterialFileInputModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [UpcomingAppointmentService, PastAppointmentService],\r\n})\r\nexport class AppointmentsModule {}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { PastAppointmentService } from \"../../past-appointment.service\";\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class PastDeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<PastDeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public appointmentService: PastAppointmentService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.appointmentService.deletePastAppointment(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Name: </span>{{data.doctor}}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Email: </span>{{ data.email }}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Past</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/patient/dashboard\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Past Appointments</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ms-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Past Appointments</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"img\">\r\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\"> Image\r\n                  </mat-header-cell>\r\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\"> <img\r\n                      [src]=\"row.img\" />\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"doctor\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Doctor Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.doctor}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"email\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.email}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Appo. Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy' }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"time\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Appo. Time</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.time}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"mobile\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.mobile}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"injury\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Injury/Condition\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.injury}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(i, row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { PastAppointmentService } from \"./past-appointment.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { PastAppointment } from \"./past-appointment.model\";\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { PastDeleteDialogComponent } from \"./dialogs/delete/delete.component\";\r\nimport { DateAdapter, MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n\r\n@Component({\r\n  selector: \"app-past-appointment\",\r\n  templateUrl: \"./past-appointment.component.html\",\r\n  styleUrls: [\"./past-appointment.component.sass\"],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: \"en-GB\" }],\r\n})\r\nexport class PastAppointmentComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    \"select\",\r\n    \"img\",\r\n    \"doctor\",\r\n    \"date\",\r\n    \"time\",\r\n    \"email\",\r\n    \"mobile\",\r\n    \"injury\",\r\n    \"actions\",\r\n  ];\r\n  exampleDatabase: PastAppointmentService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<PastAppointment>(true, []);\r\n  index: number;\r\n  id: number;\r\n  appointment: PastAppointment | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public appointmentService: PastAppointmentService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<PastAppointment>(true, []);\r\n    });\r\n    this.showNotification(\r\n      \"snackbar-danger\",\r\n      totalSelect + \" Record Delete Successfully...!!!\",\r\n      \"bottom\",\r\n      \"center\"\r\n    );\r\n  }\r\n  deleteItem(i: number, row) {\r\n    this.index = i;\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(PastDeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-danger\",\r\n          \"Delete Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new PastAppointmentService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, \"keyup\").subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, \"\", {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<PastAppointment> {\r\n  filterChange = new BehaviorSubject(\"\");\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: PastAppointment[] = [];\r\n  renderedData: PastAppointment[] = [];\r\n  constructor(\r\n    public exampleDatabase: PastAppointmentService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<PastAppointment[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllPastAppointment();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((appointment: PastAppointment) => {\r\n            const searchStr = (\r\n              appointment.email +\r\n              appointment.date +\r\n              appointment.time +\r\n              appointment.doctor +\r\n              appointment.injury +\r\n              appointment.mobile\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: PastAppointment[]): PastAppointment[] {\r\n    if (!this._sort.active || this._sort.direction === \"\") {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = \"\";\r\n      let propertyB: number | string = \"\";\r\n      switch (this._sort.active) {\r\n        case \"id\":\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case \"doctor\":\r\n          [propertyA, propertyB] = [a.name, b.name];\r\n          break;\r\n        case \"email\":\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n        case \"date\":\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n        case \"time\":\r\n          [propertyA, propertyB] = [a.time, b.time];\r\n          break;\r\n        case \"mobile\":\r\n          [propertyA, propertyB] = [a.mobile, b.mobile];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { PastAppointment } from \"./past-appointment.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n@Injectable()\r\nexport class PastAppointmentService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = \"assets/data/past-appointment.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<PastAppointment[]> = new BehaviorSubject<\r\n    PastAppointment[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): PastAppointment[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllPastAppointment(): void {\r\n    this.subs.sink = this.httpClient\r\n      .get<PastAppointment[]>(this.API_URL)\r\n      .subscribe(\r\n        (data) => {\r\n          this.isTblLoading = false;\r\n          this.dataChange.next(data);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          this.isTblLoading = false;\r\n          console.log(error.name + \" \" + error.message);\r\n        }\r\n      );\r\n  }\r\n  addPastAppointment(appointment: PastAppointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /*  this.httpClient.post(this.API_URL, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updatePastAppointment(appointment: PastAppointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /* this.httpClient.put(this.API_URL + appointment.id, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deletePastAppointment(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class DeleteComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>delete works!</p>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-today-appointment\",\r\n  templateUrl: \"./today-appointment.component.html\",\r\n  styleUrls: [\"./today-appointment.component.sass\"],\r\n})\r\nexport class TodayAppointmentComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Appointment</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/patient/dashboard\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Today</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Today's Appointments</h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <ul class=\"list-unstyled user-progress list-unstyled-border list-unstyled-noborder\">\r\n              <li class=\"app-list\">\r\n                <img alt=\"image\" class=\"msr-3 rounded-circle\" width=\"40\" src=\"assets/images/user/usrbig1.jpg\">\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title font-16\">Dr.Cara Stevens</div>\r\n                  <div class=\"text-job text-muted mb-0\">Radiologist</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title font-16\">12 June '20</div>\r\n                  <div class=\"text-job text-muted mb-0\">09:00-10:00</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Treatement</div>\r\n                  <div class=\"text-job font-16\">CT scans</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Contact Number</div>\r\n                  <div class=\"text-job font-16\">+123 676545655</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Status</div>\r\n                  <div class=\"col-green\">Confirm</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Location</div>\r\n                  <div class=\"text-job font-16\">Grand Plains Clinic</div>\r\n                </div>\r\n                <div class=\"media-cta\">\r\n                  <td>\r\n                    <button mat-icon-button class=\"btn-tbl-confirm\">\r\n                      <mat-icon>done</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button class=\"btn-tbl-reject\">\r\n                      <mat-icon>close</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                </div>\r\n              </li>\r\n              <li class=\"app-list\">\r\n                <img alt=\"image\" class=\"msr-3 rounded-circle\" width=\"40\" src=\"assets/images/user/usrbig2.jpg\">\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title font-16\">Dr.John Doe</div>\r\n                  <div class=\"text-job text-muted mb-0\">Cardiologist</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title font-16\">12 June '20</div>\r\n                  <div class=\"text-job text-muted mb-0\">11:00-11:30</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Treatement</div>\r\n                  <div class=\"text-job font-16\">heart checkup</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Contact Number</div>\r\n                  <div class=\"text-job font-16\">+123 434656764</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Status</div>\r\n                  <div class=\"col-red\">Cancelled</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Location</div>\r\n                  <div class=\"text-job font-16\">Genesis Hospital</div>\r\n                </div>\r\n                <div class=\"media-cta\">\r\n                  <td>\r\n                    <button mat-icon-button class=\"btn-tbl-confirm\">\r\n                      <mat-icon>done</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button class=\"btn-tbl-reject\">\r\n                      <mat-icon>close</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                </div>\r\n              </li>\r\n              <li class=\"app-list\">\r\n                <img alt=\"image\" class=\"msr-3 rounded-circle\" width=\"40\" src=\"assets/images/user/usrbig3.jpg\">\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title font-16\">Dr.Airi Satou</div>\r\n                  <div class=\"text-job text-muted mb-0\">Otolaryngologist</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title font-16\">12 June '20</div>\r\n                  <div class=\"text-job text-muted mb-0\">09:15-10:15 </div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Treatement</div>\r\n                  <div class=\"text-job font-16\">Diseases Of The Ear</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Contact Number</div>\r\n                  <div class=\"text-job font-16\">+123 45345673</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Status</div>\r\n                  <div class=\"col-green\">Confirm</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Location</div>\r\n                  <div class=\"text-job font-16\">Genesis Laboratory</div>\r\n                </div>\r\n                <div class=\"media-cta\">\r\n                  <td>\r\n                    <button mat-icon-button class=\"btn-tbl-confirm\">\r\n                      <mat-icon>done</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button class=\"btn-tbl-reject\">\r\n                      <mat-icon>close</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                </div>\r\n              </li>\r\n              <li class=\"app-list\">\r\n                <img alt=\"image\" class=\"msr-3 rounded-circle\" width=\"40\" src=\"assets/images/user/usrbig4.jpg\">\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title font-16\">Dr.Angelica Ramos</div>\r\n                  <div class=\"text-job text-muted mb-0\">Dentist</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title font-16\">12 June '20</div>\r\n                  <div class=\"text-job text-muted mb-0\">11:00-12:00</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Treatement</div>\r\n                  <div class=\"text-job font-16\">Root Canal</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Contact Number</div>\r\n                  <div class=\"text-job font-16\">+123 87654533</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Status</div>\r\n                  <div class=\"col-green\">Confirm</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Location</div>\r\n                  <div class=\"text-job font-16\">Clemency Hospital</div>\r\n                </div>\r\n                <div class=\"media-cta\">\r\n                  <td>\r\n                    <button mat-icon-button class=\"btn-tbl-confirm\">\r\n                      <mat-icon>done</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button class=\"btn-tbl-reject\">\r\n                      <mat-icon>close</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                </div>\r\n              </li>\r\n              <li class=\"app-list\">\r\n                <img alt=\"image\" class=\"msr-3 rounded-circle\" width=\"40\" src=\"assets/images/user/usrbig6.jpg\">\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title font-16\">Dr.Jens Brincker</div>\r\n                  <div class=\"text-job text-muted mb-0\">Endocrinologist</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title font-16\">12 June '20</div>\r\n                  <div class=\"text-job text-muted mb-0\">04:00-05:00</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Treatement</div>\r\n                  <div class=\"text-job font-16\">Diabetes</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Contact Number</div>\r\n                  <div class=\"text-job font-16\">+123 45678345</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Status</div>\r\n                  <div class=\"col-red\">Cancelled</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Location</div>\r\n                  <div class=\"text-job font-16\">Hopevale Clinic</div>\r\n                </div>\r\n                <div class=\"media-cta\">\r\n                  <td>\r\n                    <button mat-icon-button class=\"btn-tbl-confirm\">\r\n                      <mat-icon>done</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button class=\"btn-tbl-reject\">\r\n                      <mat-icon>close</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                </div>\r\n              </li>\r\n              <li class=\"app-list\">\r\n                <img alt=\"image\" class=\"msr-3 rounded-circle\" width=\"40\" src=\"assets/images/user/usrbig7.jpg\">\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title font-16\">Dr.Jamie Blair</div>\r\n                  <div class=\"text-job text-muted mb-0\">Radiologist</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title font-16\">12 June '20</div>\r\n                  <div class=\"text-job text-muted mb-0\">05:00-05:30</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Treatement</div>\r\n                  <div class=\"text-job font-16\">Diabetes</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Contact Number</div>\r\n                  <div class=\"text-job font-16\">+123 45678345</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Status</div>\r\n                  <div class=\"col-green\">Confirm</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Location</div>\r\n                  <div class=\"text-job font-16\">Pinevale Medical Center</div>\r\n                </div>\r\n                <div class=\"media-cta\">\r\n                  <td>\r\n                    <button mat-icon-button class=\"btn-tbl-confirm\">\r\n                      <mat-icon>done</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button class=\"btn-tbl-reject\">\r\n                      <mat-icon>close</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                </div>\r\n              </li>\r\n              <li class=\"app-list\">\r\n                <img alt=\"image\" class=\"msr-3 rounded-circle\" width=\"40\" src=\"assets/images/user/usrbig8.jpg\">\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title font-16\">Dr.Nikki Barton</div>\r\n                  <div class=\"text-job text-muted mb-0\">Endocrinologist</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title font-16\">12 June '20</div>\r\n                  <div class=\"text-job text-muted mb-0\">06:00-07:00</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Treatement</div>\r\n                  <div class=\"text-job font-16\">X-Ray</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Contact Number</div>\r\n                  <div class=\"text-job font-16\">+123 45678345</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Status</div>\r\n                  <div class=\"col-orange\">Pending</div>\r\n                </div>\r\n                <div class=\"set-flex\">\r\n                  <div class=\"media-title text-muted mb-0\">Location</div>\r\n                  <div class=\"text-job font-16\">Hopevale Clinic</div>\r\n                </div>\r\n                <div class=\"media-cta\">\r\n                  <td>\r\n                    <button mat-icon-button class=\"btn-tbl-confirm\">\r\n                      <mat-icon>done</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button class=\"btn-tbl-reject\">\r\n                      <mat-icon>close</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { UpcomingAppointmentService } from \"../../upcoming-appointment.service\";\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public appointmentService: UpcomingAppointmentService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.appointmentService.deleteUpcomingAppointment(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Name: </span>{{data.doctor}}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Email: </span>{{ data.email }}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <img [src]='appointment.img' alt=\"avatar\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 msl-3 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"appointmentForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n            <mat-label>Doctor Name</mat-label>\r\n            <mat-select formControlName=\"doctor\" required>\r\n              <mat-option [value]=\"'Dr.Rajesh'\">\r\n                Dr.Rajesh\r\n              </mat-option>\r\n              <mat-option [value]=\"'Dr.Sarah Smith'\">\r\n                Dr.Sarah Smith\r\n              </mat-option>\r\n              <mat-option [value]=\"'Dr.Jay Soni'\">\r\n                Dr.Jay Soni\r\n              </mat-option>\r\n              <mat-option [value]=\"'Dr.Pooja Patel'\">\r\n                Dr.Pooja Patel\r\n              </mat-option>\r\n              <mat-option [value]=\"' Dr.Jamie Blair'\">\r\n                Dr.Jamie Blair\r\n              </mat-option>\r\n              <mat-option [value]=\"'Other'\">\r\n                Other\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"appointmentForm.get('doctor').hasError('required')\">\r\n              Doctor Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput formControlName=\"email\" required>\r\n            <mat-icon matSuffix>email</mat-icon>\r\n            <mat-error\r\n              *ngIf=\"appointmentForm.get('email').hasError('required') || appointmentForm.get('email').touched\">\r\n              Please enter a valid email address\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Choose a date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\" required>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"appointmentForm.get('date').hasError('required')\">\r\n              Please select date\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Time</mat-label>\r\n            <input matInput formControlName=\"time\" required>\r\n            <mat-icon matSuffix>access_time</mat-icon>\r\n            <mat-error *ngIf=\"appointmentForm.get('time').hasError('required')\">\r\n              Please select time\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Mobile</mat-label>\r\n            <input matInput formControlName=\"mobile\" type=\"number\" required>\r\n            <mat-icon matSuffix>phone</mat-icon>\r\n            <mat-error *ngIf=\"appointmentForm.get('mobile').hasError('required')\">\r\n              Mobile is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Injury/Condition</mat-label>\r\n            <textarea matInput formControlName=\"injury\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!appointmentForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { UpcomingAppointmentService } from \"../../upcoming-appointment.service\";\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder,\r\n} from \"@angular/forms\";\r\nimport { UpcomingAppointment } from \"../../upcoming-appointment.model\";\r\nimport { MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { formatDate } from \"@angular/common\";\r\n@Component({\r\n  selector: \"app-form-dialog\",\r\n  templateUrl: \"./form-dialog.component.html\",\r\n  styleUrls: [\"./form-dialog.component.sass\"],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: \"en-GB\" }],\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  appointmentForm: FormGroup;\r\n  appointment: UpcomingAppointment;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public appointmentService: UpcomingAppointmentService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === \"edit\") {\r\n      console.log(data.appointment.date);\r\n      this.dialogTitle = data.appointment.doctor;\r\n      this.appointment = data.appointment;\r\n    } else {\r\n      this.dialogTitle = \"New Appointment\";\r\n      this.appointment = new UpcomingAppointment({});\r\n    }\r\n    this.appointmentForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl(\"\", [\r\n    Validators.required,\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError(\"required\")\r\n      ? \"Required field\"\r\n      : this.formControl.hasError(\"email\")\r\n      ? \"Not a valid email\"\r\n      : \"\";\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.appointment.id],\r\n      img: [this.appointment.img],\r\n      email: [\r\n        this.appointment.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      date: [\r\n        formatDate(this.appointment.date, \"yyyy-MM-dd\", \"en\"),\r\n        [Validators.required],\r\n      ],\r\n      time: [this.appointment.time, [Validators.required]],\r\n      mobile: [this.appointment.mobile, [Validators.required]],\r\n      doctor: [this.appointment.doctor, [Validators.required]],\r\n      injury: [this.appointment.injury],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.appointmentService.addUpcomingAppointment(\r\n      this.appointmentForm.getRawValue()\r\n    );\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Upcoming</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/patient/dashboard\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Upcoming Appointments</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ms-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Upcoming Appointments</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"img\">\r\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\"> Image\r\n                  </mat-header-cell>\r\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\"> <img\r\n                      [src]=\"row.img\" />\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"doctor\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Doctor Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.doctor}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"email\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.email}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Appo. Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy' }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"time\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Appo. Time</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.time}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"mobile\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.mobile}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"injury\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Injury/Condition\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.injury}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(i, row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { UpcomingAppointmentService } from \"./upcoming-appointment.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { UpcomingAppointment } from \"./upcoming-appointment.model\";\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { FormDialogComponent } from \"./dialogs/form-dialog/form-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./dialogs/delete/delete.component\";\r\nimport { DateAdapter, MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n\r\n@Component({\r\n  selector: \"app-upcoming-appointment\",\r\n  templateUrl: \"./upcoming-appointment.component.html\",\r\n  styleUrls: [\"./upcoming-appointment.component.sass\"],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: \"en-GB\" }],\r\n})\r\nexport class UpcomingAppointmentComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    \"select\",\r\n    \"img\",\r\n    \"doctor\",\r\n    \"date\",\r\n    \"time\",\r\n    \"email\",\r\n    \"mobile\",\r\n    \"injury\",\r\n    \"actions\",\r\n  ];\r\n  exampleDatabase: UpcomingAppointmentService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<UpcomingAppointment>(true, []);\r\n  index: number;\r\n  id: number;\r\n  appointment: UpcomingAppointment | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public appointmentService: UpcomingAppointmentService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<UpcomingAppointment>(true, []);\r\n    });\r\n    this.showNotification(\r\n      \"snackbar-danger\",\r\n      totalSelect + \" Record Delete Successfully...!!!\",\r\n      \"bottom\",\r\n      \"center\"\r\n    );\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        appointment: this.appointment,\r\n        action: \"add\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.appointmentService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-success\",\r\n          \"Add Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        appointment: row,\r\n        action: \"edit\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.appointmentService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"black\",\r\n          \"Edit Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(i: number, row) {\r\n    this.index = i;\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-danger\",\r\n          \"Delete Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new UpcomingAppointmentService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, \"keyup\").subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, \"\", {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<UpcomingAppointment> {\r\n  filterChange = new BehaviorSubject(\"\");\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: UpcomingAppointment[] = [];\r\n  renderedData: UpcomingAppointment[] = [];\r\n  constructor(\r\n    public exampleDatabase: UpcomingAppointmentService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<UpcomingAppointment[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllUpcomingAppointment();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((appointment: UpcomingAppointment) => {\r\n            const searchStr = (\r\n              appointment.email +\r\n              appointment.date +\r\n              appointment.time +\r\n              appointment.doctor +\r\n              appointment.injury +\r\n              appointment.mobile\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: UpcomingAppointment[]): UpcomingAppointment[] {\r\n    if (!this._sort.active || this._sort.direction === \"\") {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = \"\";\r\n      let propertyB: number | string = \"\";\r\n      switch (this._sort.active) {\r\n        case \"id\":\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case \"doctor\":\r\n          [propertyA, propertyB] = [a.name, b.name];\r\n          break;\r\n        case \"email\":\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n        case \"date\":\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n        case \"time\":\r\n          [propertyA, propertyB] = [a.time, b.time];\r\n          break;\r\n        case \"mobile\":\r\n          [propertyA, propertyB] = [a.mobile, b.mobile];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { formatDate } from \"@angular/common\";\r\nexport class UpcomingAppointment {\r\n  id: number;\r\n  img: string;\r\n  name: string;\r\n  email: string;\r\n  gender: string;\r\n  date: string;\r\n  time: string;\r\n  mobile: string;\r\n  doctor: string;\r\n  injury: string;\r\n  constructor(appointment) {\r\n    {\r\n      this.id = appointment.id || this.getRandomID();\r\n      this.img = appointment.avatar || \"assets/images/user/user1.jpg\";\r\n      this.name = appointment.name || \"\";\r\n      this.email = appointment.email || \"\";\r\n      this.gender = appointment.gender || \"male\";\r\n      this.date = formatDate(new Date(), \"yyyy-MM-dd\", \"en\") || \"\";\r\n      this.time = appointment.time || \"\";\r\n      this.mobile = appointment.mobile || \"\";\r\n      this.doctor = appointment.mobile || \"\";\r\n      this.injury = appointment.mobile || \"\";\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { UpcomingAppointment } from \"./upcoming-appointment.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n@Injectable()\r\nexport class UpcomingAppointmentService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = \"assets/data/upcoming-appointment.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<UpcomingAppointment[]> = new BehaviorSubject<\r\n    UpcomingAppointment[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): UpcomingAppointment[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllUpcomingAppointment(): void {\r\n    this.subs.sink = this.httpClient\r\n      .get<UpcomingAppointment[]>(this.API_URL)\r\n      .subscribe(\r\n        (data) => {\r\n          this.isTblLoading = false;\r\n          this.dataChange.next(data);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          this.isTblLoading = false;\r\n          console.log(error.name + \" \" + error.message);\r\n        }\r\n      );\r\n  }\r\n  addUpcomingAppointment(appointment: UpcomingAppointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /*  this.httpClient.post(this.API_URL, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateUpcomingAppointment(appointment: UpcomingAppointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /* this.httpClient.put(this.API_URL + appointment.id, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteUpcomingAppointment(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n"]}