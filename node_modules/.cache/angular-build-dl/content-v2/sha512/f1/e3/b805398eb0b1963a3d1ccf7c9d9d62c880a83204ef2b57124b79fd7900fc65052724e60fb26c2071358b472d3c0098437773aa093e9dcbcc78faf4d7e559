{"version":3,"sources":["webpack:///src/app/authentication/authentication-routing.module.ts","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/forgot-password/forgot-password.component.html","webpack:///src/app/authentication/forgot-password/forgot-password.component.ts","webpack:///src/app/authentication/locked/locked.component.html","webpack:///src/app/authentication/locked/locked.component.ts","webpack:///src/app/authentication/page500/page500.component.ts","webpack:///src/app/authentication/page500/page500.component.html","webpack:///src/app/authentication/signin/signin.component.html","webpack:///src/app/authentication/signin/signin.component.ts","webpack:///src/app/authentication/signup/signup.component.html","webpack:///src/app/authentication/signup/signup.component.ts"],"names":["routes","path","redirectTo","pathMatch","component","SigninComponent","SignupComponent","ForgotPasswordComponent","LockedComponent","Page404Component","Page500Component","AuthenticationRoutingModule","RouterModule","AuthenticationModule","CommonModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatIconModule","MatButtonModule","formBuilder","route","router","submitted","authForm","group","email","Validators","returnUrl","snapshot","queryParams","controls","invalid","navigate","onSubmit","authService","hide","password","userImg","currentUserValue","img","userFullName","firstName","lastName","role","Role","loading","error","username","get","setValue","subs","sink","login","f","value","subscribe","res","setTimeout","UnsubscribeOnDestroyAdapter","adminSet","doctorSet","patientSet","chide","cpassword"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,kBAAU,EAAE,QAFd;AAGEC,iBAAS,EAAE;AAHb,OADqB,EAMrB;AACEF,YAAI,EAAE,QADR;AAEEG,iBAAS,EAAE,sDAAAC;AAFb,OANqB,EAUrB;AACEJ,YAAI,EAAE,QADR;AAEEG,iBAAS,EAAE,sDAAAE;AAFb,OAVqB,EAcrB;AACEL,YAAI,EAAE,iBADR;AAEEG,iBAAS,EAAE,wEAAAG;AAFb,OAdqB,EAkBrB;AACEN,YAAI,EAAE,QADR;AAEEG,iBAAS,EAAE,sDAAAI;AAFb,OAlBqB,EAsBrB;AACEP,YAAI,EAAE,SADR;AAEEG,iBAAS,EAAE,wDAAAK;AAFb,OAtBqB,EA0BrB;AACER,YAAI,EAAE,SADR;AAEEG,iBAAS,EAAE,wDAAAM;AAFb,OA1BqB,CAAvB;;UAmCaC,4B;;;;;yBAAAA,4B;AAA2B,O;;;cAA3BA;;;kBAHF,CAAC,6CAAAC,YAAA,UAAsBZ,MAAtB,CAAD,C,EACC,6CAAAY,Y;;;;4HAECD,4B,EAA2B;AAAA;AAAA,oBAF5B,6CAAAC,YAE4B;AAAA,S;AAFhB,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCNXC,qB;;;;;yBAAAA,qB;AAAoB,O;;;cAApBA;;;kBAXF,CACP,6CAAAC,YADO,EAEP,4CAAAC,WAFO,EAGP,4CAAAC,mBAHO,EAIP,4DAAAL,2BAJO,EAKP,2DAAAM,kBALO,EAMP,sDAAAC,cANO,EAOP,qDAAAC,aAPO,EAQP,uDAAAC,eARO,C;;;;4HAWEP,qB,EAAoB;AAAA,yBAlB7B,wDAAAH,gBAkB6B,EAjB7B,wDAAAD,gBAiB6B,EAhB7B,sDAAAJ,eAgB6B,EAf7B,sDAAAC,eAe6B,EAd7B,sDAAAE,eAc6B,EAb7B,wEAAAD,uBAa6B;AAbN,oBAGvB,6CAAAO,YAHuB,EAIvB,4CAAAC,WAJuB,EAKvB,4CAAAC,mBALuB,EAMvB,4DAAAL,2BANuB,EAOvB,2DAAAM,kBAPuB,EAQvB,sDAAAC,cARuB,EASvB,qDAAAC,aATuB,EAUvB,uDAAAC,eAVuB;AAaM,S;AAHd,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXD;;AACE;;AACF;;;;UCfLb,wB;AAIX,0CACUc,WADV,EAEUC,KAFV,EAGUC,MAHV,EAGwB;AAAA;;AAFd,eAAAF,WAAA,GAAAA,WAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AALV,eAAAC,SAAA,GAAY,KAAZ;AAMI;;;;iBACJ,oBAAW;AACT,iBAAKC,QAAL,GAAgB,KAAKJ,WAAL,CAAiBK,KAAjB,CAAuB;AACrCC,mBAAK,EAAE,CACL,EADK,EAEL,CAAC,4CAAAC,UAAA,SAAD,EAAsB,4CAAAA,UAAA,MAAtB,EAAwC,4CAAAA,UAAA,WAAqB,CAArB,CAAxC,CAFK;AAD8B,aAAvB,CAAhB,CADS,CAOT;;AACA,iBAAKC,SAAL,GAAiB,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,GAAjE;AACD;;;eACD,eAAQ;AACN,mBAAO,KAAKN,QAAL,CAAcO,QAArB;AACD;;;iBACD,oBAAW;AACT,iBAAKR,SAAL,GAAiB,IAAjB,CADS,CAET;;AACA,gBAAI,KAAKC,QAAL,CAAcQ,OAAlB,EAA2B;AACzB;AACD,aAFD,MAEO;AACL,mBAAKV,MAAL,CAAYW,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;AACF;;;;;;;yBA9BU3B,wB,EAAuB,wH,EAAA,4H,EAAA,oH;AAAA,O;;;cAAvBA,wB;AAAuB,4C;AAAA,iB;AAAA,e;AAAA,+2B;AAAA;AAAA;ADRpC;;AACE;;AACE;;AACE;;AAEF;;AACA;;AACE;;AACE;;AACE;;AAAyB;;AAAe;;AACxC;;AAAuC;;AAAe;;AACtD;;AAAmD;AAAA,qBAAY,IAAA4B,QAAA,EAAZ;AAAsB,aAAtB;;AACjD;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAAoB;;AAAI;;AACxB;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEF;;AACF;;;;AAlCsC;;AAAA;;AAUR;;AAAA;;AAO8C;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEK1D;;AACE;;AACF;;;;UCzBL3B,gB;AAMX,kCACUa,WADV,EAEUE,MAFV,EAGUa,WAHV,EAGkC;AAAA;;AAFxB,eAAAf,WAAA,GAAAA,WAAA;AACA,eAAAE,MAAA,GAAAA,MAAA;AACA,eAAAa,WAAA,GAAAA,WAAA;AAPV,eAAAZ,SAAA,GAAY,KAAZ;AAGA,eAAAa,IAAA,GAAO,IAAP;AAKI;;;;iBACJ,oBAAW;AACT,iBAAKZ,QAAL,GAAgB,KAAKJ,WAAL,CAAiBK,KAAjB,CAAuB;AACrCY,sBAAQ,EAAE,CAAC,EAAD,EAAK,4CAAAV,UAAA,SAAL;AAD2B,aAAvB,CAAhB;AAGA,iBAAKW,OAAL,GAAe,KAAKH,WAAL,CAAiBI,gBAAjB,CAAkCC,GAAjD;AACA,iBAAKC,YAAL,GACE,KAAKN,WAAL,CAAiBI,gBAAjB,CAAkCG,SAAlC,GACA,GADA,GAEA,KAAKP,WAAL,CAAiBI,gBAAjB,CAAkCI,QAHpC;AAID;;;eACD,eAAQ;AACN,mBAAO,KAAKnB,QAAL,CAAcO,QAArB;AACD;;;iBACD,oBAAW;AACT,iBAAKR,SAAL,GAAiB,IAAjB,CADS,CAET;;AACA,gBAAI,KAAKC,QAAL,CAAcQ,OAAlB,EAA2B;AACzB;AACD,aAFD,MAEO;AACL,kBAAMY,IAAI,GAAG,KAAKT,WAAL,CAAiBI,gBAAjB,CAAkCK,IAA/C;;AACA,kBAAIA,IAAI,KAAK,sDAAAC,IAAA,IAAT,IAAqBD,IAAI,KAAK,sDAAAC,IAAA,MAAlC,EAA8C;AAC5C,qBAAKvB,MAAL,CAAYW,QAAZ,CAAqB,CAAC,uBAAD,CAArB;AACD,eAFD,MAEO,IAAIW,IAAI,KAAK,sDAAAC,IAAA,OAAb,EAA0B;AAC/B,qBAAKvB,MAAL,CAAYW,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD,eAFM,MAEA,IAAIW,IAAI,KAAK,sDAAAC,IAAA,QAAb,EAA2B;AAChC,qBAAKvB,MAAL,CAAYW,QAAZ,CAAqB,CAAC,oBAAD,CAArB;AACD,eAFM,MAEA;AACL,qBAAKX,MAAL,CAAYW,QAAZ,CAAqB,CAAC,wBAAD,CAArB;AACD;AACF;AACF;;;;;;;yBAzCU1B,gB,EAAe,wH,EAAA,oH,EAAA,2I;AAAA,O;;;cAAfA,gB;AAAe,mC;AAAA,iB;AAAA,e;AAAA,8+B;AAAA;AAAA;ADV5B;;AACE;;AACE;;AACE;;AAEF;;AACA;;AACE;;AACE;;AACE;;AAAmD;AAAA,qBAAY,IAAA2B,QAAA,EAAZ;AAAsB,aAAtB;;AACjD;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAAoB;AAAA;AAAA;;AAClB;;AAA0C;;AAC5C;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEF;;AACF;;;;AAhDsC;;AAAA;;AAGjB;;AAAA;;AAIP;;AAAA;;AAc+C;;AAAA;;AAEzC;;AAAA;;AACU;;AAAA;;AAO8C;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UElC/DzB,iB;AACX,qCAAc;AAAA;AAAE;;;;iBAChB,oBAAW,CAAE;;;;;;;yBAFFA,iB;AAAgB,O;;;cAAhBA,iB;AAAgB,oC;AAAA,iB;AAAA,e;AAAA,kjB;AAAA;AAAA;ACN7B;;AACE;;AACE;;AACE;;AAEF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDkB;;AACE;;AACF;;;;;;AAaA;;AACE;;AACF;;;;;;AAeN;;AAAwD;;AAAS;;;;;;AAAT;;AAAA;;;;UCrDvDL,gB;;;;;AASX,kCACUgB,WADV,EAEUC,KAFV,EAGUC,MAHV,EAIUa,WAJV,EAIkC;AAAA;;AAAA;;AAEhC;AALQ,gBAAAf,WAAA,GAAAA,WAAA;AACA,gBAAAC,KAAA,GAAAA,KAAA;AACA,gBAAAC,MAAA,GAAAA,MAAA;AACA,gBAAAa,WAAA,GAAAA,WAAA;AARV,gBAAAZ,SAAA,GAAY,KAAZ;AACA,gBAAAuB,OAAA,GAAU,KAAV;AACA,gBAAAC,KAAA,GAAQ,EAAR;AACA,gBAAAX,IAAA,GAAO,IAAP;AAKkC;AAGjC;;;;iBAED,oBAAW;AACT,iBAAKZ,QAAL,GAAgB,KAAKJ,WAAL,CAAiBK,KAAjB,CAAuB;AACrCuB,sBAAQ,EAAE,CAAC,oBAAD,EAAuB,4CAAArB,UAAA,SAAvB,CAD2B;AAErCU,sBAAQ,EAAE,CAAC,WAAD,EAAc,4CAAAV,UAAA,SAAd;AAF2B,aAAvB,CAAhB;AAID;;;eACD,eAAQ;AACN,mBAAO,KAAKH,QAAL,CAAcO,QAArB;AACD;;;iBACD,oBAAW;AACT,iBAAKP,QAAL,CAAcyB,GAAd,CAAkB,UAAlB,EAA8BC,QAA9B,CAAuC,oBAAvC;AACA,iBAAK1B,QAAL,CAAcyB,GAAd,CAAkB,UAAlB,EAA8BC,QAA9B,CAAuC,WAAvC;AACD;;;iBACD,qBAAY;AACV,iBAAK1B,QAAL,CAAcyB,GAAd,CAAkB,UAAlB,EAA8BC,QAA9B,CAAuC,qBAAvC;AACA,iBAAK1B,QAAL,CAAcyB,GAAd,CAAkB,UAAlB,EAA8BC,QAA9B,CAAuC,YAAvC;AACD;;;iBACD,sBAAa;AACX,iBAAK1B,QAAL,CAAcyB,GAAd,CAAkB,UAAlB,EAA8BC,QAA9B,CAAuC,sBAAvC;AACA,iBAAK1B,QAAL,CAAcyB,GAAd,CAAkB,UAAlB,EAA8BC,QAA9B,CAAuC,aAAvC;AACD;;;iBACD,oBAAW;AAAA;;AACT,iBAAK3B,SAAL,GAAiB,IAAjB;AACA,iBAAKuB,OAAL,GAAe,IAAf;AACA,iBAAKC,KAAL,GAAa,EAAb;;AACA,gBAAI,KAAKvB,QAAL,CAAcQ,OAAlB,EAA2B;AACzB,mBAAKe,KAAL,GAAa,mCAAb;AACA;AACD,aAHD,MAGO;AACL,mBAAKI,IAAL,CAAUC,IAAV,GAAiB,KAAKjB,WAAL,CACdkB,KADc,CACR,KAAKC,CAAL,CAAON,QAAP,CAAgBO,KADR,EACe,KAAKD,CAAL,CAAOjB,QAAP,CAAgBkB,KAD/B,EAEdC,SAFc,CAGb,UAACC,GAAD,EAAS;AACP,oBAAIA,GAAJ,EAAS;AACPC,4BAAU,CAAC,YAAM;AACf,wBAAMd,IAAI,GAAG,MAAI,CAACT,WAAL,CAAiBI,gBAAjB,CAAkCK,IAA/C;;AACA,wBAAIA,IAAI,KAAK,sDAAAC,IAAA,IAAT,IAAqBD,IAAI,KAAK,sDAAAC,IAAA,MAAlC,EAA8C;AAC5C,4BAAI,CAACvB,MAAL,CAAYW,QAAZ,CAAqB,CAAC,uBAAD,CAArB;AACD,qBAFD,MAEO,IAAIW,IAAI,KAAK,sDAAAC,IAAA,OAAb,EAA0B;AAC/B,4BAAI,CAACvB,MAAL,CAAYW,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD,qBAFM,MAEA,IAAIW,IAAI,KAAK,sDAAAC,IAAA,QAAb,EAA2B;AAChC,4BAAI,CAACvB,MAAL,CAAYW,QAAZ,CAAqB,CAAC,oBAAD,CAArB;AACD,qBAFM,MAEA;AACL,4BAAI,CAACX,MAAL,CAAYW,QAAZ,CAAqB,CAAC,wBAAD,CAArB;AACD;;AACD,0BAAI,CAACa,OAAL,GAAe,KAAf;AACD,mBAZS,EAYP,IAZO,CAAV;AAaD,iBAdD,MAcO;AACL,wBAAI,CAACC,KAAL,GAAa,eAAb;AACD;AACF,eArBY,EAsBb,UAACA,KAAD,EAAW;AACT,sBAAI,CAACA,KAAL,GAAaA,KAAb;AACA,sBAAI,CAACxB,SAAL,GAAiB,KAAjB;AACA,sBAAI,CAACuB,OAAL,GAAe,KAAf;AACD,eA1BY,CAAjB;AA4BD;AACF;;;;QA3EO,wEAAAa,2B;;;yBADGvD,gB,EAAe,wH,EAAA,4H,EAAA,oH,EAAA,2I;AAAA,O;;;cAAfA,gB;AAAe,mC;AAAA,4F;AAAA,iB;AAAA,gB;AAAA,4+D;AAAA;AAAA;ADX5B;;AACE;;AACE;;AACE;;AAEF;;AACA;;AACE;;AACE;;AACE;;AAAyB;;AAAmB;;AAC5C;;AAAuC;;AAAgB;;AAC9B;;AACvB;;AAAI;;AACN;;AACE;;AACE;;AAAwD;AAAA,qBAAS,IAAAwD,QAAA,EAAT;AAAmB,aAAnB;;AAAsB;;AAAK;;AACrF;;AACA;;AACE;;AAAuD;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AAAuB;;AAAM;;AACtF;;AACA;;AACE;;AAAqD;AAAA,qBAAS,IAAAC,UAAA,EAAT;AAAqB,aAArB;;AAAwB;;AAAO;;AACtF;;AACF;;AACA;;AAAwB;;AAAO;;AAC/B;;AAAmD;AAAA,qBAAY,IAAA5B,QAAA,EAAZ;AAAsB,aAAtB;;AACjD;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAAoB;;AAAI;;AACxB;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAAoE;AAAA;AAAA;;AAElE;;AAAU;;AAA0C;;AACtD;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAA0D;;AAC1D;;AACE;;AACF;;AACF;;AACF;;AACA;;AAA6D;;AAAgB;;AAC/E;;AACA;;AACA;;AACE;;AACE;;AACoE;;AAAI;;AAC1E;;AACF;;AACF;;AACA;;AAA+B;;AAAE;;AACjC;;AACE;;AAA6B;;AACzB;;AACF;;AAAI;;AACN;;AAA6B;;AACzB;;AACF;;AAAI;;AACN;;AAA6B;;AACzB;;AACF;;AAAI;;AACN;;AAA6B;;AACzB;;AACF;;AAAI;;AACR;;AACF;;AACF;;AACF;;AAEF;;AACF;;;;AAnEsC;;AAAA;;AAOR;;AAAA;;AAUI;;AAAA;;AAEd;;AAAA,qGAAmC,cAAnC,EAAmC,QAAnC;;AACU;;AAAA;;AAEA;;AAAA;;AAiBZ;;AAAA;;AAGwC;;AAAA;;AAA+B,8FAAoB,UAApB,EAAoB,mBAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjDvE;;AACE;;AACF;;;;;;AAUA;;AACE;;AACF;;;;;;AAWA;;AACE;;AACF;;;;;;AAWA;;AACE;;AACF;;;;UClDL7B,gB;AAMX,kCACUe,WADV,EAEUC,KAFV,EAGUC,MAHV,EAGwB;AAAA;;AAFd,eAAAF,WAAA,GAAAA,WAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAPV,eAAAC,SAAA,GAAY,KAAZ;AAEA,eAAAa,IAAA,GAAO,IAAP;AACA,eAAA2B,KAAA,GAAQ,IAAR;AAKI;;;;iBACJ,oBAAW;AACT,iBAAKvC,QAAL,GAAgB,KAAKJ,WAAL,CAAiBK,KAAjB,CAAuB;AACrCuB,sBAAQ,EAAE,CAAC,EAAD,EAAK,4CAAArB,UAAA,SAAL,CAD2B;AAErCD,mBAAK,EAAE,CACL,EADK,EAEL,CAAC,4CAAAC,UAAA,SAAD,EAAsB,4CAAAA,UAAA,MAAtB,EAAwC,4CAAAA,UAAA,WAAqB,CAArB,CAAxC,CAFK,CAF8B;AAMrCU,sBAAQ,EAAE,CAAC,EAAD,EAAK,4CAAAV,UAAA,SAAL,CAN2B;AAOrCqC,uBAAS,EAAE,CAAC,EAAD,EAAK,4CAAArC,UAAA,SAAL;AAP0B,aAAvB,CAAhB,CADS,CAUT;;AACA,iBAAKC,SAAL,GAAiB,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,GAAjE;AACD;;;eACD,eAAQ;AACN,mBAAO,KAAKN,QAAL,CAAcO,QAArB;AACD;;;iBACD,oBAAW;AACT,iBAAKR,SAAL,GAAiB,IAAjB,CADS,CAET;;AACA,gBAAI,KAAKC,QAAL,CAAcQ,OAAlB,EAA2B;AACzB;AACD,aAFD,MAEO;AACL,mBAAKV,MAAL,CAAYW,QAAZ,CAAqB,CAAC,uBAAD,CAArB;AACD;AACF;;;;;;;yBAnCU5B,gB,EAAe,wH,EAAA,4H,EAAA,oH;AAAA,O;;;cAAfA,gB;AAAe,mC;AAAA,iB;AAAA,gB;AAAA,k6C;AAAA;AAAA;ADR5B;;AACE;;AACE;;AACE;;AAEF;;AACA;;AACE;;AACE;;AACE;;AAAyB;;AAAQ;;AACjC;;AAAuC;;AAAoC;;AAC3E;;AAAmD;AAAA,qBAAY,IAAA6B,QAAA,EAAZ;AAAsB,aAAtB;;AACjD;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAAoB;;AAAI;;AACxB;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAAoB;;AAAI;;AACxB;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAAoB;AAAA;AAAA;;AAClB;;AAA0C;;AAC5C;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACA;;AAAoB;AAAA;AAAA;;AAClB;;AAA2C;;AAC7C;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAM;;AAAoB;;AACtB;;AACF;;AAAI;;AACR;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AAA+B;;AAAE;;AACjC;;AACE;;AAA6B;;AACzB;;AACF;;AAAI;;AACN;;AAA6B;;AACzB;;AACF;;AAAI;;AACN;;AAA6B;;AACzB;;AACF;;AAAI;;AACN;;AAA6B;;AACzB;;AACF;;AAAI;;AACR;;AACF;;AACF;;AACF;;AAEF;;AACF;;;;AApFsC;;AAAA;;AAOR;;AAAA;;AAYA;;AAAA;;AAU+B;;AAAA;;AAEzC;;AAAA;;AACU;;AAAA;;AAUgC;;AAAA;;AAE1C;;AAAA;;AACU;;AAAA;;AAc8C;;AAAA","file":"src_app_authentication_authentication_module_ts-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { LockedComponent } from \"./locked/locked.component\";\r\nimport { Page404Component } from \"./page404/page404.component\";\r\nimport { Page500Component } from \"./page500/page500.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"signin\",\r\n    pathMatch: \"full\",\r\n  },\r\n  {\r\n    path: \"signin\",\r\n    component: SigninComponent,\r\n  },\r\n  {\r\n    path: \"signup\",\r\n    component: SignupComponent,\r\n  },\r\n  {\r\n    path: \"forgot-password\",\r\n    component: ForgotPasswordComponent,\r\n  },\r\n  {\r\n    path: \"locked\",\r\n    component: LockedComponent,\r\n  },\r\n  {\r\n    path: \"page404\",\r\n    component: Page404Component,\r\n  },\r\n  {\r\n    path: \"page500\",\r\n    component: Page500Component,\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AuthenticationRoutingModule } from \"./authentication-routing.module\";\r\nimport { Page500Component } from \"./page500/page500.component\";\r\nimport { Page404Component } from \"./page404/page404.component\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { LockedComponent } from \"./locked/locked.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\n@NgModule({\r\n  declarations: [\r\n    Page500Component,\r\n    Page404Component,\r\n    SigninComponent,\r\n    SignupComponent,\r\n    LockedComponent,\r\n    ForgotPasswordComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AuthenticationRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class AuthenticationModule {}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-03.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\"> Reset Password </h2>\r\n          <p class=\"auth-signup-text text-muted\">Let Us Help You</p>\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                  Enter your registered email address.\r\n                </span>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput formControlName=\"email\" required>\r\n                  <mat-icon matSuffix>mail</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('email').hasError('required') || authForm.get('email').touched\">\r\n                    Please enter a valid email address\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\r\n                Reset My Password\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-25 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Login?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-forgot-password\",\r\n  templateUrl: \"./forgot-password.component.html\",\r\n  styleUrls: [\"./forgot-password.component.scss\"],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      email: [\r\n        \"\",\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate([\"/dashboard/main\"]);\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-01.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"auth-locked\">\r\n              <div class=\"image\">\r\n                <img src={{userImg}} alt=\"User\">\r\n              </div>\r\n            </div>\r\n            <span class=\"auth-locked-title p-b-34 p-t-27\">\r\n              {{userFullName}}\r\n            </span>\r\n            <div class=\"text-center\">\r\n              <p class=\"txt1 p-b-20\">\r\n                Locked\r\n              </p>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                  Enter your password here.\r\n                </span>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\r\n                Reset My Password\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Need Help?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { AuthService } from \"src/app/core/service/auth.service\";\r\nimport { Role } from \"src/app/core/models/role\";\r\n@Component({\r\n  selector: \"app-locked\",\r\n  templateUrl: \"./locked.component.html\",\r\n  styleUrls: [\"./locked.component.scss\"],\r\n})\r\nexport class LockedComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  userImg: string;\r\n  userFullName: string;\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      password: [\"\", Validators.required],\r\n    });\r\n    this.userImg = this.authService.currentUserValue.img;\r\n    this.userFullName =\r\n      this.authService.currentUserValue.firstName +\r\n      \" \" +\r\n      this.authService.currentUserValue.lastName;\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      const role = this.authService.currentUserValue.role;\r\n      if (role === Role.All || role === Role.Admin) {\r\n        this.router.navigate([\"/admin/dashboard/main\"]);\r\n      } else if (role === Role.Doctor) {\r\n        this.router.navigate([\"/doctor/dashboard\"]);\r\n      } else if (role === Role.Patient) {\r\n        this.router.navigate([\"/patient/dashboard\"]);\r\n      } else {\r\n        this.router.navigate([\"/authentication/signin\"]);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\n@Component({\r\n  selector: \"app-page500\",\r\n  templateUrl: \"./page500.component.html\",\r\n  styleUrls: [\"./page500.component.scss\"],\r\n})\r\nexport class Page500Component implements OnInit {\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-05.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <form>\r\n            <span class=\"error-header p-b-45\">\r\n              500\r\n            </span>\r\n            <span class=\"error-subheader2 p-b-5\">\r\n              Oops, Something went wrong. Please try after some times.\r\n            </span>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" type=\"submit\">\r\n                Go To Home Page\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Need Help?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-01.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\"> Welcome to Cliniva </h2>\r\n          <p class=\"auth-signup-text text-muted\">Need an account?<a routerLink=\"/authentication/signup\"\r\n              class=\"sign-up-link\">Sign Up\r\n            </a></p>\r\n          <div class=\"d-flex justify-content-between lbl-alert mb-3\">\r\n            <div>\r\n              <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"adminSet();\">Admin</button>\r\n            </div>\r\n            <div>\r\n              <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"doctorSet();\">Doctor</button>\r\n            </div>\r\n            <div>\r\n              <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"patientSet();\">Patient</button>\r\n            </div>\r\n          </div>\r\n          <h2 class=\"login-title\">Sign in</h2>\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Username</mat-label>\r\n                  <input matInput formControlName=\"username\" />\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                    Username is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\">\r\n                  <a class=\"show-pwd-icon\" href=\"#\" onClick=\"return false;\" matSuffix (click)=\"hide = !hide\"\r\n                    [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  </a>\r\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex justify-content-between align-items-center mb-5\">\r\n              <div class=\"form-check\">\r\n                <label class=\"form-check-label\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\"> Remember me\r\n                  <span class=\"form-check-sign\">\r\n                    <span class=\"check\"></span>\r\n                  </span>\r\n                </label>\r\n              </div>\r\n              <a class=\"txt1\" routerLink=\"/authentication/forgot-password\">Forgot Password?</a>\r\n            </div>\r\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <div style=\"text-align:center\">\r\n                <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"loading\" [disabled]=\"loading\"\r\n                  class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">Save</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <h6 class=\"social-login-title\">OR</h6>\r\n          <ul class=\"list-unstyled social-icon mb-0 mt-3\">\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-google\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded flex-c-m\">\r\n                <i class=\"fab fa-facebook-f\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-twitter\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-linkedin-in\"></i>\r\n              </a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { AuthService } from \"src/app/core/service/auth.service\";\r\nimport { Role } from \"src/app/core/models/role\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\n@Component({\r\n  selector: \"app-signin\",\r\n  templateUrl: \"./signin.component.html\",\r\n  styleUrls: [\"./signin.component.scss\"],\r\n})\r\nexport class SigninComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  loading = false;\r\n  error = \"\";\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      username: [\"admin@hospital.org\", Validators.required],\r\n      password: [\"admin@123\", Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  adminSet() {\r\n    this.authForm.get(\"username\").setValue(\"admin@hospital.org\");\r\n    this.authForm.get(\"password\").setValue(\"admin@123\");\r\n  }\r\n  doctorSet() {\r\n    this.authForm.get(\"username\").setValue(\"doctor@hospital.org\");\r\n    this.authForm.get(\"password\").setValue(\"doctor@123\");\r\n  }\r\n  patientSet() {\r\n    this.authForm.get(\"username\").setValue(\"patient@hospital.org\");\r\n    this.authForm.get(\"password\").setValue(\"patient@123\");\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.loading = true;\r\n    this.error = \"\";\r\n    if (this.authForm.invalid) {\r\n      this.error = \"Username and Password not valid !\";\r\n      return;\r\n    } else {\r\n      this.subs.sink = this.authService\r\n        .login(this.f.username.value, this.f.password.value)\r\n        .subscribe(\r\n          (res) => {\r\n            if (res) {\r\n              setTimeout(() => {\r\n                const role = this.authService.currentUserValue.role;\r\n                if (role === Role.All || role === Role.Admin) {\r\n                  this.router.navigate([\"/admin/dashboard/main\"]);\r\n                } else if (role === Role.Doctor) {\r\n                  this.router.navigate([\"/doctor/dashboard\"]);\r\n                } else if (role === Role.Patient) {\r\n                  this.router.navigate([\"/patient/dashboard\"]);\r\n                } else {\r\n                  this.router.navigate([\"/authentication/signin\"]);\r\n                }\r\n                this.loading = false;\r\n              }, 1000);\r\n            } else {\r\n              this.error = \"Invalid Login\";\r\n            }\r\n          },\r\n          (error) => {\r\n            this.error = error;\r\n            this.submitted = false;\r\n            this.loading = false;\r\n          }\r\n        );\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-02.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\"> Sign Up </h2>\r\n          <p class=\"auth-signup-text text-muted\">Enter details to create your account</p>\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Username</mat-label>\r\n                  <input matInput formControlName=\"username\" required>\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                    Username is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput formControlName=\"email\" required>\r\n                  <mat-icon matSuffix>mail</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('email').hasError('required') || authForm.get('email').touched\">\r\n                    Please enter a valid email address\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Confirm Password</mat-label>\r\n                  <input matInput formControlName=\"cpassword\" [type]=\"chide ? 'password' : 'text'\" required>\r\n                  <mat-icon matSuffix (click)=\"chide = !chide\">\r\n                    {{chide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('cpassword').hasError('required')\">\r\n                    Confirm Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex-sb-m w-full  p-b-20\">\r\n              <div>\r\n                <span>Already Registered? <a routerLink=\"/authentication/signin\">\r\n                    Login\r\n                  </a></span>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\r\n                Register\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <h6 class=\"social-login-title\">OR</h6>\r\n          <ul class=\"list-unstyled social-icon mb-0 mt-3\">\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-google\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded flex-c-m\">\r\n                <i class=\"fab fa-facebook-f\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-twitter\"></i>\r\n              </a></li>\r\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                <i class=\"fab fa-linkedin-in\"></i>\r\n              </a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.scss\"],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n  chide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      username: [\"\", Validators.required],\r\n      email: [\r\n        \"\",\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      password: [\"\", Validators.required],\r\n      cpassword: [\"\", Validators.required],\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate([\"/admin/dashboard/main\"]);\r\n    }\r\n  }\r\n}\r\n"]}